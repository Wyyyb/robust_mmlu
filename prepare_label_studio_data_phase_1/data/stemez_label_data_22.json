[{"data": {"text": "Question:\nN^13 decays by \\beta^+ emission. The maximum kinetic energy of the \\beta^+ is 1.19MeV. What is thenuclidicmass of N^13 ?\n\nOptions:\nA. 13.00445amu\nB. 13.00335amu\nC.             13.00000amu\nD. 13.00573amu\n\nAnswer: D\n\nReference Solution:\nIn the emission of a \\beta^+ particle, the daughter nuclide has a Z value one unit less than the parent with no change in A (mass). Thus, _ZP^A \\rightarrow Z - _1D^A + \\beta^+ , where P and D are the parent and daughter nuclides, respectively. The emitted positron (\\beta^+) is unstable and is usually consumed after being slowed down by collisions. This is shown in the following reaction \\beta^+ + \\beta^- \\rightarrow 2\\gamma . The gamma (\\gamma) radiation is a form of light. It has no mass and no charge. In this reaction, 2 photons of light are produced. The reaction in this problem is _7N^13 \\rightarrow _6C^13 + \\beta^+ In this type of process, a simple difference of whole atom masses is not desired. Whole atom masses can be used for mass difference calculations in all nuclear reactions, except in \\beta^+ processes where there is a resulting annihilation of two electron masses (one \\beta^+ and one \\beta^-). Thus, mass difference = (M_nfor _7N^13) - (M_nfor _6N^13) - M_e = [(M_nfor _7N^13) - 7M_e ] - [(M for _6N^13) - 6M_e ] - M_e = (M for _7N^13) - (M for _6C^13) - 2M_e = (M for _7N^13) - 13.00335 - 2 (0.00055) = (M for _7N^13) - 13.004445 Here,M_nis the nuclear mass (mass of neutrons and protons), M is the atomic mass, and M_e is the mass of an electron. This expression is equal to the mass equivalent of the maximum kinetic energy of the \\beta^+. [(1.19MeV) / (931.5MeV/amu)] = 0.00128amu Then, 0.00128amu= (M for _7N^13) - 13.00445 or, M for _7N^13 = 13.00445 + 0.00128= 13.00573amu.", "ref_id": 4400, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "N^13 decays by \\beta^+ emission. The maximum kinetic energy of the \\beta^+ is 1.19MeV. What is thenuclidicmass of N^13 ?", "options": ["13.00445amu", "13.00335amu", "13.00000amu", "13.00573amu"], "answer": "D", "solution": "In the emission of a \\beta^+ particle, the daughter nuclide has a Z value one unit less than the parent with no change in A (mass). Thus, _ZP^A \\rightarrow Z - _1D^A + \\beta^+ , where P and D are the parent and daughter nuclides, respectively. The emitted positron (\\beta^+) is unstable and is usually consumed after being slowed down by collisions. This is shown in the following reaction \\beta^+ + \\beta^- \\rightarrow 2\\gamma . The gamma (\\gamma) radiation is a form of light. It has no mass and no charge. In this reaction, 2 photons of light are produced. The reaction in this problem is _7N^13 \\rightarrow _6C^13 + \\beta^+ In this type of process, a simple difference of whole atom masses is not desired. Whole atom masses can be used for mass difference calculations in all nuclear reactions, except in \\beta^+ processes where there is a resulting annihilation of two electron masses (one \\beta^+ and one \\beta^-). Thus, mass difference = (M_nfor _7N^13) - (M_nfor _6N^13) - M_e = [(M_nfor _7N^13) - 7M_e ] - [(M for _6N^13) - 6M_e ] - M_e = (M for _7N^13) - (M for _6C^13) - 2M_e = (M for _7N^13) - 13.00335 - 2 (0.00055) = (M for _7N^13) - 13.004445 Here,M_nis the nuclear mass (mass of neutrons and protons), M is the atomic mass, and M_e is the mass of an electron. This expression is equal to the mass equivalent of the maximum kinetic energy of the \\beta^+. [(1.19MeV) / (931.5MeV/amu)] = 0.00128amu Then, 0.00128amu= (M for _7N^13) - 13.00445 or, M for _7N^13 = 13.00445 + 0.00128= 13.00573amu."}, "question": "task_1"}}, {"data": {"text": "Question:\nFind thehydroniumion concentration of .1M HOAC (acetic acid) solution. Assume k_a = 1.75 x 10^-5 for acetic acid.\n\nOptions:\nA. 0.002M\nB. 0.001M\nC.             0.0013M\nD. 0.0015M\n\nAnswer: C\n\nReference Solution:\nYou want to represent the equilibrium constant expression for the reaction, which necessitates a balanced equation. After writing the expression, you want to express the concentrations in terms of the same variables and solve for it. Begin by writing the balanced equation for the reaction of acetic acid in water. The acid will donate a proton (H^+) to the only available base, H_2O. Thus, HOAC + H_2O \\rightarrow H_3O^+ + OAC^-. [H_3O^+], the hydroniumconcentration, is the quantity you are looking for. The equilibrium constant expression measures the ratio of the concentrations of the products to the reactants, each raised to the power of their respective coefficients in the chemical equation. Thus, the constant, Ka, = {[OAC-] [H_3O^+]}/[ HOAC]. Notes H_2O is omitted, since it is considered a constant. Ka = 1.75 \u00d7 10^-5 . Equating, {[OAC-] [H_3O^+]}/[HOAC] = 1.75 \u00d7 10^-5. Let x = concentration of H_3O^+. According to the reaction, [H_3O^+] = [OAC^-], thus, x = concentration of [OAC^-], also. If the initial concentration of HOAC is .1 and X (moles/liter) of [H_3O^+] are formed, then you have (.1-x) moles/liter of HOAC left. Substituting these variables into the equilibrium constant expression, you have [x^2/(.1 - x)] = 1.75 \u00d7 10^-5 . Solving, x = [H_3O^+] = 0.0013M", "ref_id": 4401, "meta_info": {"subject": "chemistry.csv", "src": "stemez-Chemistry", "question": "Find thehydroniumion concentration of .1M HOAC (acetic acid) solution. Assume k_a = 1.75 x 10^-5 for acetic acid.", "options": ["0.002M", "0.001M", "0.0013M", "0.0015M"], "answer": "C", "solution": "You want to represent the equilibrium constant expression for the reaction, which necessitates a balanced equation. After writing the expression, you want to express the concentrations in terms of the same variables and solve for it. Begin by writing the balanced equation for the reaction of acetic acid in water. The acid will donate a proton (H^+) to the only available base, H_2O. Thus, HOAC + H_2O \\rightarrow H_3O^+ + OAC^-. [H_3O^+], the hydroniumconcentration, is the quantity you are looking for. The equilibrium constant expression measures the ratio of the concentrations of the products to the reactants, each raised to the power of their respective coefficients in the chemical equation. Thus, the constant, Ka, = {[OAC-] [H_3O^+]}/[ HOAC]. Notes H_2O is omitted, since it is considered a constant. Ka = 1.75 \u00d7 10^-5 . Equating, {[OAC-] [H_3O^+]}/[HOAC] = 1.75 \u00d7 10^-5. Let x = concentration of H_3O^+. According to the reaction, [H_3O^+] = [OAC^-], thus, x = concentration of [OAC^-], also. If the initial concentration of HOAC is .1 and X (moles/liter) of [H_3O^+] are formed, then you have (.1-x) moles/liter of HOAC left. Substituting these variables into the equilibrium constant expression, you have [x^2/(.1 - x)] = 1.75 \u00d7 10^-5 . Solving, x = [H_3O^+] = 0.0013M"}, "question": "task_1"}}, {"data": {"text": "Question:\n(a) 2^3 \\textbullet 2^2(b) a^3 \\bullet a^5(c) x^6 \\textbullet x^4\n\nOptions:\nA. (a) 8, (b) a^6, (c) x^8\nB. (a) 64, (b) a^9, (c) x^11\nC.             (a) 16, (b) a^7, (c) x^9\nD. (a) 32, (b) a^8, (c) x^10\n\nAnswer: D\n\nReference Solution:\nIf a is any number and n is any positive integer, the product of the n factors a\\bulleta\\bulleta ... a is denoted by a^n \\bullet a is called the base and n is called the exponent. Also, for base a and exponents m and n, m and n being positive integers, we have the law: a^m \\bullet a^n = a^m+n. Therefore, (a) 2^3 \\bullet 2^2= (2 \\bullet 2 \\bullet 2) (2 \\bullet 2) = 8 \\bullet 4 = 32 or2^3 \\bullet 2^2= 2^3+2 = 2^5 = 32 (b) a^3 \\bullet a^5= (a \\bullet a \\bullet a) (a \\bullet a \\bullet a \\bullet a \\bullet a) = (a \\bullet a \\bullet a \\bullet a \\bullet a \\bullet a \\bullet a \\bullet a) = a^8 ora^3 \\bullet a^5= a^3+5 = a^8 (c) a^6 \\bullet x^4 = x^6+4 = x^10.", "ref_id": 4402, "meta_info": {"subject": "chemistry.csv", "src": "stemez-Chemistry", "question": "(a) 2^3 \\textbullet 2^2(b) a^3 \\bullet a^5(c) x^6 \\textbullet x^4", "options": ["(a) 8, (b) a^6, (c) x^8", "(a) 64, (b) a^9, (c) x^11", "(a) 16, (b) a^7, (c) x^9", "(a) 32, (b) a^8, (c) x^10"], "answer": "D", "solution": "If a is any number and n is any positive integer, the product of the n factors a\\bulleta\\bulleta ... a is denoted by a^n \\bullet a is called the base and n is called the exponent. Also, for base a and exponents m and n, m and n being positive integers, we have the law: a^m \\bullet a^n = a^m+n. Therefore, (a) 2^3 \\bullet 2^2= (2 \\bullet 2 \\bullet 2) (2 \\bullet 2) = 8 \\bullet 4 = 32 or2^3 \\bullet 2^2= 2^3+2 = 2^5 = 32 (b) a^3 \\bullet a^5= (a \\bullet a \\bullet a) (a \\bullet a \\bullet a \\bullet a \\bullet a) = (a \\bullet a \\bullet a \\bullet a \\bullet a \\bullet a \\bullet a \\bullet a) = a^8 ora^3 \\bullet a^5= a^3+5 = a^8 (c) a^6 \\bullet x^4 = x^6+4 = x^10."}, "question": "task_1"}}, {"data": {"text": "Question:\nThe mass of an electron is 9.109 \u00d7 10^-28 g . What is the atomic weight of electrons?\n\nOptions:\nA. 9.109 \u00d7 10^-28 g/mole\nB. 1.67 x 10^-24 g/mole\nC.             5.48 \u00d7 10^-4 g/mole\nD. 6.02 \u00d7 10^23 g/mole\n\nAnswer: C\n\nReference Solution:\nAtomic weight is defined as the weight of one mole of particles. According to Avogadro, there are 6.02 \u00d7 10^23 particles in one mole. The atomic weight of electrons is equal to 6.02 \u00d7 10^23times the mass of one electron. But the problem indicates that the weight of a particle is given as 9.109 \u00d7 10^-28 g/particle. Therefore, atomic weight of electrons = 9.109 \u00d7 10^-28 g/particle \u00d7 6.02 \u00d7 10^23 particle/mole = 5.48 \u00d7 10^-4 (g / mole). Note that the unit of the final answer is g/mole (units for atomic and molecular weights). The particles cancel out. In this problem the electron is the particle.", "ref_id": 4403, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "The mass of an electron is 9.109 \u00d7 10^-28 g . What is the atomic weight of electrons?", "options": ["9.109 \u00d7 10^-28 g/mole", "1.67 x 10^-24 g/mole", "5.48 \u00d7 10^-4 g/mole", "6.02 \u00d7 10^23 g/mole"], "answer": "C", "solution": "Atomic weight is defined as the weight of one mole of particles. According to Avogadro, there are 6.02 \u00d7 10^23 particles in one mole. The atomic weight of electrons is equal to 6.02 \u00d7 10^23times the mass of one electron. But the problem indicates that the weight of a particle is given as 9.109 \u00d7 10^-28 g/particle. Therefore, atomic weight of electrons = 9.109 \u00d7 10^-28 g/particle \u00d7 6.02 \u00d7 10^23 particle/mole = 5.48 \u00d7 10^-4 (g / mole). Note that the unit of the final answer is g/mole (units for atomic and molecular weights). The particles cancel out. In this problem the electron is the particle."}, "question": "task_1"}}, {"data": {"text": "Question:\nConsider the formation ofethylcyclohexane(C_8H_16) C_8H_10(l) + 3H_2(g) = C_8H_16\\DeltaH298\\textdegreeK= - 48.3 kcal and C_8H_8(l) + 4H_2 (g) = C_8H_16\\DeltaH_298\\textdegreeK = - 74.65 kcal . Given that at 298\\textdegreeK, the heats of combustion of C_8H_16 to water vapor and CO_2 is - 1238.23 kcal/mole, and the heats of formation of water vapor and CO_2 are, - 58.32 and - 94.05 kcal/mole respectively, calculate (a) heat of hydrogena-tion of styrene toethylbenzene. (b) the heat of formation ofethylbenzene.\n\nOptions:\nA. - 28.6 kcal, 65.4 kcal\nB. - 27.3 kcal, 69.8 kcal\nC.             - 26.4 kcal, 67.6 kcal\nD. -30.5 kcal, 70.2 kcal\n\nAnswer: C\n\nReference Solution:\na) The hydrogenation of styrene toethylbenzeneis represented by equations C_8H_10 + 3H_2 = C_8H_16(1)\\DeltaH_298\\textdegreeK = 48.3 kcal and C_8H_8 + 4H_2 = C_8H_16(2)\\DeltaH_298\\textdegreeK = - 74.65 kcal . Subtracting equation (1) from equation (2), the required hydrogenation equation can be written as: C_8H_8 + 4H_2 - C_8H_16 - C_8H_10 - 3H_2 + C_8H_16 = 0 Therefore, C_8H_8 + H_2 = C_8H_10 where C_8H_8 = styrene and C_8H_10 =ethylbenzene Also, subtracting their enthalpy changes yields \\DeltaH = - 74.65 - (- 48.3) \\DeltaH = - 26.4 kcal b) The combustion of C_8H_16 can be written as: C_8H_16 + 12O_2 = 8CO_2 + 8H_2O\\DeltaH_C(298) = - 1238.23 kcal \\therefore\\DeltaH_C(298) = - 1238.23 = [8H_C(O)2 + 8H(H)2 O] - H(C)8 (H)16 That is, \\sum(H_products-H_reactant). H is the heat of formation. \\thereforeH[(C)8 (H)16]= 1238.23 + 8(- 94.05) + 8(- 58.32) = (1238.23 - 752.4 - 466.6)kcal H_[(C)8 (H)16] = 19.27 kcal From equation (1) the heat of formation of C_8H_16 can be written as \\DeltaH_298\\textdegreeK = - 48.3 = H[(C)8 (H)16]- H[(C)8 (H)10] \\thereforeH[(C)8 (H)10]= 48.3 + H_[(C)8 (H)16] = (48.3 + 19.3)kcal H[(C)8 (H)10]= 67.6 kcal", "ref_id": 4404, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Consider the formation ofethylcyclohexane(C_8H_16) C_8H_10(l) + 3H_2(g) = C_8H_16\\DeltaH298\\textdegreeK= - 48.3 kcal and C_8H_8(l) + 4H_2 (g) = C_8H_16\\DeltaH_298\\textdegreeK = - 74.65 kcal . Given that at 298\\textdegreeK, the heats of combustion of C_8H_16 to water vapor and CO_2 is - 1238.23 kcal/mole, and the heats of formation of water vapor and CO_2 are, - 58.32 and - 94.05 kcal/mole respectively, calculate (a) heat of hydrogena-tion of styrene toethylbenzene. (b) the heat of formation ofethylbenzene.", "options": ["- 28.6 kcal, 65.4 kcal", "- 27.3 kcal, 69.8 kcal", "- 26.4 kcal, 67.6 kcal", "-30.5 kcal, 70.2 kcal"], "answer": "C", "solution": "a) The hydrogenation of styrene toethylbenzeneis represented by equations C_8H_10 + 3H_2 = C_8H_16(1)\\DeltaH_298\\textdegreeK = 48.3 kcal and C_8H_8 + 4H_2 = C_8H_16(2)\\DeltaH_298\\textdegreeK = - 74.65 kcal . Subtracting equation (1) from equation (2), the required hydrogenation equation can be written as: C_8H_8 + 4H_2 - C_8H_16 - C_8H_10 - 3H_2 + C_8H_16 = 0 Therefore, C_8H_8 + H_2 = C_8H_10 where C_8H_8 = styrene and C_8H_10 =ethylbenzene Also, subtracting their enthalpy changes yields \\DeltaH = - 74.65 - (- 48.3) \\DeltaH = - 26.4 kcal b) The combustion of C_8H_16 can be written as: C_8H_16 + 12O_2 = 8CO_2 + 8H_2O\\DeltaH_C(298) = - 1238.23 kcal \\therefore\\DeltaH_C(298) = - 1238.23 = [8H_C(O)2 + 8H(H)2 O] - H(C)8 (H)16 That is, \\sum(H_products-H_reactant). H is the heat of formation. \\thereforeH[(C)8 (H)16]= 1238.23 + 8(- 94.05) + 8(- 58.32) = (1238.23 - 752.4 - 466.6)kcal H_[(C)8 (H)16] = 19.27 kcal From equation (1) the heat of formation of C_8H_16 can be written as \\DeltaH_298\\textdegreeK = - 48.3 = H[(C)8 (H)16]- H[(C)8 (H)10] \\thereforeH[(C)8 (H)10]= 48.3 + H_[(C)8 (H)16] = (48.3 + 19.3)kcal H[(C)8 (H)10]= 67.6 kcal"}, "question": "task_1"}}, {"data": {"text": "Question:\nCalculate the work done a) at 25\\textdegreeC, b) at 100\\textdegreeC, when 100 g of nitrogen at a pressure of 760 torr is expanded reversibly and isothermally to a pressure of 100 torr.\n\nOptions:\nA. a) 4287 cal, b) 5366 cal\nB. a) 4287 cal, b) 5000 cal\nC.             a) 4000 cal, b) 5366 cal\nD. a) 5000 cal, b) 6000 cal\n\nAnswer: A\n\nReference Solution:\nIn expanding a gas reversibily from volume, V_1 to volume V_2 , the work done is given by W_rev = ^(V)2\\int_(V)1 PdV(1) Assuming that nitrogen is ideal, P = (nRT / V) wheren = number of moles R = gas constant andT = temperature Combining the P = (nRT / V) and equation (1) yields W_rev = ^(V)2\\int_(V)1 (nRT / V) dV Since this is an isothermal expansion, W_rev = + nRT (V)2 \\int_(V)1 (dV / V) = + nRT ln (V_2 / V_1)(2) Using the Boyle's law P_1V_1 = P_2V_2, equation (2) can berewritten in the form W_rev = + nRT ln (P_1 / P_2), where (P_1 / P_2) = (V_2 / V_1) a) Converting the mass to moles gives 100 g N_2 [(1 mole) / (28g N_2)] = 3.57 moles N_2 Therefore W_rev = + (3.57 moles) [(1.987 cal) / (\\textdegreeK mole)] (298 \\textdegreeK) In [(760) / (100)] orW_rev = + 4287 cal b)T = 100\\textdegreeC = 373\\textdegreeK \\thereforeW_rev = + (3.57 moles) [(1.987 cal) / (\\textdegreeK mole)] (373\\textdegreeK) In [(760) / 100)] W_rev = + 5366 cal", "ref_id": 4405, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Calculate the work done a) at 25\\textdegreeC, b) at 100\\textdegreeC, when 100 g of nitrogen at a pressure of 760 torr is expanded reversibly and isothermally to a pressure of 100 torr.", "options": ["a) 4287 cal, b) 5366 cal", "a) 4287 cal, b) 5000 cal", "a) 4000 cal, b) 5366 cal", "a) 5000 cal, b) 6000 cal"], "answer": "A", "solution": "In expanding a gas reversibily from volume, V_1 to volume V_2 , the work done is given by W_rev = ^(V)2\\int_(V)1 PdV(1) Assuming that nitrogen is ideal, P = (nRT / V) wheren = number of moles R = gas constant andT = temperature Combining the P = (nRT / V) and equation (1) yields W_rev = ^(V)2\\int_(V)1 (nRT / V) dV Since this is an isothermal expansion, W_rev = + nRT (V)2 \\int_(V)1 (dV / V) = + nRT ln (V_2 / V_1)(2) Using the Boyle's law P_1V_1 = P_2V_2, equation (2) can berewritten in the form W_rev = + nRT ln (P_1 / P_2), where (P_1 / P_2) = (V_2 / V_1) a) Converting the mass to moles gives 100 g N_2 [(1 mole) / (28g N_2)] = 3.57 moles N_2 Therefore W_rev = + (3.57 moles) [(1.987 cal) / (\\textdegreeK mole)] (298 \\textdegreeK) In [(760) / (100)] orW_rev = + 4287 cal b)T = 100\\textdegreeC = 373\\textdegreeK \\thereforeW_rev = + (3.57 moles) [(1.987 cal) / (\\textdegreeK mole)] (373\\textdegreeK) In [(760) / 100)] W_rev = + 5366 cal"}, "question": "task_1"}}, {"data": {"text": "Question:\nThe radioactive decay constant for radium is 1.36 \u00d7 10^-11. How many disintegrations per second occur in 100 g of radium?\n\nOptions:\nA. 3.62 \u00d7 10^12 dis/sec\nB. 1.36 \u00d7 10^11 dis/sec\nC.             6.02 \u00d7 10^23 dis/sec\nD. 2.66 \u00d7 10^23 dis/sec\n\nAnswer: A\n\nReference Solution:\nThe number of disintegrations per second of a given amount of a particular element can be determined by using the following equation. D =\\lambdaN where D is the number of disintegrations per second, \\lambda the decay constant and N the number of atoms present. In this problem one is given \\lambda and must determine N before solving for D. One is told that 100 g of radium is present, the number of moles present is determined by dividing 100 g by the molecular weight of radium, 226 g/mole. no. of moles = [(100 g) / (226 g/mole)] = 0.442 moles There are 6.02 \u00d7 10^23 particles per mole, thus, one can calculate the number of atoms (N) in 0.442 moles. N= (0.442moles) (6.02 \u00d7 10^23 atoms/mole) = 2.66 \u00d7 10^23 atoms Solving for D: D=\\lambdaN = (1.36 \u00d7 10^-11) (2.66 \u00d7 10^23) = 3.62 \u00d7 10^12dis/sec.", "ref_id": 4406, "meta_info": {"subject": "chemistry.csv", "src": "stemez-Chemistry", "question": "The radioactive decay constant for radium is 1.36 \u00d7 10^-11. How many disintegrations per second occur in 100 g of radium?", "options": ["3.62 \u00d7 10^12 dis/sec", "1.36 \u00d7 10^11 dis/sec", "6.02 \u00d7 10^23 dis/sec", "2.66 \u00d7 10^23 dis/sec"], "answer": "A", "solution": "The number of disintegrations per second of a given amount of a particular element can be determined by using the following equation. D =\\lambdaN where D is the number of disintegrations per second, \\lambda the decay constant and N the number of atoms present. In this problem one is given \\lambda and must determine N before solving for D. One is told that 100 g of radium is present, the number of moles present is determined by dividing 100 g by the molecular weight of radium, 226 g/mole. no. of moles = [(100 g) / (226 g/mole)] = 0.442 moles There are 6.02 \u00d7 10^23 particles per mole, thus, one can calculate the number of atoms (N) in 0.442 moles. N= (0.442moles) (6.02 \u00d7 10^23 atoms/mole) = 2.66 \u00d7 10^23 atoms Solving for D: D=\\lambdaN = (1.36 \u00d7 10^-11) (2.66 \u00d7 10^23) = 3.62 \u00d7 10^12dis/sec."}, "question": "task_1"}}, {"data": {"text": "Question:\nEvaluate 16^\\rule{1em}{1pt}3/4.\n\nOptions:\nA. 1/8\nB. 1/2\nC.             4/9\nD. 2/3\n\nAnswer: A\n\nReference Solution:\n16^\\rule{1em}{1pt}3/4= 1/(16^3/4) = [1/(^4\\surd16)^3 Note that2^4= 2\\bullet2\\bullet2\\bullet2 = 16, hence ^4\\surd16 = 2. Thus, 16^\\rule{1em}{1pt}3/4. = 1/2^3 = 1/(2\\bullet2\\bullet2) = 1/8.", "ref_id": 4407, "meta_info": {"subject": "chemistry.csv", "src": "stemez-Chemistry", "question": "Evaluate 16^\\rule{1em}{1pt}3/4.", "options": ["1/8", "1/2", "4/9", "2/3"], "answer": "A", "solution": "16^\\rule{1em}{1pt}3/4= 1/(16^3/4) = [1/(^4\\surd16)^3 Note that2^4= 2\\bullet2\\bullet2\\bullet2 = 16, hence ^4\\surd16 = 2. Thus, 16^\\rule{1em}{1pt}3/4. = 1/2^3 = 1/(2\\bullet2\\bullet2) = 1/8."}, "question": "task_1"}}, {"data": {"text": "Question:\nAn explorer, lost in. the desert, stumbled on an abandoned automobile whose gas tank still held 5 liters of fuel. Gasoline has a density of 0.67 g / cc. Assuming gasoline to be composed of C_7H_16 molecules, how many liters of water could he produce by burning the fuel and trapping the products ? The reaction is C_7H_16(l) + O_2(g) \\ding{217} CO_2(g) + H_2O(g)\n\nOptions:\nA. 5000 cc\nB. 33.50 moles\nC.             603.0 g\nD. 3350 g\n\nAnswer: C\n\nReference Solution:\nThere is one mole of H_2O produced by each mole of C_7H_16 burned. To find the amount of water formed by burning the gasoline determine the number of moles of fuel present. Once the number of moles formed is determined , the number of grams of H_2O can be found. There are 5 liters of gasoline present. It is given that 1 cc of C_7H16 weighs 0.67 g. In 1 liter there are 1,000 cc, therefore the gasoline weighs 5000 cc \u00d7 0.67 g / cc = 3350 g One finds the number of moles present by dividing the total weight by the molecular weight. (MW of C_7H_16 = 100). moles= [3350 g / (100 g / mole)] = 33.50 moles. Because 33.50 moles of C_7H_16 are present, 33.50molesof H_2O can be formed. The number of grams of H_2O formed is found by multiplying the molecular weight of H_2O by the number of moles present (MW of H_2O = 18). grams = 33.50 moles \u00d7 18.0 g / mole = 603.0 g.", "ref_id": 4408, "meta_info": {"subject": "chemistry.csv", "src": "stemez-Chemistry", "question": "An explorer, lost in. the desert, stumbled on an abandoned automobile whose gas tank still held 5 liters of fuel. Gasoline has a density of 0.67 g / cc. Assuming gasoline to be composed of C_7H_16 molecules, how many liters of water could he produce by burning the fuel and trapping the products ? The reaction is C_7H_16(l) + O_2(g) \\ding{217} CO_2(g) + H_2O(g)", "options": ["5000 cc", "33.50 moles", "603.0 g", "3350 g"], "answer": "C", "solution": "There is one mole of H_2O produced by each mole of C_7H_16 burned. To find the amount of water formed by burning the gasoline determine the number of moles of fuel present. Once the number of moles formed is determined , the number of grams of H_2O can be found. There are 5 liters of gasoline present. It is given that 1 cc of C_7H16 weighs 0.67 g. In 1 liter there are 1,000 cc, therefore the gasoline weighs 5000 cc \u00d7 0.67 g / cc = 3350 g One finds the number of moles present by dividing the total weight by the molecular weight. (MW of C_7H_16 = 100). moles= [3350 g / (100 g / mole)] = 33.50 moles. Because 33.50 moles of C_7H_16 are present, 33.50molesof H_2O can be formed. The number of grams of H_2O formed is found by multiplying the molecular weight of H_2O by the number of moles present (MW of H_2O = 18). grams = 33.50 moles \u00d7 18.0 g / mole = 603.0 g."}, "question": "task_1"}}, {"data": {"text": "Question:\nOne of the two principal methods for the determination of viscosities of gases is thePoiseuille'sflow experiment. In this experiment, a sample of air at 298\\textdegreeK was allowed to flow through a tube with radius 1mm and length 1m. Pressures at both ends of the tube were 765 mm Hg and 760 mm Hg respectively. A volume of 90.2 cm^3 measured at the lower pressure of 760 mm Hg passed through the tube after 100 sec. Calculate the viscosity of air at this temperature.\n\nOptions:\nA. 1.92 \u00d7 10^-5 kg m^-1 s^-1\nB. 2.82 \u00d7 10^-5 kg m^-1 s^-1\nC.             1.82 \u00d7 10^-5 kg m^-1 s^-1\nD. 1.72 \u00d7 10^-5 kg m^-1 s^-1\n\nAnswer: C\n\nReference Solution:\nThePoiseuille'sequation can be written as [(dV) / (dt)] = [{(P^2_ 1 - P2_2) \\piR^4} / (16l\\eta P_0)](1) or \\eta = [{(P^21- P2_2) \\piR^4} / (16l{(dV) / (dt)} P_0)] where V is the flowing volume, P_1 and P_2 are the pressures at each end of the tube of length l, and P_0 is the pressure at which the volume is measured. \\eta is the coefficient of viscosity (or vis-cosity) and is defined as a measure of the friction present when adjacent layers of the gas are moving at different speeds. Evalua-ting (P^2 _1 - P^2 _2) in equation (1) gives (P^2 _1 - P^2 _2) = [{(765^2 - 760^2)mmHg \u00d7 (1.0135 \u00d7 10^5 Nm^-2)^2} / (760 mm Hg)^2] = 1.356 \u00d7 10^8 N^2m^-4 From the data of the problem set, [(dV) / (dt)] = [(90.2 cm^3) / (100 sec)] [(1m) / (100 cm)^3] = 9.02 \u00d7 10^-7 m^3 s^-1 . Thus from (1) \\eta = [{(1.356 \u00d7 10^8N^2m^-4)(\\pi)(1 \u00d7 10^-3m)^4} / {16(1m)(1.0135 \u00d7 10^5Nm^-2)(9.02 \u00d7 10^-7m^3s^-1)}] = [(0.267 \u00d7 10^8 \u00d7 10^-12) / (146.27 \u00d7 10^-7 \u00d7 10^5)] = (0.267 \u00d7 10^-4) / (146.27 \u00d7 10^-2)] = 0.00182 \u00d7 10^-2 \\eta = 1.82 \u00d7 10^-5 kg m^-1 s^-1", "ref_id": 4409, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "One of the two principal methods for the determination of viscosities of gases is thePoiseuille'sflow experiment. In this experiment, a sample of air at 298\\textdegreeK was allowed to flow through a tube with radius 1mm and length 1m. Pressures at both ends of the tube were 765 mm Hg and 760 mm Hg respectively. A volume of 90.2 cm^3 measured at the lower pressure of 760 mm Hg passed through the tube after 100 sec. Calculate the viscosity of air at this temperature.", "options": ["1.92 \u00d7 10^-5 kg m^-1 s^-1", "2.82 \u00d7 10^-5 kg m^-1 s^-1", "1.82 \u00d7 10^-5 kg m^-1 s^-1", "1.72 \u00d7 10^-5 kg m^-1 s^-1"], "answer": "C", "solution": "ThePoiseuille'sequation can be written as [(dV) / (dt)] = [{(P^2_ 1 - P2_2) \\piR^4} / (16l\\eta P_0)](1) or \\eta = [{(P^21- P2_2) \\piR^4} / (16l{(dV) / (dt)} P_0)] where V is the flowing volume, P_1 and P_2 are the pressures at each end of the tube of length l, and P_0 is the pressure at which the volume is measured. \\eta is the coefficient of viscosity (or vis-cosity) and is defined as a measure of the friction present when adjacent layers of the gas are moving at different speeds. Evalua-ting (P^2 _1 - P^2 _2) in equation (1) gives (P^2 _1 - P^2 _2) = [{(765^2 - 760^2)mmHg \u00d7 (1.0135 \u00d7 10^5 Nm^-2)^2} / (760 mm Hg)^2] = 1.356 \u00d7 10^8 N^2m^-4 From the data of the problem set, [(dV) / (dt)] = [(90.2 cm^3) / (100 sec)] [(1m) / (100 cm)^3] = 9.02 \u00d7 10^-7 m^3 s^-1 . Thus from (1) \\eta = [{(1.356 \u00d7 10^8N^2m^-4)(\\pi)(1 \u00d7 10^-3m)^4} / {16(1m)(1.0135 \u00d7 10^5Nm^-2)(9.02 \u00d7 10^-7m^3s^-1)}] = [(0.267 \u00d7 10^8 \u00d7 10^-12) / (146.27 \u00d7 10^-7 \u00d7 10^5)] = (0.267 \u00d7 10^-4) / (146.27 \u00d7 10^-2)] = 0.00182 \u00d7 10^-2 \\eta = 1.82 \u00d7 10^-5 kg m^-1 s^-1"}, "question": "task_1"}}, {"data": {"text": "Question:\nThe empirical formula for a hypothetical gas is BCB. What can be said about the structure of the gas if the ratio of heat capacities (C_P / C_V) is 1.32?\n\nOptions:\nA. The triatomic gas BCB is monatomic\nB. The triatomic gas BCB is non-linear\nC.             The triatomic gas BCB is diatomic\nD. The triatomic gas BCB is linear\n\nAnswer: B\n\nReference Solution:\nGiven: (C_P / C_V) = 1.32(1) If it is assumed that the gas is ideal, then C_P - C_V = R orC_P = C_V + R. Substituting for C_P in equation (1) gives {(C_V + R) / C_V} = 1.32 orC_V + R = 1.32 C_V.(2) Rearranging equation (2) yields 0.32 C_V = R and solving for C_V gives C_V = (1 / .32) R orC_V = 3.125R(3) From the literature it is found that C_V = 2.5R for a lineartriatomicgas, excluding thevibrationalcontributions, and C_V = 3.0 R for a non-linear triatomicgas, excluding thevibrationalcontribution. Since C_V in (2) is closer to 3.0R ,it can be concluded that thetriatomicgas BCB is non-linear. The dif-ference between the two C_V's, 3.125R - 3.0R = 0.125R, can be assumed to be due tovibrationalcontributions.", "ref_id": 4410, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "The empirical formula for a hypothetical gas is BCB. What can be said about the structure of the gas if the ratio of heat capacities (C_P / C_V) is 1.32?", "options": ["The triatomic gas BCB is monatomic", "The triatomic gas BCB is non-linear", "The triatomic gas BCB is diatomic", "The triatomic gas BCB is linear"], "answer": "B", "solution": "Given: (C_P / C_V) = 1.32(1) If it is assumed that the gas is ideal, then C_P - C_V = R orC_P = C_V + R. Substituting for C_P in equation (1) gives {(C_V + R) / C_V} = 1.32 orC_V + R = 1.32 C_V.(2) Rearranging equation (2) yields 0.32 C_V = R and solving for C_V gives C_V = (1 / .32) R orC_V = 3.125R(3) From the literature it is found that C_V = 2.5R for a lineartriatomicgas, excluding thevibrationalcontributions, and C_V = 3.0 R for a non-linear triatomicgas, excluding thevibrationalcontribution. Since C_V in (2) is closer to 3.0R ,it can be concluded that thetriatomicgas BCB is non-linear. The dif-ference between the two C_V's, 3.125R - 3.0R = 0.125R, can be assumed to be due tovibrationalcontributions."}, "question": "task_1"}}, {"data": {"text": "Question:\n(a) (z = 11) 1s^2 2s^2 2p^6, (b) (z = 25) 1s^2 2s^2 2p^6 3s^2 3p^6 3d^5, and (c) (z = 29) 1s^2 2s^2 2p^6 3s^2 3p^6 3d^10; provide the proper ionic symbol.\n\nOptions:\nA. (a) Li^+, (b) Co^+2, (c) Ni^+1\nB. (a) Mg^+, (b) Cr^+2, (c) Ag^+1\nC.             (a) Na^+, (b) Mn^+2, (c) Cu^+1\nD. (a) K^+, (b) Fe^+2, (c) Zn^+1\n\nAnswer: C\n\nReference Solution:\nThe ionic symbol of an atom is equal to the charge on the atom. This charge is determined by comparing the atomic number Z and the number of electrons as shown in the electronic configuration. The atomic number corre-sponds to the net positive charge on the nucleus and the number of electrons indicates magnitude of the negative charge of the electron cloud. One writes the electronic configuration of hydrogen as 1s^1 1s, indicates the atomic orbital and the superscript 1 indicate that there is one electron in the orbital. Thus, one can determine the number of electrons present by taking the sum of the superscripts. The net charge on an atom is found by adding the net negative charge (the sum of the electrons) and the net positive charge (the atomic number, which is equal to the number of protons) For hydrogen, (Z = 1) 1s^1, the net negative charge is - 1 and the net positive charge is + 1, thus, the atom is neutral and no ionic symbol is used. One uses this method to determine the ionic symbols for the atoms de-scribed in the problem. (a)(Z = 11) 1s^2 2s^2 2p^6. The net negative charge is equal to (- 2) + (- 2) + (- 6) or - 10. The net positive charge is 11. The net charge on the atom is 11 - 10 = + 1. From the periodic table one sees that this atom is Na^+, because the atomic number of sodium is 11. (b)(Z = 25) 1s^2 2s^2 2p^6 3s^2 3p^6 3d^5. Total number of electrons in configuration is2 + 2 + 6 + 2 + 6 + 5 = 23. The net charge on the atom is, then 25 - 23 or + 2. From the periodic table one can determine that this atom is Mn^+2. (c)(Z = 29) 1s^2 2s^2 2p^6 3s^2 3p^6 3d^10. Total number of electrons in configuration = 2 + 2 + 6 + 2 + 6 + 10 = 28. Z = 29 = number of electrons in a neutral atom. Differ-ence:29 - 28 = + 1. The atom is Cu^+1.", "ref_id": 4411, "meta_info": {"subject": "chemistry.csv", "src": "stemez-Chemistry", "question": "(a) (z = 11) 1s^2 2s^2 2p^6, (b) (z = 25) 1s^2 2s^2 2p^6 3s^2 3p^6 3d^5, and (c) (z = 29) 1s^2 2s^2 2p^6 3s^2 3p^6 3d^10; provide the proper ionic symbol.", "options": ["(a) Li^+, (b) Co^+2, (c) Ni^+1", "(a) Mg^+, (b) Cr^+2, (c) Ag^+1", "(a) Na^+, (b) Mn^+2, (c) Cu^+1", "(a) K^+, (b) Fe^+2, (c) Zn^+1"], "answer": "C", "solution": "The ionic symbol of an atom is equal to the charge on the atom. This charge is determined by comparing the atomic number Z and the number of electrons as shown in the electronic configuration. The atomic number corre-sponds to the net positive charge on the nucleus and the number of electrons indicates magnitude of the negative charge of the electron cloud. One writes the electronic configuration of hydrogen as 1s^1 1s, indicates the atomic orbital and the superscript 1 indicate that there is one electron in the orbital. Thus, one can determine the number of electrons present by taking the sum of the superscripts. The net charge on an atom is found by adding the net negative charge (the sum of the electrons) and the net positive charge (the atomic number, which is equal to the number of protons) For hydrogen, (Z = 1) 1s^1, the net negative charge is - 1 and the net positive charge is + 1, thus, the atom is neutral and no ionic symbol is used. One uses this method to determine the ionic symbols for the atoms de-scribed in the problem. (a)(Z = 11) 1s^2 2s^2 2p^6. The net negative charge is equal to (- 2) + (- 2) + (- 6) or - 10. The net positive charge is 11. The net charge on the atom is 11 - 10 = + 1. From the periodic table one sees that this atom is Na^+, because the atomic number of sodium is 11. (b)(Z = 25) 1s^2 2s^2 2p^6 3s^2 3p^6 3d^5. Total number of electrons in configuration is2 + 2 + 6 + 2 + 6 + 5 = 23. The net charge on the atom is, then 25 - 23 or + 2. From the periodic table one can determine that this atom is Mn^+2. (c)(Z = 29) 1s^2 2s^2 2p^6 3s^2 3p^6 3d^10. Total number of electrons in configuration = 2 + 2 + 6 + 2 + 6 + 10 = 28. Z = 29 = number of electrons in a neutral atom. Differ-ence:29 - 28 = + 1. The atom is Cu^+1."}, "question": "task_1"}}, {"data": {"text": "Question:\nAt 1308\\textdegree K 1 mole of ruthenium changes from the \\beta (beta) to the \\alpha solid state. \\DeltaH for the transition = - 34 cal mol^-1. Calculate the entropy changes if the surrounding cooling bath is at STP.\n\nOptions:\nA. 0.34(J / \textdegreeK)\nB. 0.29(J / \textdegreeK)\nC.             0.41(J / \textdegreeK)\nD. 0.25(J / \textdegreeK)\n\nAnswer: C\n\nReference Solution:\nThe total change of entropy for the phase transition is given by summing \\DeltaS for the system and surround-ings , thus: \\DeltaS(universe) = \\DeltaS(system) + \\DeltaS(surroundings) For a system undergoing transition \\DeltaS(system) = (\\DeltaH / T) = [{- 34 (cal/mol)(1.00 mol)[(4.184 J) / (1 cal)]} / (1308\\textdegreeK)] = -.1088(Joules / \\textdegreeK) \\DeltaS (surroundings) = (q/T) where q = heat transfer. The surrounding is at 273\\textdegreeK and the heat transferred to it is the 34 cal mol^-1] given up from the transition \\therefore \\DeltaS (surroundings) = [ {[34(cal/mol)](1 mol)[(4.184 J) / (1 cal)]} / (273\\textdegreeK)] \\DeltaS(surroundings) = .5211 (J / \\textdegreeK) \\therefore \\DeltaS (universe) = [(-.1088) + .5211] (J / \\textdegreeK) \\DeltaS (universe) = 0.41(J / \\textdegreeK)", "ref_id": 4412, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "At 1308\\textdegree K 1 mole of ruthenium changes from the \\beta (beta) to the \\alpha solid state. \\DeltaH for the transition = - 34 cal mol^-1. Calculate the entropy changes if the surrounding cooling bath is at STP.", "options": ["0.34(J / \textdegreeK)", "0.29(J / \textdegreeK)", "0.41(J / \textdegreeK)", "0.25(J / \textdegreeK)"], "answer": "C", "solution": "The total change of entropy for the phase transition is given by summing \\DeltaS for the system and surround-ings , thus: \\DeltaS(universe) = \\DeltaS(system) + \\DeltaS(surroundings) For a system undergoing transition \\DeltaS(system) = (\\DeltaH / T) = [{- 34 (cal/mol)(1.00 mol)[(4.184 J) / (1 cal)]} / (1308\\textdegreeK)] = -.1088(Joules / \\textdegreeK) \\DeltaS (surroundings) = (q/T) where q = heat transfer. The surrounding is at 273\\textdegreeK and the heat transferred to it is the 34 cal mol^-1] given up from the transition \\therefore \\DeltaS (surroundings) = [ {[34(cal/mol)](1 mol)[(4.184 J) / (1 cal)]} / (273\\textdegreeK)] \\DeltaS(surroundings) = .5211 (J / \\textdegreeK) \\therefore \\DeltaS (universe) = [(-.1088) + .5211] (J / \\textdegreeK) \\DeltaS (universe) = 0.41(J / \\textdegreeK)"}, "question": "task_1"}}, {"data": {"text": "Question:\nA heat pump with a coefficient of performance given by COP = - (q_1 / w) = [T_1 / (T_2 - T_1)] = 7.0 is used to pump an amount of heat q_1 at a temperature T_1, from the cold outdoors to the interior of a house at a temperature T_2. Calculate (q_2 / w), the ratio of the heat liberated at the higher temperature T_2 to the work done.\n\nOptions:\nA. 9.0\nB. 7.0\nC.             6.0\nD. 8.0\n\nAnswer: D\n\nReference Solution:\nA heat pump is essentially a refrigerator oper-ated in reverse; that is, it is used to heat a system at a higher temperature by pumping heat from the surroundings at a lower temperature. Thus a heat pump could be used to warm a house by pumping heat from the cold outdoors and delivering it to the warm interior of the house. The ad-vantage of this method of heating is that the maximum ef-ficiency of a refrigerator is much greater than that of other methods of heating. COP = - (q_1 / w) = [T_1 / (T_2 - T_1)](1) where q = quantity of heat w = work done. Here w = q_1 + q_2 orq_1 = w - q_2(2) Therefore using equations (1) and (2) - (q_1 / w) = [{- (w - q_2)} / w] = [(- w + q_2) / w] But the problem indicates that - (q_1 / w) = 7.0. Therefore (- q_1 / w) = 7.0 = [(- w + q_2) / w] = - (w/w) + (q_2 / w) or(- q_1 / w) = - 1 + (q_2 / w) = 7.0 \\therefore(q_2 / w) = 7.0 + 1 = 8.0 Consequently the heat pump will be 8 times as \"efficient\" as a 100% efficient resistor. That is it would produce 8 times as much heat as a 100% efficient resistor per cal-oric of energy input.", "ref_id": 4413, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "A heat pump with a coefficient of performance given by COP = - (q_1 / w) = [T_1 / (T_2 - T_1)] = 7.0 is used to pump an amount of heat q_1 at a temperature T_1, from the cold outdoors to the interior of a house at a temperature T_2. Calculate (q_2 / w), the ratio of the heat liberated at the higher temperature T_2 to the work done.", "options": ["9.0", "7.0", "6.0", "8.0"], "answer": "D", "solution": "A heat pump is essentially a refrigerator oper-ated in reverse; that is, it is used to heat a system at a higher temperature by pumping heat from the surroundings at a lower temperature. Thus a heat pump could be used to warm a house by pumping heat from the cold outdoors and delivering it to the warm interior of the house. The ad-vantage of this method of heating is that the maximum ef-ficiency of a refrigerator is much greater than that of other methods of heating. COP = - (q_1 / w) = [T_1 / (T_2 - T_1)](1) where q = quantity of heat w = work done. Here w = q_1 + q_2 orq_1 = w - q_2(2) Therefore using equations (1) and (2) - (q_1 / w) = [{- (w - q_2)} / w] = [(- w + q_2) / w] But the problem indicates that - (q_1 / w) = 7.0. Therefore (- q_1 / w) = 7.0 = [(- w + q_2) / w] = - (w/w) + (q_2 / w) or(- q_1 / w) = - 1 + (q_2 / w) = 7.0 \\therefore(q_2 / w) = 7.0 + 1 = 8.0 Consequently the heat pump will be 8 times as \"efficient\" as a 100% efficient resistor. That is it would produce 8 times as much heat as a 100% efficient resistor per cal-oric of energy input."}, "question": "task_1"}}, {"data": {"text": "Question:\n1 mole of ammonia at - 33.33\\textdegreeC and 1.00atmis converted to vapor. Calculate q, w and \\DeltaE for the conversion, given that \\DeltaH = 589.3 Btu lb^-1. 1 lb of liquid occupies .02345 ft^3 and 1 lb of gas occupies 18.00 ft^3.\n\nOptions:\nA. q = 23.33 kJ mol^-1, w = 1.94 kJ mol^-1, \\DeltaE = 21.39 kJ mol^-1\nB. q = 1.94 kJ mol^-1, w = 23.33 kJ mol^-1, \\DeltaE = 21.39 kJ mol^-1\nC.             q = 23.33 kJ mol^-1, w = 21.39 kJ mol^-1, \\DeltaE = 1.94 kJ mol^-1\nD. q = 21.39 kJ mol^-1, w = 1.94 kJ mol^-1, \\DeltaE = 23.33 kJ mol^-1\n\nAnswer: A\n\nReference Solution:\nThe enthalpy H is given by H = E + PV \\therefore\\DeltaH = \\DeltaE + \\Delta (PV) The conversion of NH_3 is done under a constant pressure of 1 atm. Thus, \\DeltaH = \\DeltaE + P (\\DeltaV)(1) But under constant pressure conditions P(\\DeltaV) = w and\\DeltaE = q - w \\therefore\\DeltaH = q - w + w \\DeltaH = q For the above problem \\DeltaH = q = {589.3(Btu / lb)} (1054.35J / Btu) (lb / .45359 kg) {(17.03 \u00d7 10^-3- kg) / (1 mol)} = 23328.7J mol^-1 = 23.33 kJ mol^-1 w = ^(V)2\\int_(V)1PdV or w = P(V)2\\int_(V)1dV, since P is constant. Performing the integration gives W = P(V_2 - V_1) = (1.00atm) (18.00 - .02345) (ft^3 / lb) (28.316 l / ft^3) \u00d7 (101.325J / latm)(lb / .45359) {(17.03 \u00d7 10^-3- kg) / mol} = 1.94 kJ mol^-1 From equation (1), \\DeltaH = \\DeltaE + P(\\DeltaV) = \\DeltaE + W = \\DeltaE + W \\therefore\\DeltaE = \\DeltaH - W = (23.33 - 1.94) kJ mol^-1 or\\DeltaE = 21.39 kJ mol^-1", "ref_id": 4414, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "1 mole of ammonia at - 33.33\\textdegreeC and 1.00atmis converted to vapor. Calculate q, w and \\DeltaE for the conversion, given that \\DeltaH = 589.3 Btu lb^-1. 1 lb of liquid occupies .02345 ft^3 and 1 lb of gas occupies 18.00 ft^3.", "options": ["q = 23.33 kJ mol^-1, w = 1.94 kJ mol^-1, \\DeltaE = 21.39 kJ mol^-1", "q = 1.94 kJ mol^-1, w = 23.33 kJ mol^-1, \\DeltaE = 21.39 kJ mol^-1", "q = 23.33 kJ mol^-1, w = 21.39 kJ mol^-1, \\DeltaE = 1.94 kJ mol^-1", "q = 21.39 kJ mol^-1, w = 1.94 kJ mol^-1, \\DeltaE = 23.33 kJ mol^-1"], "answer": "A", "solution": "The enthalpy H is given by H = E + PV \\therefore\\DeltaH = \\DeltaE + \\Delta (PV) The conversion of NH_3 is done under a constant pressure of 1 atm. Thus, \\DeltaH = \\DeltaE + P (\\DeltaV)(1) But under constant pressure conditions P(\\DeltaV) = w and\\DeltaE = q - w \\therefore\\DeltaH = q - w + w \\DeltaH = q For the above problem \\DeltaH = q = {589.3(Btu / lb)} (1054.35J / Btu) (lb / .45359 kg) {(17.03 \u00d7 10^-3- kg) / (1 mol)} = 23328.7J mol^-1 = 23.33 kJ mol^-1 w = ^(V)2\\int_(V)1PdV or w = P(V)2\\int_(V)1dV, since P is constant. Performing the integration gives W = P(V_2 - V_1) = (1.00atm) (18.00 - .02345) (ft^3 / lb) (28.316 l / ft^3) \u00d7 (101.325J / latm)(lb / .45359) {(17.03 \u00d7 10^-3- kg) / mol} = 1.94 kJ mol^-1 From equation (1), \\DeltaH = \\DeltaE + P(\\DeltaV) = \\DeltaE + W = \\DeltaE + W \\therefore\\DeltaE = \\DeltaH - W = (23.33 - 1.94) kJ mol^-1 or\\DeltaE = 21.39 kJ mol^-1"}, "question": "task_1"}}, {"data": {"text": "Question:\nCalculate the vapor pressure of a solution of 20.0 grams of sucrose, C_12H_22O_11, in 40.0 grams of water at 34\\textdegreeC. The vapor pressure of water is 40.00 mm at 34\\textdegreeC.\n\nOptions:\nA. 37.0 mm\nB. 39.0 mm\nC.             38.0 mm\nD. 40.0 mm\n\nAnswer: B\n\nReference Solution:\nRaoult'slaw states that at a given temperature, the partial pressure P_i of a component in solution is proportional to the mole fraction X_i as follows: P_i =X_iP^O_i(1) whereP^O_iis the vapor pressure of pure componenti. Since the equation is not directly related to the weights of the substances, it is necessary to convert them (the weights) to moles by the relation, n = [weight / molecular weight](2) where n = number of moles. The molecular weights of C_12H_22O_11 and H_2O are 342 g C_12H_22O_11/mole and 18 g H_2O/mole respectively. Therefore, their respective moles are (20 g C_12H_22O_11) [(1 mole C_12H_22O_11) / (342 g C_12H_22O_11)] = 0.0584 mole C_12H_22O_11 and(40 g H_2O) [(1 mole H_2O) / (18.0 g H_2O)] = 2.22 mole H_2O. Total moles in the solution = (0.0584 + 2.22)moles = 2.28 moles The mole fraction of water in the solution is X_(H)2O =[n_(H)2O /n_total] where X = mole fraction, X_(H)2O = [(2.22moles) / (2.28moles)] X_(H)2O = 0.974 UsingRaoult'slaw to calculate the vapor pressure of the solution, equation (1) becomes P_sol= X_(H)2O P^O_(H)2O = (0.974) (40.00 mm) P_solution= 39.0 mm", "ref_id": 4415, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Calculate the vapor pressure of a solution of 20.0 grams of sucrose, C_12H_22O_11, in 40.0 grams of water at 34\\textdegreeC. The vapor pressure of water is 40.00 mm at 34\\textdegreeC.", "options": ["37.0 mm", "39.0 mm", "38.0 mm", "40.0 mm"], "answer": "B", "solution": "Raoult'slaw states that at a given temperature, the partial pressure P_i of a component in solution is proportional to the mole fraction X_i as follows: P_i =X_iP^O_i(1) whereP^O_iis the vapor pressure of pure componenti. Since the equation is not directly related to the weights of the substances, it is necessary to convert them (the weights) to moles by the relation, n = [weight / molecular weight](2) where n = number of moles. The molecular weights of C_12H_22O_11 and H_2O are 342 g C_12H_22O_11/mole and 18 g H_2O/mole respectively. Therefore, their respective moles are (20 g C_12H_22O_11) [(1 mole C_12H_22O_11) / (342 g C_12H_22O_11)] = 0.0584 mole C_12H_22O_11 and(40 g H_2O) [(1 mole H_2O) / (18.0 g H_2O)] = 2.22 mole H_2O. Total moles in the solution = (0.0584 + 2.22)moles = 2.28 moles The mole fraction of water in the solution is X_(H)2O =[n_(H)2O /n_total] where X = mole fraction, X_(H)2O = [(2.22moles) / (2.28moles)] X_(H)2O = 0.974 UsingRaoult'slaw to calculate the vapor pressure of the solution, equation (1) becomes P_sol= X_(H)2O P^O_(H)2O = (0.974) (40.00 mm) P_solution= 39.0 mm"}, "question": "task_1"}}, {"data": {"text": "Question:\nCalculate the approximate molar weight of 35.0 grams of a non--electrolyte in solution with 100mlwater. The boiling point of the solution is 102.16 C.\n\nOptions:\nA. 75 g solute / mole solute\nB. 100 g solute / mole solute\nC.             84 g solute / mole solute\nD. 95 g solute / mole solute\n\nAnswer: C\n\nReference Solution:\nThe same procedure that was followed in determining the approximate molar weight of an unknown solute using the freezing point depression also applies here. First, the concen-tration of the solution in grams of solute per kilogram of sol-vent is calculated, and then themolality of the solute is cal-culated using the boiling point elevation. The approximate molar weight is then obtained by dividing one concentration in terms of g solute/kg solvent by the other given by mole solute/ kg solvent. 100mlH_2O \u00d7 (1g /ml) \u00d7 [(1 kg) / (1000 g)] = .1 kg The concentration of the solution is [(35.0 g solute) / (0.100 kg solvent)] = [(350 g solute) / (kg solvent)] To find the concentration in moles solute/kg solvent, we must calculate the molality, m given by the relation m = [\u2206T_B / K_B] where \u2206T_B is the boiling point elevation and K_B ismolalboiling point constant. The normal boiling point of water = 100\\textdegreeC and K_B for water is 0.52 [(\\textdegreeC - kg H_2O) / (moles solute)] \\thereforem = [{(102.16 - 100.00)\\textdegreeC} / {(0.52\\textdegreeC - kg H_2O) / (moles solute)}] =4.15[(moles solute) / (kg H_2O)] The molar weight is given by dividing the first concentration by the second as follows: [{(350 g solute) / (kg H_2O)} / {(4.15 moles solute) / (kg H_2O)}] Therefore, Molar weight = [(84 g solute) / (mole solute)]", "ref_id": 4416, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Calculate the approximate molar weight of 35.0 grams of a non--electrolyte in solution with 100mlwater. The boiling point of the solution is 102.16 C.", "options": ["75 g solute / mole solute", "100 g solute / mole solute", "84 g solute / mole solute", "95 g solute / mole solute"], "answer": "C", "solution": "The same procedure that was followed in determining the approximate molar weight of an unknown solute using the freezing point depression also applies here. First, the concen-tration of the solution in grams of solute per kilogram of sol-vent is calculated, and then themolality of the solute is cal-culated using the boiling point elevation. The approximate molar weight is then obtained by dividing one concentration in terms of g solute/kg solvent by the other given by mole solute/ kg solvent. 100mlH_2O \u00d7 (1g /ml) \u00d7 [(1 kg) / (1000 g)] = .1 kg The concentration of the solution is [(35.0 g solute) / (0.100 kg solvent)] = [(350 g solute) / (kg solvent)] To find the concentration in moles solute/kg solvent, we must calculate the molality, m given by the relation m = [\u2206T_B / K_B] where \u2206T_B is the boiling point elevation and K_B ismolalboiling point constant. The normal boiling point of water = 100\\textdegreeC and K_B for water is 0.52 [(\\textdegreeC - kg H_2O) / (moles solute)] \\thereforem = [{(102.16 - 100.00)\\textdegreeC} / {(0.52\\textdegreeC - kg H_2O) / (moles solute)}] =4.15[(moles solute) / (kg H_2O)] The molar weight is given by dividing the first concentration by the second as follows: [{(350 g solute) / (kg H_2O)} / {(4.15 moles solute) / (kg H_2O)}] Therefore, Molar weight = [(84 g solute) / (mole solute)]"}, "question": "task_1"}}, {"data": {"text": "Question:\nAt what temperature will water with a boiling point of 100\\textdegreeC and chloroform with a boiling point of 60\\textdegreeC, have the same vapor pressure. The heats of vaporization for water and chloroform are 12.0 kcal/mole and 7.0 kcal/mole respec-tively .\n\nOptions:\nA. 448K\nB. 500K\nC.             333K\nD. 373K\n\nAnswer: A\n\nReference Solution:\nThis problem can be solved by using theClausius-Clapeyron equation.Clapeyronstated that when two phases of a pure substance are in equilibrium, then V_VdP V_VdP -V_LdP=S_VdT-S_LdT -V_LdP=S_VdT-S_LdT (V_V - V_L)dP= (S_V - S_L)dT (V_V - V_L)dP= (S_V - S_L)dT (dP/dT) = [(S_V - S_L) / (V_V - V_L)] (dP/dT) = [(\u2206S_vap) / (V_V - V_L)] But\u2206S_vaporization= [(\u2206H_vaporization) / T] Therefore, (dP/dT) = [(\u2206H_vap) / {T(V_V - V_L)}] which is theClapeyron equation. Here \u2206H_vapis the enthalpy of vaporization at temperature T and theequililbriumvapor pressure. Clausiusmade the following assumptions on theClapeyron equation: He assumed that the vapor phase was an ideal gas. \\thereforeV_V = (RT / P) He also assumed that the liquid volume was negligible com-pared to the vapor volume \\thereforeV_V - V_L \\cong V_V = (RT / P). TheClapeyronequation then becomes (dP/dT) = [(\u2206H_vap) / {T(V_V - V_L)}] = [(\u2206H_vap) / {T(V_V)}] = [(\u2206H_vap) / {T(RT / P)}] \\therefore(dP/dT) = [(\u2206H_vapP) / RT^2](2) This is theClausius-Clapeyronequation. If we integrate Equation (2) , taking \u2206H_vapto be a constant, over a given temperature change in equilibrium, then the chemical po-tentials of the two phases are equal, at constant tempera-ture and pressure. Rearranging equation (2) yields (dP/ P) = [\u2206H_vap/ RT^2]dT ^(P)2\\int_(P)1 dlnP = [\u2206H_vap/ R] ^(T)2\\int_(T)1 T^-2dT ln(P_2 / P_1) = [\u2206H_vap/ R] [- T^-1]^(T)2_(T)1 ln(P_2 / P_1) = [\u2206H_vap/ R] [- (1/T_2) + (1/T_1)] ln(P_2 / P_1) = [\u2206H_vap/ R] [(1/T_1) - (1/T_2)](3) P_1 can be taken to be 1atmsince all liquids boil when their vapor pressure is equal to the total atmospheric pressure of 1 atm. Therefore Equation (3), for water, be-comes ln[P_2 / (1atm)] = [(12,000 cal mol^-1) / R] [{1 / (373)} - (1/T_2)] and for chloroform ln[P_2 / (1atm)] = [(7000 cal mol^-1) / R] [{1 / (333)} - (1/T_2)] We want to find the temperature at which the water and chloroform will have the same vapor pressure, thus we can set the left-hand sides of the above two equations for water and chloroform equal. That is [(12,000) / R] [{1 / (373)} - (1/T_2)] = [7000 / R] [{1 / (333)} - (1/T_2)] or12,000 [{1 / (373)} - (1/T_2)] = 7000 [{1 / (333)} - (1/T_2)] solving now for T_2 we have [(12,000) / (373)] - [(12,000) / T_2] = [(7000) / (333)] - [(7000) / T_2] [(5000) / T_2] = 11.15 \\thereforeT_2 = 448\\textdegreeK", "ref_id": 4417, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "At what temperature will water with a boiling point of 100\\textdegreeC and chloroform with a boiling point of 60\\textdegreeC, have the same vapor pressure. The heats of vaporization for water and chloroform are 12.0 kcal/mole and 7.0 kcal/mole respec-tively .", "options": ["448K", "500K", "333K", "373K"], "answer": "A", "solution": "This problem can be solved by using theClausius-Clapeyron equation.Clapeyronstated that when two phases of a pure substance are in equilibrium, then V_VdP V_VdP -V_LdP=S_VdT-S_LdT -V_LdP=S_VdT-S_LdT (V_V - V_L)dP= (S_V - S_L)dT (V_V - V_L)dP= (S_V - S_L)dT (dP/dT) = [(S_V - S_L) / (V_V - V_L)] (dP/dT) = [(\u2206S_vap) / (V_V - V_L)] But\u2206S_vaporization= [(\u2206H_vaporization) / T] Therefore, (dP/dT) = [(\u2206H_vap) / {T(V_V - V_L)}] which is theClapeyron equation. Here \u2206H_vapis the enthalpy of vaporization at temperature T and theequililbriumvapor pressure. Clausiusmade the following assumptions on theClapeyron equation: He assumed that the vapor phase was an ideal gas. \\thereforeV_V = (RT / P) He also assumed that the liquid volume was negligible com-pared to the vapor volume \\thereforeV_V - V_L \\cong V_V = (RT / P). TheClapeyronequation then becomes (dP/dT) = [(\u2206H_vap) / {T(V_V - V_L)}] = [(\u2206H_vap) / {T(V_V)}] = [(\u2206H_vap) / {T(RT / P)}] \\therefore(dP/dT) = [(\u2206H_vapP) / RT^2](2) This is theClausius-Clapeyronequation. If we integrate Equation (2) , taking \u2206H_vapto be a constant, over a given temperature change in equilibrium, then the chemical po-tentials of the two phases are equal, at constant tempera-ture and pressure. Rearranging equation (2) yields (dP/ P) = [\u2206H_vap/ RT^2]dT ^(P)2\\int_(P)1 dlnP = [\u2206H_vap/ R] ^(T)2\\int_(T)1 T^-2dT ln(P_2 / P_1) = [\u2206H_vap/ R] [- T^-1]^(T)2_(T)1 ln(P_2 / P_1) = [\u2206H_vap/ R] [- (1/T_2) + (1/T_1)] ln(P_2 / P_1) = [\u2206H_vap/ R] [(1/T_1) - (1/T_2)](3) P_1 can be taken to be 1atmsince all liquids boil when their vapor pressure is equal to the total atmospheric pressure of 1 atm. Therefore Equation (3), for water, be-comes ln[P_2 / (1atm)] = [(12,000 cal mol^-1) / R] [{1 / (373)} - (1/T_2)] and for chloroform ln[P_2 / (1atm)] = [(7000 cal mol^-1) / R] [{1 / (333)} - (1/T_2)] We want to find the temperature at which the water and chloroform will have the same vapor pressure, thus we can set the left-hand sides of the above two equations for water and chloroform equal. That is [(12,000) / R] [{1 / (373)} - (1/T_2)] = [7000 / R] [{1 / (333)} - (1/T_2)] or12,000 [{1 / (373)} - (1/T_2)] = 7000 [{1 / (333)} - (1/T_2)] solving now for T_2 we have [(12,000) / (373)] - [(12,000) / T_2] = [(7000) / (333)] - [(7000) / T_2] [(5000) / T_2] = 11.15 \\thereforeT_2 = 448\\textdegreeK"}, "question": "task_1"}}, {"data": {"text": "Question:\nA non-homogeneous polymer system is composed according to the following fractional distribution Wt. fraction 0.05 0.20 0.35 0.20 0.15 0.05 Mol. Wt. \u00d7 10^-5 1 2 3 4 6 7 ComputeM_n,M_w, and (M_w /M_n) for this system.\n\nOptions:\nA. M_n = 300000, M_w = 350000, M_w /M_n = 1.167\nB. M_n = 280000, M_w = 360000, M_w /M_n = 1.286\nC.             M_n = 355000, M_w = 285700, M_w /M_n = 1.242\nD. M_n = 285700, M_w = 355000, M_w /M_n = 1.242\n\nAnswer: D\n\nReference Solution:\nThe mathematical definitions ofM_nandM_w are M_n= [(\\sumN_i M_i) / (\\sumN_i)] = [1 / {\\sum(w_i/ M_i)}] and M_w = [(\\sumW_iM_i) / (\\sumW_i)] = [(\\sumN_i M^2_i) / (\\sumN_i M_i)] = \\sumw_iM_i respectively, where respectively, where M_i = molecular weight of theithspecies N_i = moles of molecules with molecular weight M_i W_i= weight of material with molecular weight M_i w_i= weight fraction of molecules of theithspecies M_n= number average molecular weight M_w = weight average molecular weight. Substitute the given data into the expression forM_nto get M_n= [1 / {\\sum(w_i/ M_i)}] = [1 / ( {(0.05) / 10^5} + {(0.20) / (2 \u00d7 10^5)} + {(0.35) / (3 \u00d7 10^5)} + {(0.20) / (4 \u00d7 10^5)} + {(0.15) / (6 \u00d7 10^5)} + {(0.05) / (7 \u00d7 10^5)} )] = [1 / (0.0000005 + 0.000001 + 0.000001167 + 0.0000005 + 0.00000025 + 0.00000007143) ] ThereforeM_n\\cong 285700 In a similar manner, M_w = \\sumw_iM_i = (0.05) (10^5) + (0.20) (2 \u00d7 10^5) + (0.35) (3 \u00d7 10^5) + (0.20) (4 \u00d7 10^5) + (0.15)(6 \u00d7 10^5) + (0.05)(7 \u00d7 10^5) = 5000 + 40000 + 105000 + 80000 + 90000 + 35000 = 355000 For this system, the ratio [M_w /M_n] = [(355000) / (285700)] \\cong 1.242", "ref_id": 4418, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "A non-homogeneous polymer system is composed according to the following fractional distribution Wt. fraction 0.05 0.20 0.35 0.20 0.15 0.05 Mol. Wt. \u00d7 10^-5 1 2 3 4 6 7 ComputeM_n,M_w, and (M_w /M_n) for this system.", "options": ["M_n = 300000, M_w = 350000, M_w /M_n = 1.167", "M_n = 280000, M_w = 360000, M_w /M_n = 1.286", "M_n = 355000, M_w = 285700, M_w /M_n = 1.242", "M_n = 285700, M_w = 355000, M_w /M_n = 1.242"], "answer": "D", "solution": "The mathematical definitions ofM_nandM_w are M_n= [(\\sumN_i M_i) / (\\sumN_i)] = [1 / {\\sum(w_i/ M_i)}] and M_w = [(\\sumW_iM_i) / (\\sumW_i)] = [(\\sumN_i M^2_i) / (\\sumN_i M_i)] = \\sumw_iM_i respectively, where respectively, where M_i = molecular weight of theithspecies N_i = moles of molecules with molecular weight M_i W_i= weight of material with molecular weight M_i w_i= weight fraction of molecules of theithspecies M_n= number average molecular weight M_w = weight average molecular weight. Substitute the given data into the expression forM_nto get M_n= [1 / {\\sum(w_i/ M_i)}] = [1 / ( {(0.05) / 10^5} + {(0.20) / (2 \u00d7 10^5)} + {(0.35) / (3 \u00d7 10^5)} + {(0.20) / (4 \u00d7 10^5)} + {(0.15) / (6 \u00d7 10^5)} + {(0.05) / (7 \u00d7 10^5)} )] = [1 / (0.0000005 + 0.000001 + 0.000001167 + 0.0000005 + 0.00000025 + 0.00000007143) ] ThereforeM_n\\cong 285700 In a similar manner, M_w = \\sumw_iM_i = (0.05) (10^5) + (0.20) (2 \u00d7 10^5) + (0.35) (3 \u00d7 10^5) + (0.20) (4 \u00d7 10^5) + (0.15)(6 \u00d7 10^5) + (0.05)(7 \u00d7 10^5) = 5000 + 40000 + 105000 + 80000 + 90000 + 35000 = 355000 For this system, the ratio [M_w /M_n] = [(355000) / (285700)] \\cong 1.242"}, "question": "task_1"}}, {"data": {"text": "Question:\nDetermine the heat of vaporization ofacetonitrilewith a normal boiling point of 80 C, given thatacetonitrilehas a vapor pres-sure which is changing at the rate of 0.030atm/deg K around the boiling point.\n\nOptions:\nA. 7.2 kcal mol^-1\nB. 6.5 kcal mol^-1\nC.             8.0 kcal mol^-1\nD. 7.4 kcal mol^-1\n\nAnswer: D\n\nReference Solution:\nTheClausius-Clapeyronequation relates the rate of changes of pressure and temperature to the heat of vaporization. Writing the equation in the form (dP/dT) = [(P\u2206H_vap) / (RT^2)],(1) \u2206H_vapcan easily be calculated. The problem states that (dP/dT) = 0.030 (atm/ deg K) From Equation (1) therefore, \u2206H_vap= (dP/dT) (RT^2 / P_t) At the boiling point P_t = 1 atm. \\therefore\u2206H_vap= [0.030 (atm/ \\textdegreeK)] [{(1. 987 cal mole^-1 \\textdegreeK^-1) (353\\textdegreeK)^2} / (1atm)] = (7427.9 cal mol^-1) [(1 kcal) / (1000 cal)] = 7.4 kcal mol^-1 An alternative, less precise, method yields a similar result. The procedure used isTrouton'sRule which states that [\u2206H_vap/ T_b] = 21 cal mole^-1 K^-1, where \u2206H_vapis the heat of vaporization, and T_b is the normal boiling point temperature, in K. Hence, \u2206H_vap= 21 cal mole^-1 K^-1 (353 K) = 7413 cal/mole = 7.4 kcal mole^-1", "ref_id": 4419, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Determine the heat of vaporization ofacetonitrilewith a normal boiling point of 80 C, given thatacetonitrilehas a vapor pres-sure which is changing at the rate of 0.030atm/deg K around the boiling point.", "options": ["7.2 kcal mol^-1", "6.5 kcal mol^-1", "8.0 kcal mol^-1", "7.4 kcal mol^-1"], "answer": "D", "solution": "TheClausius-Clapeyronequation relates the rate of changes of pressure and temperature to the heat of vaporization. Writing the equation in the form (dP/dT) = [(P\u2206H_vap) / (RT^2)],(1) \u2206H_vapcan easily be calculated. The problem states that (dP/dT) = 0.030 (atm/ deg K) From Equation (1) therefore, \u2206H_vap= (dP/dT) (RT^2 / P_t) At the boiling point P_t = 1 atm. \\therefore\u2206H_vap= [0.030 (atm/ \\textdegreeK)] [{(1. 987 cal mole^-1 \\textdegreeK^-1) (353\\textdegreeK)^2} / (1atm)] = (7427.9 cal mol^-1) [(1 kcal) / (1000 cal)] = 7.4 kcal mol^-1 An alternative, less precise, method yields a similar result. The procedure used isTrouton'sRule which states that [\u2206H_vap/ T_b] = 21 cal mole^-1 K^-1, where \u2206H_vapis the heat of vaporization, and T_b is the normal boiling point temperature, in K. Hence, \u2206H_vap= 21 cal mole^-1 K^-1 (353 K) = 7413 cal/mole = 7.4 kcal mole^-1"}, "question": "task_1"}}, {"data": {"text": "Question:\nAt 25\\textdegreeC Henry's law constant for the solubility of oxygen gas in water is K_2 = 3.30 \u00d7 10^7torr. Calculate the solu-bility of oxygen under room temperature. Consider air to be 20% O_2 at room temperature.\n\nOptions:\nA. 8.34 \u00d7 10^-6 g O_2 in 1 g H_2O\nB. 8.34 \u00d7 10^-4 g O_2 in 1 g H_2O\nC.             8.34 \u00d7 10^-7 g O_2 in 1 g H_2O\nD. 8.34 \u00d7 10^-5 g O_2 in 1 g H_2O\n\nAnswer: A\n\nReference Solution:\nGases dissolve in liquids to form true solutions and according to Henry's law, the solubility of the gas in the liquid is directly proportional to the partial pressure of the gas above the liquid \\thereforeP_2 = X_2K_2(1) where K_2 is Henry's constant. Air contains 20% O_2, thus the mole fraction of O_2 in the air = 0.20. The partial pressure, P_2 can now be com-puted. P_2 = (0.20) (760torr) = 152torr Using equation (1), X_2 = (P_2 / K_2) = [(152torr) / (3.30 \u00d7 10^7torr)] X_2 = 4.6 \u00d7 10^-6 The value of X_2 indicates that this is a very dilute solution and thus the number of moles of n_2 in the solution is negligible. So, it is assumed that the total number of moles in the solution is n_1. X_2 can also be written as X_2 = [n_2 / (n_1 + n_2)](2) where n_2 is the number of moles of O_2 in the water and n_1 is the number of moles of water. Since X_2 is dilute n_1 + n_2 \\cong n_1 \\therefore Equation (2) becomes X_2 = (n_2 / n_1)(3) Using a basis of 100 g H_2O n_1 for 100 g of water = 5.55 mole From equation (3) n_2 = X_2n_1 = (4.6 \u00d7 10^-6)(5.55 mol) n_2 = 2.6 \u00d7 10^-5 mol n_2 = (2.6 \u00d7 10^-5 mol O_2) [(32 g O_2) / (1 mol O_2)] n_2 = 8.3 \u00d7 10^-4 g O_2 in 100 g H_2O orn_2 = 8.34 \u00d7 10^-6 g O_2 in 1 g H_2O", "ref_id": 4420, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "At 25\\textdegreeC Henry's law constant for the solubility of oxygen gas in water is K_2 = 3.30 \u00d7 10^7torr. Calculate the solu-bility of oxygen under room temperature. Consider air to be 20% O_2 at room temperature.", "options": ["8.34 \u00d7 10^-6 g O_2 in 1 g H_2O", "8.34 \u00d7 10^-4 g O_2 in 1 g H_2O", "8.34 \u00d7 10^-7 g O_2 in 1 g H_2O", "8.34 \u00d7 10^-5 g O_2 in 1 g H_2O"], "answer": "A", "solution": "Gases dissolve in liquids to form true solutions and according to Henry's law, the solubility of the gas in the liquid is directly proportional to the partial pressure of the gas above the liquid \\thereforeP_2 = X_2K_2(1) where K_2 is Henry's constant. Air contains 20% O_2, thus the mole fraction of O_2 in the air = 0.20. The partial pressure, P_2 can now be com-puted. P_2 = (0.20) (760torr) = 152torr Using equation (1), X_2 = (P_2 / K_2) = [(152torr) / (3.30 \u00d7 10^7torr)] X_2 = 4.6 \u00d7 10^-6 The value of X_2 indicates that this is a very dilute solution and thus the number of moles of n_2 in the solution is negligible. So, it is assumed that the total number of moles in the solution is n_1. X_2 can also be written as X_2 = [n_2 / (n_1 + n_2)](2) where n_2 is the number of moles of O_2 in the water and n_1 is the number of moles of water. Since X_2 is dilute n_1 + n_2 \\cong n_1 \\therefore Equation (2) becomes X_2 = (n_2 / n_1)(3) Using a basis of 100 g H_2O n_1 for 100 g of water = 5.55 mole From equation (3) n_2 = X_2n_1 = (4.6 \u00d7 10^-6)(5.55 mol) n_2 = 2.6 \u00d7 10^-5 mol n_2 = (2.6 \u00d7 10^-5 mol O_2) [(32 g O_2) / (1 mol O_2)] n_2 = 8.3 \u00d7 10^-4 g O_2 in 100 g H_2O orn_2 = 8.34 \u00d7 10^-6 g O_2 in 1 g H_2O"}, "question": "task_1"}}, {"data": {"text": "Question:\nFor the reaction For the reaction CHCI_3(l) + Cl_2(g) \\rightarrow CCl_4(l) +HCl(g) at 25\\textdegreeC, S\\textdegree_298 [CHCl_3] (l) = 48.5 cal/K\\textbullet mole S\\textdegree_298 [Cl_2] (g) = 53.29 cal/K \\textbullet mole S\\textdegree_298 [CCl_4] (l) = 51.25 cal/K \\textbullet mole S\\textdegree_298 [HCl] (g) = 44.62 cal/K \\textbullet mole and the heat capacities are given as C\\textdegree_p[CHCI_3] (l) = 115.48 J/K \\bullet mole = 27.60 cal/K \\textbullet mole C\\textdegree_p[CI_2] (g) = 34.36 J/K \\textbullet mole = 8.21 cal/K \\textbullet mole C\\textdegree_p[CCI_4] (l) = 132.63 J/K \\textbullet mole = 31.70 cal/K \\textbullet mole C\\textdegree_p[HCI] (g) = 28.84 J/K \\bullet mole = 6.89 cal/K \\bullet mole In order to change the rate of reaction, the process was run at 25\\textdegreeC. Calculate S\\textdegree_323 for this reaction.\n\nOptions:\nA. - 5.92eu\nB. - 24.43 EU\nC.             2.78 cal K^-1\nD. 51.25 cal/K\n\nAnswer: B\n\nReference Solution:\n\\DeltaS\\textdegree_T for a chemical reaction is given by \\DeltaS\\textdegree_T(reaction) = (\\sum_in_iS\\textdegree_T,i)_products - (\\sum_jn_jS\\textdegree_T,j)_reactants wheren_iandn_jare thestoichiometriccoefficients of the balanced reaction equation. Thus \\DeltaS\\textdegree_298 (reaction) = [(1)S\\textdegree_298, (CCl_4) + (1)S\\textdegree_298, (HCl)] - [(1)S\\textdegree_298, (CHCl_3) + (1)S\\textdegree_298, (Cl_2)] = [(1) (51.25) + (1) (44.62)] - [(1) (48.5) + (1)(53.29)] = - 5.92 cal/K = - 5.92eu But \\DeltaS\\textdegree_T(reaction) = \\DeltaS\\textdegree298 (reaction)+ ^T\\int_298\\textdegreeK (\\DeltaC\\textdegree_P / T)dT(1) \\therefore \\DeltaS\\textdegree_T(reaction) = \\DeltaS\\textdegree298 (reaction)+ 2.303 \\DeltaC\\textdegree_P log (T_2 / T_1) \\DeltaC\\textdegree_P = (\\sum_in_iC\\textdegree_P,i)_(products) - (\\sum_jn_jC\\textdegree_P,j)_(reactants) wheren_iandn_jarestoichiometriccoefficients of the products and reactants respectively. \\therefore \\DeltaC\\textdegree_P = [(1) (31.7) + (1) (6.89) - (1) (27.6) + (1) (8.21)] = 2.78 cal K^-1 Substituting this value for \\DeltaC\\textdegree_P into equation (1), \\DeltaS\\textdegree_333 (reaction) = -5.92 + ^323\\textdegreeK\\int_298\\textdegreeK [(2.78) / T]dT = - 5.92 + 2.303(2.78)log [(323\\textdegreeK) / (298\\textdegreeK)] \\DeltaS\\textdegree_333 (reaction) = - 5.84eu= - 24.43 EU", "ref_id": 4421, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "For the reaction For the reaction CHCI_3(l) + Cl_2(g) \\rightarrow CCl_4(l) +HCl(g) at 25\\textdegreeC, S\\textdegree_298 [CHCl_3] (l) = 48.5 cal/K\\textbullet mole S\\textdegree_298 [Cl_2] (g) = 53.29 cal/K \\textbullet mole S\\textdegree_298 [CCl_4] (l) = 51.25 cal/K \\textbullet mole S\\textdegree_298 [HCl] (g) = 44.62 cal/K \\textbullet mole and the heat capacities are given as C\\textdegree_p[CHCI_3] (l) = 115.48 J/K \\bullet mole = 27.60 cal/K \\textbullet mole C\\textdegree_p[CI_2] (g) = 34.36 J/K \\textbullet mole = 8.21 cal/K \\textbullet mole C\\textdegree_p[CCI_4] (l) = 132.63 J/K \\textbullet mole = 31.70 cal/K \\textbullet mole C\\textdegree_p[HCI] (g) = 28.84 J/K \\bullet mole = 6.89 cal/K \\bullet mole In order to change the rate of reaction, the process was run at 25\\textdegreeC. Calculate S\\textdegree_323 for this reaction.", "options": ["- 5.92eu", "- 24.43 EU", "2.78 cal K^-1", "51.25 cal/K"], "answer": "B", "solution": "\\DeltaS\\textdegree_T for a chemical reaction is given by \\DeltaS\\textdegree_T(reaction) = (\\sum_in_iS\\textdegree_T,i)_products - (\\sum_jn_jS\\textdegree_T,j)_reactants wheren_iandn_jare thestoichiometriccoefficients of the balanced reaction equation. Thus \\DeltaS\\textdegree_298 (reaction) = [(1)S\\textdegree_298, (CCl_4) + (1)S\\textdegree_298, (HCl)] - [(1)S\\textdegree_298, (CHCl_3) + (1)S\\textdegree_298, (Cl_2)] = [(1) (51.25) + (1) (44.62)] - [(1) (48.5) + (1)(53.29)] = - 5.92 cal/K = - 5.92eu But \\DeltaS\\textdegree_T(reaction) = \\DeltaS\\textdegree298 (reaction)+ ^T\\int_298\\textdegreeK (\\DeltaC\\textdegree_P / T)dT(1) \\therefore \\DeltaS\\textdegree_T(reaction) = \\DeltaS\\textdegree298 (reaction)+ 2.303 \\DeltaC\\textdegree_P log (T_2 / T_1) \\DeltaC\\textdegree_P = (\\sum_in_iC\\textdegree_P,i)_(products) - (\\sum_jn_jC\\textdegree_P,j)_(reactants) wheren_iandn_jarestoichiometriccoefficients of the products and reactants respectively. \\therefore \\DeltaC\\textdegree_P = [(1) (31.7) + (1) (6.89) - (1) (27.6) + (1) (8.21)] = 2.78 cal K^-1 Substituting this value for \\DeltaC\\textdegree_P into equation (1), \\DeltaS\\textdegree_333 (reaction) = -5.92 + ^323\\textdegreeK\\int_298\\textdegreeK [(2.78) / T]dT = - 5.92 + 2.303(2.78)log [(323\\textdegreeK) / (298\\textdegreeK)] \\DeltaS\\textdegree_333 (reaction) = - 5.84eu= - 24.43 EU"}, "question": "task_1"}}, {"data": {"text": "Question:\nIn regions with mild winters, heat pumps can be used for space heating in winter and cooling in summer. Assuming ideal thermodynamic efficiency for the pump, compare the cost of keeping a room at 25\\textdegreeC in winter and in summer when outside temperatures are 12 and 38\\textdegreeC, respectively. Sup-pose the heat pump were running 50% of the time when the outside temperature was 12\\textdegreeC. If the outside temperature fell to 0\\textdegreeC, could this heat pump maintain the inside at 25\\textdegreeC?\n\nOptions:\nA. Cannot determine without additional information\nB. SUMMER COST > WINTER COST\nC.             SUMMER COST = WINTER COST\nD. SUMMER COST < WINTER COST\n\nAnswer: C\n\nReference Solution:\nThe quantity of heat added to the room is equal to the heat absorbed from the outside together with the work done by the pump. The amount of work needed to addq_hcal to a room when the outside temperature isT_ccan be found by the relation COP = (q_h/ w) = [T_h/ (T_h-T_c)](1) wherew = work COP is the coefficient of performance of the pump. The subscripts h and c are used to represent \"hot and cold\" respectively. [Note that this relation is used because the problem indicates that an ideal thermodynamic effi-ciency for the pump should be assumed.] Solve for W in equation (1) WT_h=q_h(T_h-T_c) \\thereforeW = [{q_h(T_h-T_c)} /T_h](2) Ifq_h= 100 cal is chosen as a basis for the calculation, then equation (2) becomes W = [{100(T_h-T_c)} /T_h]. HereT_h= 25\\textdegreeC = 298\\textdegreeK andT_c= 12\\textdegreeC = 285\\textdegreeK. \\thereforeW = [{100(298 - 285)} / 298] = 4.362 cal. This is the amount of work required to keep a room at 25\\textdegreeC when the outside temperature is 12\\textdegreeC in the winter. In the summer, the requirement is that 100 cal should be ab-sorbed from the room and discharged at the higher tempera-ture outside. Again, W = [{q_c (T_h-T_c)} /T_c]. Note that q_c is now 100 cal instead ofq_h. T_h= 38\\textdegreeC = 311\\textdegreeK andT_c= 25\\textdegreeC = 298\\textdegreeK \\thereforeW = [{100(311 - 298)} / 298] = 4.362 cal Since the same amount of work is required for both cases, SUMMER COST = WINTER COST. If the pump ran 50% of the time to deliver 4.362 cal, then [(4.362) / 0.5] = 8.724 cal would be delivered in the same time running continuously.", "ref_id": 4422, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "In regions with mild winters, heat pumps can be used for space heating in winter and cooling in summer. Assuming ideal thermodynamic efficiency for the pump, compare the cost of keeping a room at 25\\textdegreeC in winter and in summer when outside temperatures are 12 and 38\\textdegreeC, respectively. Sup-pose the heat pump were running 50% of the time when the outside temperature was 12\\textdegreeC. If the outside temperature fell to 0\\textdegreeC, could this heat pump maintain the inside at 25\\textdegreeC?", "options": ["Cannot determine without additional information", "SUMMER COST > WINTER COST", "SUMMER COST = WINTER COST", "SUMMER COST < WINTER COST"], "answer": "C", "solution": "The quantity of heat added to the room is equal to the heat absorbed from the outside together with the work done by the pump. The amount of work needed to addq_hcal to a room when the outside temperature isT_ccan be found by the relation COP = (q_h/ w) = [T_h/ (T_h-T_c)](1) wherew = work COP is the coefficient of performance of the pump. The subscripts h and c are used to represent \"hot and cold\" respectively. [Note that this relation is used because the problem indicates that an ideal thermodynamic effi-ciency for the pump should be assumed.] Solve for W in equation (1) WT_h=q_h(T_h-T_c) \\thereforeW = [{q_h(T_h-T_c)} /T_h](2) Ifq_h= 100 cal is chosen as a basis for the calculation, then equation (2) becomes W = [{100(T_h-T_c)} /T_h]. HereT_h= 25\\textdegreeC = 298\\textdegreeK andT_c= 12\\textdegreeC = 285\\textdegreeK. \\thereforeW = [{100(298 - 285)} / 298] = 4.362 cal. This is the amount of work required to keep a room at 25\\textdegreeC when the outside temperature is 12\\textdegreeC in the winter. In the summer, the requirement is that 100 cal should be ab-sorbed from the room and discharged at the higher tempera-ture outside. Again, W = [{q_c (T_h-T_c)} /T_c]. Note that q_c is now 100 cal instead ofq_h. T_h= 38\\textdegreeC = 311\\textdegreeK andT_c= 25\\textdegreeC = 298\\textdegreeK \\thereforeW = [{100(311 - 298)} / 298] = 4.362 cal Since the same amount of work is required for both cases, SUMMER COST = WINTER COST. If the pump ran 50% of the time to deliver 4.362 cal, then [(4.362) / 0.5] = 8.724 cal would be delivered in the same time running continuously."}, "question": "task_1"}}, {"data": {"text": "Question:\nThe wave function for the state of lowest energy of a one - dimensional harmonic oscillator is \\psi = Ae^-B(x)2 , where A is a normalization constant and B = (\\muK)^1/2 /2\\cyrchar\\cyrtshe. The potential energy is U = (1/2)Kx^2 . Derive the total energy E by substitut-ing \\psi into the Schrodinger equation.\n\nOptions:\nA. E = (h/2) \u0475\nB. E = (h/2) \u03c0\nC.             E = (h/2) K\nD. E = (h/2) \u00b5\n\nAnswer: A\n\nReference Solution:\nSince the wave function for the state of lowest energy of a one - dimensional harmonic oscillator is\\psi = Ae^-B(x)2, (d\\psi / dx) =- 2ABxe^-B(x)2(1) and(d^2\\psi / dx^2) =- 2ABe^-B(x)2 + 4AB^2x^2e^-B(x)2 = 2BAe^-B(x)2 ( - 1 + 2Bx^2)(2) But\\psi = Ae^-B(x)2 , Therefore, equation (2) becomes (d^2\\psi / dx^2) = 2B\\psi ( - 1 + 2Bx^2) =- 2B\\psi + 4B^2\\psix^2(3) For one - dimensional problems, the Schrodinger equation is (d^2\\psi / dx^2) + (2\\mu / \\cyrchar\\cyrtshe^2) {E-U(x)} \\psi = 0(4) Note that throughout this problem, \\psi = wave function E = total energy U(x) = potential energy \\cyrchar\\cyrtshe = (h / 2\\pi) and h = Planck's constant \\mu = reduced mass Since (d^2\\psi / dx^2) has been derived and U(x) and B are given, equation (4) becomes - 2B\\psi + 4B^2x^2\\psi + (2\\mu / \\cyrchar\\cyrtshe^2) {E - (1/2)Kx^2}\\psi = 0(5) or- 2 {(\\muK)^1/2 / 2\\cyrchar\\cyrtshe} + (4\\muKx^2 / 4\\cyrchar\\cyrtshe^2) + (2\\muE / \\cyrchar\\cyrtshe^2) - (\\muKx^2 / \\cyrchar\\cyrtshe^2) = 0. From this, From this, (2\\muE / \\cyrchar\\cyrtshe^2) = (\\muKx^2 / \\cyrchar\\cyrtshe^2) + {(\\muK)^1/2 / \\cyrchar\\cyrtshe)} - (\\muKx^2 / \\cyrchar\\cyrtshe^2) = [{\\muKx^2 - \\muKx^2 + \\cyrchar\\cyrtshe(\\muK)^1/2} / {\\cyrchar\\cyrtshe^2}] (2\\mu / \\cyrchar\\cyrtshe^2) E = [{\\cyrchar\\cyrtshe(\\muK)^1/2} / \\cyrchar\\cyrtshe^2] orE = [{\\cyrchar\\cyrtshe(\\muK)^1/2} / 2\\cyrchar\\cyrtshe] = (\\cyrchar\\cyrtshe / 2) \\surd(K / \\mu)(6) orE = [{\\cyrchar\\cyrtshe(\\muK)^1/2} / 2\\cyrchar\\cyrtshe] = (\\cyrchar\\cyrtshe / 2) \\surd(K / \\mu)(6) Recall that\\cyrchar\\cyrtshe = (h / 2\\pi) Hence equation (6) becomes E = (h / 2) (1 / 2\\pi) \\surd(K / \\mu) = (1/2)h {(1/2\\pi) \\surd(K/\\mu)} = (h/2) \u0475 where\u0475 = (1 / 2\\pi) \\surd(K / \\mu) = fundamental frequency .", "ref_id": 4423, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "The wave function for the state of lowest energy of a one - dimensional harmonic oscillator is \\psi = Ae^-B(x)2 , where A is a normalization constant and B = (\\muK)^1/2 /2\\cyrchar\\cyrtshe. The potential energy is U = (1/2)Kx^2 . Derive the total energy E by substitut-ing \\psi into the Schrodinger equation.", "options": ["E = (h/2) \u0475", "E = (h/2) \u03c0", "E = (h/2) K", "E = (h/2) \u00b5"], "answer": "A", "solution": "Since the wave function for the state of lowest energy of a one - dimensional harmonic oscillator is\\psi = Ae^-B(x)2, (d\\psi / dx) =- 2ABxe^-B(x)2(1) and(d^2\\psi / dx^2) =- 2ABe^-B(x)2 + 4AB^2x^2e^-B(x)2 = 2BAe^-B(x)2 ( - 1 + 2Bx^2)(2) But\\psi = Ae^-B(x)2 , Therefore, equation (2) becomes (d^2\\psi / dx^2) = 2B\\psi ( - 1 + 2Bx^2) =- 2B\\psi + 4B^2\\psix^2(3) For one - dimensional problems, the Schrodinger equation is (d^2\\psi / dx^2) + (2\\mu / \\cyrchar\\cyrtshe^2) {E-U(x)} \\psi = 0(4) Note that throughout this problem, \\psi = wave function E = total energy U(x) = potential energy \\cyrchar\\cyrtshe = (h / 2\\pi) and h = Planck's constant \\mu = reduced mass Since (d^2\\psi / dx^2) has been derived and U(x) and B are given, equation (4) becomes - 2B\\psi + 4B^2x^2\\psi + (2\\mu / \\cyrchar\\cyrtshe^2) {E - (1/2)Kx^2}\\psi = 0(5) or- 2 {(\\muK)^1/2 / 2\\cyrchar\\cyrtshe} + (4\\muKx^2 / 4\\cyrchar\\cyrtshe^2) + (2\\muE / \\cyrchar\\cyrtshe^2) - (\\muKx^2 / \\cyrchar\\cyrtshe^2) = 0. From this, From this, (2\\muE / \\cyrchar\\cyrtshe^2) = (\\muKx^2 / \\cyrchar\\cyrtshe^2) + {(\\muK)^1/2 / \\cyrchar\\cyrtshe)} - (\\muKx^2 / \\cyrchar\\cyrtshe^2) = [{\\muKx^2 - \\muKx^2 + \\cyrchar\\cyrtshe(\\muK)^1/2} / {\\cyrchar\\cyrtshe^2}] (2\\mu / \\cyrchar\\cyrtshe^2) E = [{\\cyrchar\\cyrtshe(\\muK)^1/2} / \\cyrchar\\cyrtshe^2] orE = [{\\cyrchar\\cyrtshe(\\muK)^1/2} / 2\\cyrchar\\cyrtshe] = (\\cyrchar\\cyrtshe / 2) \\surd(K / \\mu)(6) orE = [{\\cyrchar\\cyrtshe(\\muK)^1/2} / 2\\cyrchar\\cyrtshe] = (\\cyrchar\\cyrtshe / 2) \\surd(K / \\mu)(6) Recall that\\cyrchar\\cyrtshe = (h / 2\\pi) Hence equation (6) becomes E = (h / 2) (1 / 2\\pi) \\surd(K / \\mu) = (1/2)h {(1/2\\pi) \\surd(K/\\mu)} = (h/2) \u0475 where\u0475 = (1 / 2\\pi) \\surd(K / \\mu) = fundamental frequency ."}, "question": "task_1"}}, {"data": {"text": "Question:\nIf the height of a water column is 600 mm, what will be the height of the mercury column?\n\nOptions:\nA. 13.6 mm Hg\nB. 44.1 mm Hg\nC.             56.3 mm Hg\nD. 600 mm Hg\n\nAnswer: B\n\nReference Solution:\nThe height of the mercury column will correspond to the pressure of the atmosphere. Now, by definition (h_water) (d_water) = (h_mercury) (d_mercury) where d = density h = height . From the mathematical relationship given, (600 mm) (1 \u00d7 10^3 kg/m^3) = (h_mercury) (13.6 \u00d7 10^3 kg /m^3) h_mercury h_mercury = 600mm [(1 \u00d7 10^3 = 600mm [(1 \u00d7 10^3 kg/m^3) / (13.6 \u00d7 10^3 kg/m^3)] or h_mercury= [(600) / (13.6)] mm Hg = 44.1 mm Hg.", "ref_id": 4424, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "If the height of a water column is 600 mm, what will be the height of the mercury column?", "options": ["13.6 mm Hg", "44.1 mm Hg", "56.3 mm Hg", "600 mm Hg"], "answer": "B", "solution": "The height of the mercury column will correspond to the pressure of the atmosphere. Now, by definition (h_water) (d_water) = (h_mercury) (d_mercury) where d = density h = height . From the mathematical relationship given, (600 mm) (1 \u00d7 10^3 kg/m^3) = (h_mercury) (13.6 \u00d7 10^3 kg /m^3) h_mercury h_mercury = 600mm [(1 \u00d7 10^3 = 600mm [(1 \u00d7 10^3 kg/m^3) / (13.6 \u00d7 10^3 kg/m^3)] or h_mercury= [(600) / (13.6)] mm Hg = 44.1 mm Hg."}, "question": "task_1"}}, {"data": {"text": "Question:\na) Cl_2 (chlorine gas) is pumped into a 1-dm^3 vessel at a temperature of 300\\textdegreeK and a pressure of 1 mm Hg (torr). Determine how long it would take for the pressure to fall to 0.5 mm Hg (torr) if a small hole 0.2\\mum in diameter is punctured In the vessel, and the gas effuses into a vacuum. b) Identify and justify the assumption that you made in the calcu-lation.\n\nOptions:\nA. 5.11 \u00d7 10^-3 cm\nB. 3.2 \u00d7 10^16\nC.             8.18 \u00d7 10^4 hr\nD. 2.948 \u00d7 10^8 sec\n\nAnswer: C\n\nReference Solution:\na) Assuming that the 1-dm^3 vessel Is occupied by N particles, the molecular concentration is thus, n = (N/V) where V is the volume of the vessel. The total number of molecules striking the unit area of the wall,Z_w, per second is given by: Z_wall = (1/4) nC(1) whereCis the mean speed of the molecules given by, C= [(8RT) / ( \\piM )]^(1/2) and n = (N/V). From equation (1), Z_wall = (1/4) (N/V)C(2) But, N/V = PL/RT where P is the pressure and L is the Avogadro number. Therefore, equation (2) becomes Z_wall = (1/4) [(PL) / (RT)]C Definedn/dt= moles striking the small hole of area A per sec. = rate of change in moles of gas per sec. - [(dn) / (dt)] =Z_wall(A/L) = (1/4) [(PL) / (RT)]C\u00d7 (A/L) - [(dn) / (dt)] = [(PAC) / (4RT)](3) From ideal gas law, PV =nRT or n = [(PV) / (RT)](4) Differentiating equation (4) with respect to P and V, R, T, held constant gives, dn = [(VdP) / (RT)] substitutedn=VdP/RT into equation (3). This gives - [(V) / (RT)] [(dP) / (dT)] = [(PAC) / (4RT)] or - [(V) / (RT)] [(dP) / (P)] = [(AC) / (4RT)]dt - [(V) / (RT)] ^(P)2\\int_(P)1 [(dP) / (P)] = [(AC) / (4RT)] ^t\\int_0dt - ^(P)_2\\int_(P)1 [(dP) / (P)] = [(AC) / (4V)] ^t\\int_0dt -lnP\\mid^(P)_2 _(P)1 = [(AC) / (4V)] t -ln[(P_2) / (P_1)] = (AC) / (4V)] t -ln[(0.5) / (1.0)] = [(\\pir^2C) / (4V)] t 0.693 = [ {\\pi[{(0.2 \u00d7 10^-6m) / (2)}{(100 cm) / (1m)}]^2 (2.993\u00d710^4cmsec^-1)t} / {4(10^3 cm^3)}] 0.693 = 2.351 \u00d7 10^-9 sec^-1 t t = [(0.693) / (2.351 \u00d7 10^-9 sec^-1)] = 2.948 \u00d7 10^8 sec t = (2.948 \u00d7 10^8 sec) [(1 hr) / (3600 sec)] t = 8.18 \u00d7 10^4 hr. b) The assumption made in the calculation was that the mean free path \\lambda of the gas was very much larger than the diameter of the hole. To justify this, look at the average number of collisions experienced by one molecule per second, given by Z = 2^(1/2) \\piNd^2C. In this time, the molecule has traveled a distanceC. The mean free path \\lambda is thereforeC/Z , or \\lambda = [(1) / (2^(1/2)\\piNd^2)](5) where N is the number of molecules = PL/RT and d is the diameter of hole. From (5) then \\lambda = [(1) / {2^(1/2)\\pi(PL / RT)d^2}](6) [(PL) / (RT)] = [{(1 / 760atm)(6.02 \u00d7 10^23)} / {(82.06)(300)}] = 3.2 \u00d7 10^16 andd = 3.70 \u00d7 10^-8 cm. Substituting d and PL/RT into (6) gives \\lambda = [(1) / {\\surd(2) \\pi(3.2 \u00d7 10^16) (3.70 \u00d7 10^-8)^2}] \\lambda = 5.11 \u00d7 10^-3 cm Thus \\lambda is >> diameter of hole.", "ref_id": 4425, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "a) Cl_2 (chlorine gas) is pumped into a 1-dm^3 vessel at a temperature of 300\\textdegreeK and a pressure of 1 mm Hg (torr). Determine how long it would take for the pressure to fall to 0.5 mm Hg (torr) if a small hole 0.2\\mum in diameter is punctured In the vessel, and the gas effuses into a vacuum. b) Identify and justify the assumption that you made in the calcu-lation.", "options": ["5.11 \u00d7 10^-3 cm", "3.2 \u00d7 10^16", "8.18 \u00d7 10^4 hr", "2.948 \u00d7 10^8 sec"], "answer": "C", "solution": "a) Assuming that the 1-dm^3 vessel Is occupied by N particles, the molecular concentration is thus, n = (N/V) where V is the volume of the vessel. The total number of molecules striking the unit area of the wall,Z_w, per second is given by: Z_wall = (1/4) nC(1) whereCis the mean speed of the molecules given by, C= [(8RT) / ( \\piM )]^(1/2) and n = (N/V). From equation (1), Z_wall = (1/4) (N/V)C(2) But, N/V = PL/RT where P is the pressure and L is the Avogadro number. Therefore, equation (2) becomes Z_wall = (1/4) [(PL) / (RT)]C Definedn/dt= moles striking the small hole of area A per sec. = rate of change in moles of gas per sec. - [(dn) / (dt)] =Z_wall(A/L) = (1/4) [(PL) / (RT)]C\u00d7 (A/L) - [(dn) / (dt)] = [(PAC) / (4RT)](3) From ideal gas law, PV =nRT or n = [(PV) / (RT)](4) Differentiating equation (4) with respect to P and V, R, T, held constant gives, dn = [(VdP) / (RT)] substitutedn=VdP/RT into equation (3). This gives - [(V) / (RT)] [(dP) / (dT)] = [(PAC) / (4RT)] or - [(V) / (RT)] [(dP) / (P)] = [(AC) / (4RT)]dt - [(V) / (RT)] ^(P)2\\int_(P)1 [(dP) / (P)] = [(AC) / (4RT)] ^t\\int_0dt - ^(P)_2\\int_(P)1 [(dP) / (P)] = [(AC) / (4V)] ^t\\int_0dt -lnP\\mid^(P)_2 _(P)1 = [(AC) / (4V)] t -ln[(P_2) / (P_1)] = (AC) / (4V)] t -ln[(0.5) / (1.0)] = [(\\pir^2C) / (4V)] t 0.693 = [ {\\pi[{(0.2 \u00d7 10^-6m) / (2)}{(100 cm) / (1m)}]^2 (2.993\u00d710^4cmsec^-1)t} / {4(10^3 cm^3)}] 0.693 = 2.351 \u00d7 10^-9 sec^-1 t t = [(0.693) / (2.351 \u00d7 10^-9 sec^-1)] = 2.948 \u00d7 10^8 sec t = (2.948 \u00d7 10^8 sec) [(1 hr) / (3600 sec)] t = 8.18 \u00d7 10^4 hr. b) The assumption made in the calculation was that the mean free path \\lambda of the gas was very much larger than the diameter of the hole. To justify this, look at the average number of collisions experienced by one molecule per second, given by Z = 2^(1/2) \\piNd^2C. In this time, the molecule has traveled a distanceC. The mean free path \\lambda is thereforeC/Z , or \\lambda = [(1) / (2^(1/2)\\piNd^2)](5) where N is the number of molecules = PL/RT and d is the diameter of hole. From (5) then \\lambda = [(1) / {2^(1/2)\\pi(PL / RT)d^2}](6) [(PL) / (RT)] = [{(1 / 760atm)(6.02 \u00d7 10^23)} / {(82.06)(300)}] = 3.2 \u00d7 10^16 andd = 3.70 \u00d7 10^-8 cm. Substituting d and PL/RT into (6) gives \\lambda = [(1) / {\\surd(2) \\pi(3.2 \u00d7 10^16) (3.70 \u00d7 10^-8)^2}] \\lambda = 5.11 \u00d7 10^-3 cm Thus \\lambda is >> diameter of hole."}, "question": "task_1"}}, {"data": {"text": "Question:\n3H_2(g) + N_2(g) \\rightleftharpoons 2NH_3(g) given that \\DeltaH\\textdegree_2-_98 = - 22.08 kcal. The heat capacity data for the reaction is given in cal mol^-1 K^-1 as C\\textdegree_P = 6.9469 - .1999 \u00d7 10^-3T + 4.808 \u00d7 10^-7T^2for H_2(g) C\\textdegree_P = 6.5421 + 1.25 \u00d7 10^-3T - .00717 \u00d7 10^-7T^2for N_2(g) C\\textdegree_P = 6.1890 + 7.8872 \u00d7 10^-3T - 7.2801 \u00d7 10^-7T^2 for NH_3(g)\n\nOptions:\nA. - 20.38 kcal = - 106.209 kJ\nB. - 25.38 kcal = - 106.209 kJ\nC.             - 30.38 kcal = - 106.209 kJ\nD. - 25.38 kcal = - 100.209 kJ\n\nAnswer: B\n\nReference Solution:\nTo calculate \\DeltaH\\textdegree for a reaction at another tempera-ture when one temperature is known and the values of C_P for the reactants and products are given, use the formula \\DeltaH\\textdegree_T = \\DeltaH\\textdegree_2-_98 + ^(T)2\\int_(T)1\\DeltaC_PdT = \\DeltaH\\textdegree_2-_98 + ^700\\int_298 (2C_P,N(H)3 - 3C_P,(H)2 - C_P,(N)2)dT C_P,N(H)3 = 2[a +bT+ cT^2 + . . . . . . .] C_P,_(H)2 = 3[a +bT+ cT^2 + . . . . . . .] C_P,(N)2 = [a +bT+ cT^2 + . . . . . . .] \\Deltaa= 2a_N(H)3 - 3a_(H)2 - a_(N)2 = 2(6.1890) - 3 (6.9469) - 6.5421 = - 15.005 \\Deltab= 2b_N(H)3 - 3b_(H)2 - b_(N)2 = 2 (7.8872 \u00d7 10^-3) - 3 (- .1999 \u00d7 10^-3) - 1.25 \u00d7 10^-3 = 15.12 \u00d7 10^-3 \\Deltac= 2c_N(H)3 - 3c_(H)2 - c_(N)2 = 2(- 7.2801 \u00d7 10^-7) - 3 (4.808 \u00d7 10^-7) - (- .00717 \u00d7 10^-7) = - 28.98 \u00d7 10^-7 \\DeltaH\\textdegree_T = \\DeltaH\\textdegree_2-_98 + ^(T)2\\int_(T)1\\DeltaC_PdT = \\DeltaH\\textdegree_2-_98 + ^(T)2\\int_(T)1 (\\Deltaa+\\DeltabT+ \\DeltacT^2)dT = \\DeltaH\\textdegree_2-_98 + [\\DeltaaT+ (\\Deltab/2)T^2 + (\\Deltac/3)T^3] \\vert^(T)2_(T)1 = \\DeltaH\\textdegree_2-_98 +\\Deltaa(T_2 - T_1) + (\\Deltab/2) (T^2_2 - T^2_1) + (\\Deltac/3)(T^3_2 - T^3_1) \\DeltaH\\textdegree_700 = - 22.08 + [-15.005 (700 - 298) + {(15.12 \u00d7 10^-3) / (2)} (700^2 - 298^2) - {(28.97 \u00d7 10^-7) / (3)} (700^3 - 298^3)] {(1 kcal) / (1000cal)} \\DeltaH\\textdegree_700 = - 25.38 kcal = - 106.209 kJ Note that the values for the constants a, b and c can be found in literatures or handbooks if they are not given.", "ref_id": 4426, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "3H_2(g) + N_2(g) \\rightleftharpoons 2NH_3(g) given that \\DeltaH\\textdegree_2-_98 = - 22.08 kcal. The heat capacity data for the reaction is given in cal mol^-1 K^-1 as C\\textdegree_P = 6.9469 - .1999 \u00d7 10^-3T + 4.808 \u00d7 10^-7T^2for H_2(g) C\\textdegree_P = 6.5421 + 1.25 \u00d7 10^-3T - .00717 \u00d7 10^-7T^2for N_2(g) C\\textdegree_P = 6.1890 + 7.8872 \u00d7 10^-3T - 7.2801 \u00d7 10^-7T^2 for NH_3(g)", "options": ["- 20.38 kcal = - 106.209 kJ", "- 25.38 kcal = - 106.209 kJ", "- 30.38 kcal = - 106.209 kJ", "- 25.38 kcal = - 100.209 kJ"], "answer": "B", "solution": "To calculate \\DeltaH\\textdegree for a reaction at another tempera-ture when one temperature is known and the values of C_P for the reactants and products are given, use the formula \\DeltaH\\textdegree_T = \\DeltaH\\textdegree_2-_98 + ^(T)2\\int_(T)1\\DeltaC_PdT = \\DeltaH\\textdegree_2-_98 + ^700\\int_298 (2C_P,N(H)3 - 3C_P,(H)2 - C_P,(N)2)dT C_P,N(H)3 = 2[a +bT+ cT^2 + . . . . . . .] C_P,_(H)2 = 3[a +bT+ cT^2 + . . . . . . .] C_P,(N)2 = [a +bT+ cT^2 + . . . . . . .] \\Deltaa= 2a_N(H)3 - 3a_(H)2 - a_(N)2 = 2(6.1890) - 3 (6.9469) - 6.5421 = - 15.005 \\Deltab= 2b_N(H)3 - 3b_(H)2 - b_(N)2 = 2 (7.8872 \u00d7 10^-3) - 3 (- .1999 \u00d7 10^-3) - 1.25 \u00d7 10^-3 = 15.12 \u00d7 10^-3 \\Deltac= 2c_N(H)3 - 3c_(H)2 - c_(N)2 = 2(- 7.2801 \u00d7 10^-7) - 3 (4.808 \u00d7 10^-7) - (- .00717 \u00d7 10^-7) = - 28.98 \u00d7 10^-7 \\DeltaH\\textdegree_T = \\DeltaH\\textdegree_2-_98 + ^(T)2\\int_(T)1\\DeltaC_PdT = \\DeltaH\\textdegree_2-_98 + ^(T)2\\int_(T)1 (\\Deltaa+\\DeltabT+ \\DeltacT^2)dT = \\DeltaH\\textdegree_2-_98 + [\\DeltaaT+ (\\Deltab/2)T^2 + (\\Deltac/3)T^3] \\vert^(T)2_(T)1 = \\DeltaH\\textdegree_2-_98 +\\Deltaa(T_2 - T_1) + (\\Deltab/2) (T^2_2 - T^2_1) + (\\Deltac/3)(T^3_2 - T^3_1) \\DeltaH\\textdegree_700 = - 22.08 + [-15.005 (700 - 298) + {(15.12 \u00d7 10^-3) / (2)} (700^2 - 298^2) - {(28.97 \u00d7 10^-7) / (3)} (700^3 - 298^3)] {(1 kcal) / (1000cal)} \\DeltaH\\textdegree_700 = - 25.38 kcal = - 106.209 kJ Note that the values for the constants a, b and c can be found in literatures or handbooks if they are not given."}, "question": "task_1"}}, {"data": {"text": "Question:\nAn 11-liter flask contains 20 g of neon and an unknown weight of hydrogen. The gas density is found to be 0.002 g/cc at 0\\textdegreeC . Calculate the average molecular weight and the number of grams of hydrogen present, and also the pressure. The atomic weight of neon is 20 g/mole.\n\nOptions:\nA. 2.5 gm of hydrogen, 11.5 gm/mole, 4.2 atm\nB. 1 gm of hydrogen, 10 gm/mole, 3.5 atm\nC.             2 gm of hydrogen, 11 gm/mole, 4.07 atm\nD. 3 gm of hydrogen, 12 gm/mole, 4.5 atm\n\nAnswer: C\n\nReference Solution:\nThe gas density = 0.002 gm/cm^3 = 0.002 gm/cm^3 \u00d7 [(1000 cm^3) / (1 liter)] = 2 gm/liter. Note that this is nothing more than conversion of scales. Also 11 liters could have been converted to cm^3. Since the gas density is 2 gm/liter (that is, 2 gm in every liter), the 11 liters will contain 22 gm; but the flask contains 20 gm of neon. Therefore, there are 22 - 20 = 2 gm of hydrogen. Therefore, there exists 1 mole of each gas or 2 moles total. Thus, the average molecular weight = [(20 + 2) / (2)] = 22/2 = 11 gm/mole. Using PV =nRTwhich upon rearranging and substitution yields P = [{(2)(0.082)(273)} / (11)] = 4.07 atm. Remember that temperature is in absolutekelvin.", "ref_id": 4427, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "An 11-liter flask contains 20 g of neon and an unknown weight of hydrogen. The gas density is found to be 0.002 g/cc at 0\\textdegreeC . Calculate the average molecular weight and the number of grams of hydrogen present, and also the pressure. The atomic weight of neon is 20 g/mole.", "options": ["2.5 gm of hydrogen, 11.5 gm/mole, 4.2 atm", "1 gm of hydrogen, 10 gm/mole, 3.5 atm", "2 gm of hydrogen, 11 gm/mole, 4.07 atm", "3 gm of hydrogen, 12 gm/mole, 4.5 atm"], "answer": "C", "solution": "The gas density = 0.002 gm/cm^3 = 0.002 gm/cm^3 \u00d7 [(1000 cm^3) / (1 liter)] = 2 gm/liter. Note that this is nothing more than conversion of scales. Also 11 liters could have been converted to cm^3. Since the gas density is 2 gm/liter (that is, 2 gm in every liter), the 11 liters will contain 22 gm; but the flask contains 20 gm of neon. Therefore, there are 22 - 20 = 2 gm of hydrogen. Therefore, there exists 1 mole of each gas or 2 moles total. Thus, the average molecular weight = [(20 + 2) / (2)] = 22/2 = 11 gm/mole. Using PV =nRTwhich upon rearranging and substitution yields P = [{(2)(0.082)(273)} / (11)] = 4.07 atm. Remember that temperature is in absolutekelvin."}, "question": "task_1"}}, {"data": {"text": "Question:\nAt 20\\textdegreeC the standarde.m.f. of the cell Hg\\vertHg_2Cl_2 (s),HCl(aq)\\vertH_2, Pt is 0.2692 V and at 30\\textdegreeC it is 0.2660 V. Find the values of \\DeltaG_m \\textdegree,\\DeltaH_m\\textdegree, and\\DeltaS_m\\textdegree at 25\\textdegreeC.\n\nOptions:\nA. \\DeltaG_m\textdegree = -25.67 kJ mol^-1, \\DeltaS_m\textdegree = 31.00JK^-1 mol^-1, \\DeltaH_m\textdegree = -35.06 kJ mol^-1\nB. \\DeltaG_m\textdegree = -25.825 kJ mol^-1, \\DeltaS_m\textdegree = -31.00JK^-1 mol^-1, \\DeltaH_m\textdegree = -35.06 kJ mol^-1\nC.             \\DeltaG_m\textdegree = -25.825 kJ mol^-1, \\DeltaS_m\textdegree = 31.00JK^-1 mol^-1, \\DeltaH_m\textdegree = -25.67 kJ mol^-1\nD. \\DeltaG_m\textdegree = -25.98 kJ mol^-1, \\DeltaS_m\textdegree = -31.00JK^-1 mol^-1, \\DeltaH_m\textdegree = -25.82 kJ mol^-1\n\nAnswer: B\n\nReference Solution:\nThe two half reactions are (1/2) Hg_2Cl_2(s) + e^- \\rightarrow Hg(l) +Cl^-(aq) and (1/2) H_2(g) \\rightarrow H^+(aq) + e^- The overall cell reaction is obtained by adding up both equations. That is (1/2) Hg_2Cl_2(s) + (1/2) H_2(g) \\rightarrow Hg(l) +Cl^-(aq) + H^+(aq). By definition, \\DeltaG_m\\textdegree = -nFE\\textdegree where \\DeltaG_m\\textdegree = Standard Gibbs free energy n = number of equivalents (which is one in this case because there is only one electron transfer) F = Faraday's constant E\\textdegree = Standarde.m.f. At 20\\textdegreeC = 293\\textdegreeK \\DeltaG\\textdegree_m = - (9.649 \u00d7 10^4C mol^-1) (0.2692 V) = -25.98 kJ mol^-1 and at 30\\textdegreeC = 303\\textdegreeK \\DeltaG_m \\textdegree = (9.649 \u00d7 10^4 C mol^-1) (0.2660 V) = -25.67 kJ mol^-1 Since 25\\textdegreeC is the average of 20\\textdegreeC and 30\\textdegreeC,\\DeltaG_m\\textdegree will also be the average\\DeltaG_m\\textdegree value at 20\\textdegreeC and 30\\textdegreeC. That is, at 25\\textdegreeC = 298\\textdegreeK \\DeltaG_m \\textdegree = [{(-25.98) + (-25.67)} / (2)] = - [(51.65) / (2)] = -25.825 kJ mol^-1 From the above values,\\DeltaS_m\\textdegree can be approximated. By definition, \\DeltaS_m \\textdegree = - [(\\partial\\DeltaG_m\\textdegree) / (\\partialT)] But [(\\partial\\DeltaG_m\\textdegree) / (\\partialT)]_298\\textdegreeK \\sim [{-25.67 - (-25.98)} / (303 - 293)] = 31.00 JK^-1 mol^-1 Therefore \\DeltaS_m\\textdegree = -31.00JK^-1 mol^-1. \\DeltaH_m\\textdegree =\\DeltaG_m\\textdegree +T\\DeltaS_m\\textdegree \\therefore At 298 \\textdegreeK, \\DeltaH_m \\textdegree = -25.82 + (298) (-31.00) = -35.06 kJ mol^-1", "ref_id": 4428, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "At 20\\textdegreeC the standarde.m.f. of the cell Hg\\vertHg_2Cl_2 (s),HCl(aq)\\vertH_2, Pt is 0.2692 V and at 30\\textdegreeC it is 0.2660 V. Find the values of \\DeltaG_m \\textdegree,\\DeltaH_m\\textdegree, and\\DeltaS_m\\textdegree at 25\\textdegreeC.", "options": ["\\DeltaG_m\textdegree = -25.67 kJ mol^-1, \\DeltaS_m\textdegree = 31.00JK^-1 mol^-1, \\DeltaH_m\textdegree = -35.06 kJ mol^-1", "\\DeltaG_m\textdegree = -25.825 kJ mol^-1, \\DeltaS_m\textdegree = -31.00JK^-1 mol^-1, \\DeltaH_m\textdegree = -35.06 kJ mol^-1", "\\DeltaG_m\textdegree = -25.825 kJ mol^-1, \\DeltaS_m\textdegree = 31.00JK^-1 mol^-1, \\DeltaH_m\textdegree = -25.67 kJ mol^-1", "\\DeltaG_m\textdegree = -25.98 kJ mol^-1, \\DeltaS_m\textdegree = -31.00JK^-1 mol^-1, \\DeltaH_m\textdegree = -25.82 kJ mol^-1"], "answer": "B", "solution": "The two half reactions are (1/2) Hg_2Cl_2(s) + e^- \\rightarrow Hg(l) +Cl^-(aq) and (1/2) H_2(g) \\rightarrow H^+(aq) + e^- The overall cell reaction is obtained by adding up both equations. That is (1/2) Hg_2Cl_2(s) + (1/2) H_2(g) \\rightarrow Hg(l) +Cl^-(aq) + H^+(aq). By definition, \\DeltaG_m\\textdegree = -nFE\\textdegree where \\DeltaG_m\\textdegree = Standard Gibbs free energy n = number of equivalents (which is one in this case because there is only one electron transfer) F = Faraday's constant E\\textdegree = Standarde.m.f. At 20\\textdegreeC = 293\\textdegreeK \\DeltaG\\textdegree_m = - (9.649 \u00d7 10^4C mol^-1) (0.2692 V) = -25.98 kJ mol^-1 and at 30\\textdegreeC = 303\\textdegreeK \\DeltaG_m \\textdegree = (9.649 \u00d7 10^4 C mol^-1) (0.2660 V) = -25.67 kJ mol^-1 Since 25\\textdegreeC is the average of 20\\textdegreeC and 30\\textdegreeC,\\DeltaG_m\\textdegree will also be the average\\DeltaG_m\\textdegree value at 20\\textdegreeC and 30\\textdegreeC. That is, at 25\\textdegreeC = 298\\textdegreeK \\DeltaG_m \\textdegree = [{(-25.98) + (-25.67)} / (2)] = - [(51.65) / (2)] = -25.825 kJ mol^-1 From the above values,\\DeltaS_m\\textdegree can be approximated. By definition, \\DeltaS_m \\textdegree = - [(\\partial\\DeltaG_m\\textdegree) / (\\partialT)] But [(\\partial\\DeltaG_m\\textdegree) / (\\partialT)]_298\\textdegreeK \\sim [{-25.67 - (-25.98)} / (303 - 293)] = 31.00 JK^-1 mol^-1 Therefore \\DeltaS_m\\textdegree = -31.00JK^-1 mol^-1. \\DeltaH_m\\textdegree =\\DeltaG_m\\textdegree +T\\DeltaS_m\\textdegree \\therefore At 298 \\textdegreeK, \\DeltaH_m \\textdegree = -25.82 + (298) (-31.00) = -35.06 kJ mol^-1"}, "question": "task_1"}}, {"data": {"text": "Question:\nThe emf of the cell, H_2 (1 atm) \\vertHC1 (0.01 m) \\vertAgCl(c) \\vertAg is given by E (in volts) = -0.096 + 1.90 \u00d7 10^-3 T - 3.041 \u00d7 10^-6 T^2. Calculate \\DeltaG, \\DeltaS, \\DeltaH, and \\DeltaC_p for the cell reac-tion (state the reaction) at 298 K.\n\nOptions:\nA. \\DeltaG = -19319.3 J, \\DeltaS = 84.5 J K^-1, \\DeltaH = -16801.2 J, \\DeltaC_p = -174.9 J K^-1\nB. \\DeltaG = -1931.9 J, \\DeltaS = 8.45 J K^-1, \\DeltaH = -16801.2 J, \\DeltaC_p = -174.9 J K^-1\nC.             \\DeltaG = -19319.3 J, \\DeltaS = 8.45 J K^-1, \\DeltaH = -168012 J, \\DeltaC_p = -174.9 J K^-1\nD. \\DeltaG = -19319.3 J, \\DeltaS = 8.45 J K^-1, \\DeltaH = -16801.2 J, \\DeltaC_p = -174.9 J K^-1\n\nAnswer: D\n\nReference Solution:\na) The cell reaction can be obtained by adding up the two half reactions. That is, (1/2 H_2 \\rightarrow H^+ + e^-) + (AgCl + e^- \\rightarrow Ag + Cl^-) = 1/2 H_2 + AgCl \\rightarrow Ag + H^+ + Cl^-(1) The E value of a cell is related to the Gibbs free energy by \\DeltaG = - nFE(2) where F = Faraday's constant. Therefore, \\DeltaG = -(1) mole (96500) [(coul) / (mole)] (-0.096V + 1.90 \u00d7 10^-3 V/\\textdegreeK T - 3.041 \u00d7 10^-6 V/\\textdegreeK^2 T^2) volt At 298\\textdegreeK, \\DeltaG = -(1) (96500) [-0.096 + 1.90 \u00d7 10^-3(298) - 3.041 \u00d7 10^-6 (298)^2] = -96500 [-0.096 + 0.5662 - 0.2700] = -96500 [(J) / (V)] (0.2002) V = -19319.3 J b) The thermodynamic relationship between entropy, volume, temperature, free energy and pressure is given by dG = VdP - SdT(3) At constant pressure, equation (3) becomes dG = -SdT from which [(\\partial\\DeltaG) / (\\partialT)]_p = - \\DeltaS(4) From equation (2) [(\\partial\\DeltaG) / (\\partialT)]_p = - nF [(\\partialE) / (\\partialT)]_p(5) where n = 1 The combination of equations (4) and (5) gives \\DeltaS = F [(\\partialE) / (\\partialT)]_p(6) From the given E value [(\\partialE) / (\\partialT)]_p = 1.90 \u00d7 10^-3 - 6.082 \u00d7 10^-6 T(7) At 298\\textdegreeK equation (7) becomes [(\\partialE) / (\\partialT)]_p = 1.90 \u00d7 10^-3 - 6.082 \u00d7 10^-6 (298) = 0.0019 - 0.0018124 = 0.0000876 (V/\\textdegreeK) Substitute this value and the value of F in equation (6) and solve for \\DeltaS to get \\DeltaS = 96500 (J/V) (0.0000876) (V/\\textdegreeK) = 8.45 J K^-1 c) Another thermodynamic relation is \\DeltaH = \\DeltaG + T\\DeltaS But\\DeltaG = -19319.3 J and\\DeltaS = 8.45 J K^-1 Therefore, at 298\\textdegreeK, \\DeltaH = -19319.3 J + (298 K) (8.45 J K^-1) = -19319.3 J + 2518.1 J = -16801.2 J d) By definition \\DeltaC_p = [(\\partial\\DeltaH) / (\\partialT)]_p where C_p = heat capacity at constant pressure. Recall that \\DeltaH = \\DeltaG + T\\DeltaS \\therefore[(\\partial\\DeltaH) / (\\partialT)]_p = [(\\partial\\DeltaG) / (\\partialT)]_p + [{\\partial (T\\DeltaS)} / (\\partialT)]_p = [(\\partial\\DeltaG) / (\\partialT)]_p + \\DeltaS + T [(\\partial\\DeltaS) / (\\partialT)]_p(8) From equation (4) [(\\partial\\DeltaG) / (\\partialT)]_p = - \\DeltaS Therefore equation (8) becomes [(\\partial\\DeltaH) / (\\partialT)]_p = - \\DeltaS + \\DeltaS + T [(\\partial\\DeltaS) / (\\partialT)]_p \\therefore\\DeltaC_p = [(\\partial\\DeltaH) / (\\partialT)]_p = [(\\partial\\DeltaS) / (\\partialT)]_p .(9) But equation (6) gives, But equation (6) gives, \\DeltaS = F [(\\partialE) / (\\partialT)]_p \\therefore[(\\partial\\DeltaS) / (\\partialT)]_p = F [(\\partial^2E) / (\\partialT^2)]_p(10) Combining equations (9) and (10) gives \\DeltaC_p = T [(\\partial\\DeltaS) / (\\partialT)]_p = T F [(\\partial^2E) / (\\partialT^2)]_p(11) From the given E value, [(\\partial^2E) / (\\partialT^2)] = - 6.082 \u00d7 10^-6 [(V) / (\\textdegreeK^2)]. \\therefore\\DeltaC_p = TF (-6.082 \u00d7 10^-6). At 298\\textdegreeK, \\DeltaC_p = (298\\textdegreeK) (96500) (J/V) (-6.082 \u00d7 10^-6) [(V) / (\\textdegreeK^2)] = -174.9 J K^-1", "ref_id": 4429, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "The emf of the cell, H_2 (1 atm) \\vertHC1 (0.01 m) \\vertAgCl(c) \\vertAg is given by E (in volts) = -0.096 + 1.90 \u00d7 10^-3 T - 3.041 \u00d7 10^-6 T^2. Calculate \\DeltaG, \\DeltaS, \\DeltaH, and \\DeltaC_p for the cell reac-tion (state the reaction) at 298 K.", "options": ["\\DeltaG = -19319.3 J, \\DeltaS = 84.5 J K^-1, \\DeltaH = -16801.2 J, \\DeltaC_p = -174.9 J K^-1", "\\DeltaG = -1931.9 J, \\DeltaS = 8.45 J K^-1, \\DeltaH = -16801.2 J, \\DeltaC_p = -174.9 J K^-1", "\\DeltaG = -19319.3 J, \\DeltaS = 8.45 J K^-1, \\DeltaH = -168012 J, \\DeltaC_p = -174.9 J K^-1", "\\DeltaG = -19319.3 J, \\DeltaS = 8.45 J K^-1, \\DeltaH = -16801.2 J, \\DeltaC_p = -174.9 J K^-1"], "answer": "D", "solution": "a) The cell reaction can be obtained by adding up the two half reactions. That is, (1/2 H_2 \\rightarrow H^+ + e^-) + (AgCl + e^- \\rightarrow Ag + Cl^-) = 1/2 H_2 + AgCl \\rightarrow Ag + H^+ + Cl^-(1) The E value of a cell is related to the Gibbs free energy by \\DeltaG = - nFE(2) where F = Faraday's constant. Therefore, \\DeltaG = -(1) mole (96500) [(coul) / (mole)] (-0.096V + 1.90 \u00d7 10^-3 V/\\textdegreeK T - 3.041 \u00d7 10^-6 V/\\textdegreeK^2 T^2) volt At 298\\textdegreeK, \\DeltaG = -(1) (96500) [-0.096 + 1.90 \u00d7 10^-3(298) - 3.041 \u00d7 10^-6 (298)^2] = -96500 [-0.096 + 0.5662 - 0.2700] = -96500 [(J) / (V)] (0.2002) V = -19319.3 J b) The thermodynamic relationship between entropy, volume, temperature, free energy and pressure is given by dG = VdP - SdT(3) At constant pressure, equation (3) becomes dG = -SdT from which [(\\partial\\DeltaG) / (\\partialT)]_p = - \\DeltaS(4) From equation (2) [(\\partial\\DeltaG) / (\\partialT)]_p = - nF [(\\partialE) / (\\partialT)]_p(5) where n = 1 The combination of equations (4) and (5) gives \\DeltaS = F [(\\partialE) / (\\partialT)]_p(6) From the given E value [(\\partialE) / (\\partialT)]_p = 1.90 \u00d7 10^-3 - 6.082 \u00d7 10^-6 T(7) At 298\\textdegreeK equation (7) becomes [(\\partialE) / (\\partialT)]_p = 1.90 \u00d7 10^-3 - 6.082 \u00d7 10^-6 (298) = 0.0019 - 0.0018124 = 0.0000876 (V/\\textdegreeK) Substitute this value and the value of F in equation (6) and solve for \\DeltaS to get \\DeltaS = 96500 (J/V) (0.0000876) (V/\\textdegreeK) = 8.45 J K^-1 c) Another thermodynamic relation is \\DeltaH = \\DeltaG + T\\DeltaS But\\DeltaG = -19319.3 J and\\DeltaS = 8.45 J K^-1 Therefore, at 298\\textdegreeK, \\DeltaH = -19319.3 J + (298 K) (8.45 J K^-1) = -19319.3 J + 2518.1 J = -16801.2 J d) By definition \\DeltaC_p = [(\\partial\\DeltaH) / (\\partialT)]_p where C_p = heat capacity at constant pressure. Recall that \\DeltaH = \\DeltaG + T\\DeltaS \\therefore[(\\partial\\DeltaH) / (\\partialT)]_p = [(\\partial\\DeltaG) / (\\partialT)]_p + [{\\partial (T\\DeltaS)} / (\\partialT)]_p = [(\\partial\\DeltaG) / (\\partialT)]_p + \\DeltaS + T [(\\partial\\DeltaS) / (\\partialT)]_p(8) From equation (4) [(\\partial\\DeltaG) / (\\partialT)]_p = - \\DeltaS Therefore equation (8) becomes [(\\partial\\DeltaH) / (\\partialT)]_p = - \\DeltaS + \\DeltaS + T [(\\partial\\DeltaS) / (\\partialT)]_p \\therefore\\DeltaC_p = [(\\partial\\DeltaH) / (\\partialT)]_p = [(\\partial\\DeltaS) / (\\partialT)]_p .(9) But equation (6) gives, But equation (6) gives, \\DeltaS = F [(\\partialE) / (\\partialT)]_p \\therefore[(\\partial\\DeltaS) / (\\partialT)]_p = F [(\\partial^2E) / (\\partialT^2)]_p(10) Combining equations (9) and (10) gives \\DeltaC_p = T [(\\partial\\DeltaS) / (\\partialT)]_p = T F [(\\partial^2E) / (\\partialT^2)]_p(11) From the given E value, [(\\partial^2E) / (\\partialT^2)] = - 6.082 \u00d7 10^-6 [(V) / (\\textdegreeK^2)]. \\therefore\\DeltaC_p = TF (-6.082 \u00d7 10^-6). At 298\\textdegreeK, \\DeltaC_p = (298\\textdegreeK) (96500) (J/V) (-6.082 \u00d7 10^-6) [(V) / (\\textdegreeK^2)] = -174.9 J K^-1"}, "question": "task_1"}}, {"data": {"text": "Question:\nCalculate\\Deltam, the difference in mass between the final and initial nuclei in grams per mole for the emission of a \\gamma ray, (^19 _8)0\\textasteriskcentered (excited state) \\rightarrow (^19 _8)0 (ground state) + \\gamma (\\DeltaE = 1.06 \u00d7 10^8 kcal/mole).\n\nOptions:\nA. - 4.92 \u00d7 10^-3 g/mole\nB. - 3.92 \u00d7 10^-3 g/mole\nC.             - 5.92 \u00d7 10^-3 g/mole\nD. - 4.92 \u00d7 10^-2 g/mole\n\nAnswer: A\n\nReference Solution:\n\\Deltamcan be solved for by using Einstein's Law, which relates\\Deltam and \\DeltaE. This law is given by \\DeltaE = \\Deltamc^2 , where \\DeltaE = the energy,\\Deltamis the change in mass, and c is the speed of light, 3 \u00d710^10 cm/sec. When using Einstein's Law, the \\DeltaE, in kcal/mole, must be first converted to ergs/mole. There are 4.18 \u00d710^10ergsin one kcal, therefore one converts kcal to ergs by multiplying the number of kcal by 4.18 \u00d710^10 ergs/kcal. no. of ergs = 4.18 \u00d710^10 ergs/kcal \u00d7 1.06 \u00d710^8 kcal/mole = 4.43 \u00d710^18 ergs/mole. Solving for\\Deltam, \\Deltam= (\\DeltaE / c^2) , where \\DeltaE = 4.43 \u00d710^18 ergs/mole c = 3 \u00d710^10 cm/sec ergs = [(g cm^2) / (sec^2)] \\therefore\\Deltam= [(4.43 \u00d710^18) / {(3 \u00d710^10)^2}] (g/mole) \\Deltam= 4.92 \u00d710^-3 g/mole . When a \\gamma particle is emitted, one knows that the final state weighs less than the initial state, therefore, \\Deltam= - 4.92 \u00d7 10^-3 g/mole.", "ref_id": 4430, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Calculate\\Deltam, the difference in mass between the final and initial nuclei in grams per mole for the emission of a \\gamma ray, (^19 _8)0\\textasteriskcentered (excited state) \\rightarrow (^19 _8)0 (ground state) + \\gamma (\\DeltaE = 1.06 \u00d7 10^8 kcal/mole).", "options": ["- 4.92 \u00d7 10^-3 g/mole", "- 3.92 \u00d7 10^-3 g/mole", "- 5.92 \u00d7 10^-3 g/mole", "- 4.92 \u00d7 10^-2 g/mole"], "answer": "A", "solution": "\\Deltamcan be solved for by using Einstein's Law, which relates\\Deltam and \\DeltaE. This law is given by \\DeltaE = \\Deltamc^2 , where \\DeltaE = the energy,\\Deltamis the change in mass, and c is the speed of light, 3 \u00d710^10 cm/sec. When using Einstein's Law, the \\DeltaE, in kcal/mole, must be first converted to ergs/mole. There are 4.18 \u00d710^10ergsin one kcal, therefore one converts kcal to ergs by multiplying the number of kcal by 4.18 \u00d710^10 ergs/kcal. no. of ergs = 4.18 \u00d710^10 ergs/kcal \u00d7 1.06 \u00d710^8 kcal/mole = 4.43 \u00d710^18 ergs/mole. Solving for\\Deltam, \\Deltam= (\\DeltaE / c^2) , where \\DeltaE = 4.43 \u00d710^18 ergs/mole c = 3 \u00d710^10 cm/sec ergs = [(g cm^2) / (sec^2)] \\therefore\\Deltam= [(4.43 \u00d710^18) / {(3 \u00d710^10)^2}] (g/mole) \\Deltam= 4.92 \u00d710^-3 g/mole . When a \\gamma particle is emitted, one knows that the final state weighs less than the initial state, therefore, \\Deltam= - 4.92 \u00d7 10^-3 g/mole."}, "question": "task_1"}}, {"data": {"text": "Question:\nThe measured voltage of the concentration cell Ag\\vertAgNO_3 (0.0100m) \\vert\\vertAgNO_3 (y)\\vertAg was 0.0650 V at 25\\textdegreeC. Calculate themolalityy of the right-hand half-cell assuming \\gamma_\\pm = 1.\n\nOptions:\nA. 0.1505m\nB. 0.1005m\nC.             0.1255m\nD. 0.1205m\n\nAnswer: C\n\nReference Solution:\na) The cell's overall reaction is given by Ag^+(y) \\rightarrow Ag^+(0.0100m). For this cell, the Nernst equation is E = E\\textdegree - [(RT) / ( nF nF )]ln[{a_\\pm (0.01)} )]ln[{a_\\pm (0.01)} / {(a_\\pm (y)}](1) Here, n = 1 a = activity E\\textdegree = standard potential of the cell F = Faraday's constant Because of the similarity of the reactions in a concentra-tion cell, E\\textdegree = 0 and the potential is given by the non-standard conditions of the reactants and products. There-fore, equation (1) becomes E = - [(RT) / (F)]ln[{a_\\pm (0.01)} / {(a_\\pm (y)}](2) By definition, the mean activity of a solute undergoing ionization in solution is given by a_\\pm =\\gamma_\\pmC_\\pm where\\gamma_\\pm = mean activity coefficient C_\\pm = mean ionicmolalconcentration But \\gamma_\\pm is given to be 1, therefore, a_\\pm = C_\\pm and equation (2) becomes E = - [{R(298)} / (F)]ln[(0.01) / (y)] = -0.05916 log [(0.01) / (y)] at 25\\textdegreeC. or log[(0.01) / (y)] = - [(E) / (0.05916)] = - [(0.0650) / (0.05916)] = - 1.09 = - 1.09 87; From which [(0.01) / (y)] = 7.967 \u00d7 10^-2 andy = [(0.01) / (7.967 \u00d7 10^-2)] = 0.1255m", "ref_id": 4431, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "The measured voltage of the concentration cell Ag\\vertAgNO_3 (0.0100m) \\vert\\vertAgNO_3 (y)\\vertAg was 0.0650 V at 25\\textdegreeC. Calculate themolalityy of the right-hand half-cell assuming \\gamma_\\pm = 1.", "options": ["0.1505m", "0.1005m", "0.1255m", "0.1205m"], "answer": "C", "solution": "a) The cell's overall reaction is given by Ag^+(y) \\rightarrow Ag^+(0.0100m). For this cell, the Nernst equation is E = E\\textdegree - [(RT) / ( nF nF )]ln[{a_\\pm (0.01)} )]ln[{a_\\pm (0.01)} / {(a_\\pm (y)}](1) Here, n = 1 a = activity E\\textdegree = standard potential of the cell F = Faraday's constant Because of the similarity of the reactions in a concentra-tion cell, E\\textdegree = 0 and the potential is given by the non-standard conditions of the reactants and products. There-fore, equation (1) becomes E = - [(RT) / (F)]ln[{a_\\pm (0.01)} / {(a_\\pm (y)}](2) By definition, the mean activity of a solute undergoing ionization in solution is given by a_\\pm =\\gamma_\\pmC_\\pm where\\gamma_\\pm = mean activity coefficient C_\\pm = mean ionicmolalconcentration But \\gamma_\\pm is given to be 1, therefore, a_\\pm = C_\\pm and equation (2) becomes E = - [{R(298)} / (F)]ln[(0.01) / (y)] = -0.05916 log [(0.01) / (y)] at 25\\textdegreeC. or log[(0.01) / (y)] = - [(E) / (0.05916)] = - [(0.0650) / (0.05916)] = - 1.09 = - 1.09 87; From which [(0.01) / (y)] = 7.967 \u00d7 10^-2 andy = [(0.01) / (7.967 \u00d7 10^-2)] = 0.1255m"}, "question": "task_1"}}, {"data": {"text": "Question:\nCalculate the recoil energy of an atom of mass 10, following emission of a 2Mevgamma ray.\n\nOptions:\nA. 100ev\nB. 320ev\nC.             214ev\nD. 500ev\n\nAnswer: C\n\nReference Solution:\nThe energy equivalent to one mass unit is E = mc^2 = 931 \u00d7 10^6ev. E_r= [(2 \u00d7 10^6)^2 / (1862 \u00d7 10^6 \u00d7 10)] = 214ev, whereE_r= recoil energy or, alternatively, E_r= [(E^2 _\\gamma) / (2 Mc^2)] = [{4 \u00d7 10^12 (ev)^2} / {2 \u00d710 (g / mole) \u00d7 {mole / (6.02 \u00d7 10^23molec)} \u00d7 9 \u00d7 10^20 (cm^2 / sec^2)}] = [(4 \u00d7 10^12 (ev)^2) / {((180 \u00d7 10^20 ergs) / (6 \u00d710^23 molecules)) \u00d7 (ev/ (1.6 \u00d7 10-12ergs))}] = [(4 \u00d7 10^12ev) / (186.2 \u00d7 10^8 recoil)] E_r= 214ev/recoil", "ref_id": 4432, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Calculate the recoil energy of an atom of mass 10, following emission of a 2Mevgamma ray.", "options": ["100ev", "320ev", "214ev", "500ev"], "answer": "C", "solution": "The energy equivalent to one mass unit is E = mc^2 = 931 \u00d7 10^6ev. E_r= [(2 \u00d7 10^6)^2 / (1862 \u00d7 10^6 \u00d7 10)] = 214ev, whereE_r= recoil energy or, alternatively, E_r= [(E^2 _\\gamma) / (2 Mc^2)] = [{4 \u00d7 10^12 (ev)^2} / {2 \u00d710 (g / mole) \u00d7 {mole / (6.02 \u00d7 10^23molec)} \u00d7 9 \u00d7 10^20 (cm^2 / sec^2)}] = [(4 \u00d7 10^12 (ev)^2) / {((180 \u00d7 10^20 ergs) / (6 \u00d710^23 molecules)) \u00d7 (ev/ (1.6 \u00d7 10-12ergs))}] = [(4 \u00d7 10^12ev) / (186.2 \u00d7 10^8 recoil)] E_r= 214ev/recoil"}, "question": "task_1"}}, {"data": {"text": "Question:\nThe standard enthalpy of the hydrogenation ofpropenein the reaction CH_2: CH.CH_3 + H_2 \\rightarrow CH_3.CH_2.CH_3 is - 124 kJ mol^-1. The standard enthalpy of the oxidation of propane in the reaction CH_3.CH_2.CH_3 + 5O_2 \\rightarrow 3CO_2 + 4H_2O is - 2222 kJmol^-1. Find the standard enthalpy of the combustion reaction ofpropene.\n\nOptions:\nA. - 2222 kJ mol^-1\nB. - 2068 kJ mol^-1\nC.             - 124 kJ mol^-1\nD. + 286 kJ mol^-1\n\nAnswer: B\n\nReference Solution:\nThe enthalpy of the reaction C_3H_6(g) + (9/2) O_2(g) \\rightarrow 3CO_2 (g) + 3H_2O(l)(1) is required. The reactions given are: C_3H_6(g) + H_2 (g) \\rightarrow C_3H_8 (g) \\DeltaH\\textdegree = - 124 kJ mole^-1(2) C_3H_8(g) + 5O_2(g) \\rightarrow 3CO_2 (g) + 4H_2O(l) \\DeltaH\\textdegree = - 2222 kJ mol^-1(3) Surveying the equations (2) and (3), observe that the following substances are to be eliminated to obtain the desired equation (1): C_3H_8(g), and H_2(g). From thestandard heats of formation, H_2(g) + 1/2 O_2(g) \\rightarrow H_2O(l) \\DeltaH\\textdegree = - 286 kJ mole^-1(4) Arrange equations (2), (3) and (4) as follows, with the substances to be retained placed on the left or right de-pending on where they appeared in the desired equation. C_3H_6 (g) + H_2 (g) \\rightarrow C_3H_8 (g)\\DeltaH\\textdegree = - 124 kJ mol^-1 C_3H_8 (g) + 5O_2(g) \\rightarrow 3CO_2 (g) + 4H_2O (l)\\DeltaH\\textdegree = - 2222 kJ mol^-1 H_2O(l) \\rightarrow H_2(g) + 1/2 O^2(g)\\DeltaH\\textdegree = + 286 kJ mol^-1 Addition of these three equations yields C_3H_6(g) + (9/2)O_2 + 3CO_2(g) + 3H_2O (l) , \\DeltaH\\textdegree = (- 124 - 2222 + 286) = - 2068 kJ mol^-1 Hence, the standard enthalpy of the combustion reaction ofpropene, is - 2068 kJ mol^-1. In general, the enthalpies of the reaction may be found by adding and substractingthe appropriate reactions and using Hess's law. Thermochemicalequations can be manipulated in the same way as algebraic equations.", "ref_id": 4433, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "The standard enthalpy of the hydrogenation ofpropenein the reaction CH_2: CH.CH_3 + H_2 \\rightarrow CH_3.CH_2.CH_3 is - 124 kJ mol^-1. The standard enthalpy of the oxidation of propane in the reaction CH_3.CH_2.CH_3 + 5O_2 \\rightarrow 3CO_2 + 4H_2O is - 2222 kJmol^-1. Find the standard enthalpy of the combustion reaction ofpropene.", "options": ["- 2222 kJ mol^-1", "- 2068 kJ mol^-1", "- 124 kJ mol^-1", "+ 286 kJ mol^-1"], "answer": "B", "solution": "The enthalpy of the reaction C_3H_6(g) + (9/2) O_2(g) \\rightarrow 3CO_2 (g) + 3H_2O(l)(1) is required. The reactions given are: C_3H_6(g) + H_2 (g) \\rightarrow C_3H_8 (g) \\DeltaH\\textdegree = - 124 kJ mole^-1(2) C_3H_8(g) + 5O_2(g) \\rightarrow 3CO_2 (g) + 4H_2O(l) \\DeltaH\\textdegree = - 2222 kJ mol^-1(3) Surveying the equations (2) and (3), observe that the following substances are to be eliminated to obtain the desired equation (1): C_3H_8(g), and H_2(g). From thestandard heats of formation, H_2(g) + 1/2 O_2(g) \\rightarrow H_2O(l) \\DeltaH\\textdegree = - 286 kJ mole^-1(4) Arrange equations (2), (3) and (4) as follows, with the substances to be retained placed on the left or right de-pending on where they appeared in the desired equation. C_3H_6 (g) + H_2 (g) \\rightarrow C_3H_8 (g)\\DeltaH\\textdegree = - 124 kJ mol^-1 C_3H_8 (g) + 5O_2(g) \\rightarrow 3CO_2 (g) + 4H_2O (l)\\DeltaH\\textdegree = - 2222 kJ mol^-1 H_2O(l) \\rightarrow H_2(g) + 1/2 O^2(g)\\DeltaH\\textdegree = + 286 kJ mol^-1 Addition of these three equations yields C_3H_6(g) + (9/2)O_2 + 3CO_2(g) + 3H_2O (l) , \\DeltaH\\textdegree = (- 124 - 2222 + 286) = - 2068 kJ mol^-1 Hence, the standard enthalpy of the combustion reaction ofpropene, is - 2068 kJ mol^-1. In general, the enthalpies of the reaction may be found by adding and substractingthe appropriate reactions and using Hess's law. Thermochemicalequations can be manipulated in the same way as algebraic equations."}, "question": "task_1"}}, {"data": {"text": "Question:\nAir is approximately 80% nitrogen and 20% oxygen (on a mole basis). If 4.0 g of hydrogen is added to a 22.4-liter flask maintained at 0\\textdegreeC and initially filled with air at 1atm pressure, what will be the molecular weight (i.e., the average molecular weight) of the hydrogen-air mixture?\n\nOptions:\nA. 22.4 gm/mole\nB. 32.8 gm/mole\nC.             10.9 gm/mole\nD. 4.0 gm/mole\n\nAnswer: C\n\nReference Solution:\nThere are 22.4 liters of air at STP (0\\textdegreeC and 1atm). There-fore, there is 1 mole of air. Also, there are 4 gm of hydrogen, which is equivalent to [(4 gm) / (2 gm/mole)] = 2 moles. By definition, M_average= {[^3\\sum_i=1n_iM_i] / [^3\\sum_i=1n_i]} wheren_1 = moles of oxygen in air n_2 = moles of nitrogen in air n_3 = moles of hydrogen M_1 = molecular weight of oxygen M_2 = molecular weight of nitrogen M_3 = molecular weight of hydrogen. M_average = [(n_1M_1 + n_2M_2 + n_3M_3) / (n_1 + n_2 + n_3)] = [{(.2)(32) + (.8)(28) + 2(2)} / (.2 + .8 + 2)] = [(32.8) / (3)] gm/mole = 10.9 gm/mole.", "ref_id": 4434, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Air is approximately 80% nitrogen and 20% oxygen (on a mole basis). If 4.0 g of hydrogen is added to a 22.4-liter flask maintained at 0\\textdegreeC and initially filled with air at 1atm pressure, what will be the molecular weight (i.e., the average molecular weight) of the hydrogen-air mixture?", "options": ["22.4 gm/mole", "32.8 gm/mole", "10.9 gm/mole", "4.0 gm/mole"], "answer": "C", "solution": "There are 22.4 liters of air at STP (0\\textdegreeC and 1atm). There-fore, there is 1 mole of air. Also, there are 4 gm of hydrogen, which is equivalent to [(4 gm) / (2 gm/mole)] = 2 moles. By definition, M_average= {[^3\\sum_i=1n_iM_i] / [^3\\sum_i=1n_i]} wheren_1 = moles of oxygen in air n_2 = moles of nitrogen in air n_3 = moles of hydrogen M_1 = molecular weight of oxygen M_2 = molecular weight of nitrogen M_3 = molecular weight of hydrogen. M_average = [(n_1M_1 + n_2M_2 + n_3M_3) / (n_1 + n_2 + n_3)] = [{(.2)(32) + (.8)(28) + 2(2)} / (.2 + .8 + 2)] = [(32.8) / (3)] gm/mole = 10.9 gm/mole."}, "question": "task_1"}}, {"data": {"text": "Question:\nOne side of a glass cylinder is initially filled with H_2 at a pressure P and the other side with N_2 at a pressure 2P. This glass cylinder is closed at both ends and a glass filter in the middle of the cylinder divides it into two compartments of equal volume. Describe what happens, starting at t = 0, at constant temperature and assuming that the pores of the filter have a diameter much smaller than the mean free paths of the gases.\n\nOptions:\nA. The rate of effusion of H_2 into the N_2 compartment is slower than that of N_2 into the H_2 compartment\nB. The rate of effusion of H_2 is proportional to the pressure of H_2\nC.             The rate of effusion of H_2 into the N_2 compartment is 1.87 times faster than that of N_2 into the H_2 compartment of the cylinder.\nD. The rate of effusion of H_2 into the N_2 compartment is equal to that of N_2 into the H_2 compartment\n\nAnswer: C\n\nReference Solution:\nThe total number of molecules striking the unit area of the wall of the cylinder Is given by, Z_wall = (1/4)nC = (1/4) [(PN) / (RT)]C = (1/4) [(PN) / (RT)] [(8RT) / (\\piM)]^(1/2) Z_wall= (1/4) [(N) / (RT)][(8RT) / (\\pi)]^(1/2) [(P) / (M)^(1/2)]. N is the Avogadro's number and M = molecular weight. Thus it follows that at constant temperature the rate of effusion varies inversely as the square root of the molecular weight, M. Therefore, the effusion of H_2 is proportional to P_(H)2 M_(H)2^-(1/2) and effusion of N_2 is proportional to P_(N)2 M_(N)2 ^-(1/2) [(Z_(H)2) / (Z_(N)2)] = [(P_(H)2 / M_(N)2 ^-(1/2)) / (P_(N)2 / M_(N)2 ^-(1/2))] [(Z_(H)2) / (Z_(N)2)] = [{P / (2)^(1/2)} / {2P / (28)^(1/2)}] = [(1) / (2)^(1/2)] [(28)^(1/2) / (2)] [(Z_(H)2) / (Z_(N)2)] = 1.87 orZ_(H)2 = 1.87 Z_(N)2 Thus the rate of effusion of H_2 into the N_2 compartment is 1.87 times faster than that of N_2 into the H_2 compartment of the cylinder.", "ref_id": 4435, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "One side of a glass cylinder is initially filled with H_2 at a pressure P and the other side with N_2 at a pressure 2P. This glass cylinder is closed at both ends and a glass filter in the middle of the cylinder divides it into two compartments of equal volume. Describe what happens, starting at t = 0, at constant temperature and assuming that the pores of the filter have a diameter much smaller than the mean free paths of the gases.", "options": ["The rate of effusion of H_2 into the N_2 compartment is slower than that of N_2 into the H_2 compartment", "The rate of effusion of H_2 is proportional to the pressure of H_2", "The rate of effusion of H_2 into the N_2 compartment is 1.87 times faster than that of N_2 into the H_2 compartment of the cylinder.", "The rate of effusion of H_2 into the N_2 compartment is equal to that of N_2 into the H_2 compartment"], "answer": "C", "solution": "The total number of molecules striking the unit area of the wall of the cylinder Is given by, Z_wall = (1/4)nC = (1/4) [(PN) / (RT)]C = (1/4) [(PN) / (RT)] [(8RT) / (\\piM)]^(1/2) Z_wall= (1/4) [(N) / (RT)][(8RT) / (\\pi)]^(1/2) [(P) / (M)^(1/2)]. N is the Avogadro's number and M = molecular weight. Thus it follows that at constant temperature the rate of effusion varies inversely as the square root of the molecular weight, M. Therefore, the effusion of H_2 is proportional to P_(H)2 M_(H)2^-(1/2) and effusion of N_2 is proportional to P_(N)2 M_(N)2 ^-(1/2) [(Z_(H)2) / (Z_(N)2)] = [(P_(H)2 / M_(N)2 ^-(1/2)) / (P_(N)2 / M_(N)2 ^-(1/2))] [(Z_(H)2) / (Z_(N)2)] = [{P / (2)^(1/2)} / {2P / (28)^(1/2)}] = [(1) / (2)^(1/2)] [(28)^(1/2) / (2)] [(Z_(H)2) / (Z_(N)2)] = 1.87 orZ_(H)2 = 1.87 Z_(N)2 Thus the rate of effusion of H_2 into the N_2 compartment is 1.87 times faster than that of N_2 into the H_2 compartment of the cylinder."}, "question": "task_1"}}, {"data": {"text": "Question:\nYou are given that the ionization energy of a hydrogen atom is 13.527eV, calculate the second ionization energy of a helium atom. The general equation for the lines in the emis-sion spectra of one electron system such as H, He^+ , Li^2+ and Be^3+ is given as \u0475= Z^2 R_H{(1/n^2_1) - (1/n^2_2)} where\u0475= the wave numbers of emission lines and Z is the nuclear charge of the atom concerned.\n\nOptions:\nA. 54.108eV\nB. 13.527eV\nC.             108.216eV\nD. 27.054eV\n\nAnswer: A\n\nReference Solution:\nThe ionization energy of a gaseous neutral atom or a gaseous ion is defined as the energy needed to com-pletely remove an electron from the atom or the ion in its ground state. The helium atom is composed of a nucleus of charge +2(Z = 2) and two electrons. The first ionization energy of helium atom is energy required for the process: He(g) \\rightarrow He^+ (g) + e^- The second ionization energy is then the energy required to remove the lone electron from He^+(g) and is given by He^+(g) \\rightarrow He^2+(g) + e^- \u0475= Z^2R_H {(1/n^2_1) - (1/n^2_2)}(1) where R_H = theRydbergconstant , Z is the nuclear charge, and n_1, n_2 are integers corresponding to the lower and upper electronic levels respectively, and are responsible for the spectral lines. The energy for the ionization potential, E is given by E =h\u0475 E = h (c/\\lambda) But\u0475= (1/\\lambda) , \\thereforeE =hc\u0475 Equation (1) for the energies associated with the electron-ic transitions in any one electron system becomes E = hcZ^2R_H [(1 / n^2_1) - (1 / n^2_2)](2) The ionization energy for hydrogen atom is also given as 13.527eV. This is the energy needed to completely remove the electron from the hydrogen atom in its ground state, and n_1 = 1 for the atom in the ground state. n_2 = \\infty for the state in which the electron is completely removed from the atom. Equation (2) , substituting n_1 = 1, n_2 = \\infty and Z = 1 for hydrogen atom, becomes E = I_H =hcR_H(3) where I_H = the ionization energy of hydrogen. Similarly, the second ionization energy of He^+ , using equation (2), with Z = 2, becomes E =I_He^+ = 4hcR_H(4) But from equation (3), hcR_H= I_H \\thereforeEquation (4) becomes I_He^+ = 4I_H = 4 (13.527eV) orI_He^+ = 54.108eV.", "ref_id": 4436, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "You are given that the ionization energy of a hydrogen atom is 13.527eV, calculate the second ionization energy of a helium atom. The general equation for the lines in the emis-sion spectra of one electron system such as H, He^+ , Li^2+ and Be^3+ is given as \u0475= Z^2 R_H{(1/n^2_1) - (1/n^2_2)} where\u0475= the wave numbers of emission lines and Z is the nuclear charge of the atom concerned.", "options": ["54.108eV", "13.527eV", "108.216eV", "27.054eV"], "answer": "A", "solution": "The ionization energy of a gaseous neutral atom or a gaseous ion is defined as the energy needed to com-pletely remove an electron from the atom or the ion in its ground state. The helium atom is composed of a nucleus of charge +2(Z = 2) and two electrons. The first ionization energy of helium atom is energy required for the process: He(g) \\rightarrow He^+ (g) + e^- The second ionization energy is then the energy required to remove the lone electron from He^+(g) and is given by He^+(g) \\rightarrow He^2+(g) + e^- \u0475= Z^2R_H {(1/n^2_1) - (1/n^2_2)}(1) where R_H = theRydbergconstant , Z is the nuclear charge, and n_1, n_2 are integers corresponding to the lower and upper electronic levels respectively, and are responsible for the spectral lines. The energy for the ionization potential, E is given by E =h\u0475 E = h (c/\\lambda) But\u0475= (1/\\lambda) , \\thereforeE =hc\u0475 Equation (1) for the energies associated with the electron-ic transitions in any one electron system becomes E = hcZ^2R_H [(1 / n^2_1) - (1 / n^2_2)](2) The ionization energy for hydrogen atom is also given as 13.527eV. This is the energy needed to completely remove the electron from the hydrogen atom in its ground state, and n_1 = 1 for the atom in the ground state. n_2 = \\infty for the state in which the electron is completely removed from the atom. Equation (2) , substituting n_1 = 1, n_2 = \\infty and Z = 1 for hydrogen atom, becomes E = I_H =hcR_H(3) where I_H = the ionization energy of hydrogen. Similarly, the second ionization energy of He^+ , using equation (2), with Z = 2, becomes E =I_He^+ = 4hcR_H(4) But from equation (3), hcR_H= I_H \\thereforeEquation (4) becomes I_He^+ = 4I_H = 4 (13.527eV) orI_He^+ = 54.108eV."}, "question": "task_1"}}, {"data": {"text": "Question:\nThe density of liquid gallium is 6.09 g/cm^3 at 35\\textdegreeC. If this element is employed in a barometer instead of mercury, what is the height of a column of gallium sustained in the barometer at 1atmpressure?\n\nOptions:\nA. 1800 mm Ga\nB. 1500 mm Ga\nC.             2000 mm Ga\nD. 1697 mm Ga\n\nAnswer: D\n\nReference Solution:\nThe gallium column can be computed by the use of the defini-tion: (h_Ga) (d_Ga) = (h_Hg) (d_Hg) where h = height of a column, d = density, thereforeh_Ga= [{(h_Hg) (d_Hg)} / (d_Ga)] 1atmpressure =h_Hg= 760 mm Hg = 76.0 cm Hg. The density of mercury =d_Hg= 13.6 gm/cm^3 . Therefore, h_Ga= [{(76.0 cm Hg) (13.6 gm/cm^3)} / (6.09 gm/cm^3)] = 169.7 cmGa= 1697 mm Ga", "ref_id": 4437, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "The density of liquid gallium is 6.09 g/cm^3 at 35\\textdegreeC. If this element is employed in a barometer instead of mercury, what is the height of a column of gallium sustained in the barometer at 1atmpressure?", "options": ["1800 mm Ga", "1500 mm Ga", "2000 mm Ga", "1697 mm Ga"], "answer": "D", "solution": "The gallium column can be computed by the use of the defini-tion: (h_Ga) (d_Ga) = (h_Hg) (d_Hg) where h = height of a column, d = density, thereforeh_Ga= [{(h_Hg) (d_Hg)} / (d_Ga)] 1atmpressure =h_Hg= 760 mm Hg = 76.0 cm Hg. The density of mercury =d_Hg= 13.6 gm/cm^3 . Therefore, h_Ga= [{(76.0 cm Hg) (13.6 gm/cm^3)} / (6.09 gm/cm^3)] = 169.7 cmGa= 1697 mm Ga"}, "question": "task_1"}}, {"data": {"text": "Question:\nWhat is the amount of work required a) to freeze 100g of water at 0\\textdegreeC when the temperature of the surroundings is 25\\textdegreeC? b) to withdraw the same amount of heat from a body at 10^-5\\textdegreeK when the surroundings is 1\\textdegreeK? Assume perfect thermodynamic efficiency.\n\nOptions:\nA. a) 33.6 kJ, b) 3.07 \u00d7 10^5 kJ\nB. a) 3.07 kJ, b) 10^5 kJ\nC.             a) 10.92 kJ, b) 33.6 \u00d7 10^5 kJ\nD. a) 3.07 kJ, b) 33.6 \u00d7 10^5 kJ\n\nAnswer: D\n\nReference Solution:\nFor a perfect refrigerator operating between the temperatures of T_c and T_h, the COP = [T_c / (T_h - T_c)] where COP = coefficient of performance. The subscripts c and h stand for \"cold and hot sinks\" respectively. The amount of work required is given by w = (q / COP)(1) whereq = amount of heat. The amount of heat needed in order to freeze water is the number of moles of water multiplied by enthalpy of fusion; given by n\\DeltaH_fusion where n = number of moles. For water \\DeltaH_fusion = 6.01 kJ mol^-1. Since 100 g of water is to be frozen, n = (weight / molecular weight) = [100g / 18g mol^-1] = 5.6 mol. Therefore, the amount of heat, q = n\\DeltaH_fusion. q = (5.6 mol)(6.01 kJ mol^-1) q = 33.6 kJ a) Here T_h = 298\\textdegreeK, T_c = 273\\textdegreeK \\thereforeCOP = [T_c / (T_h - T_c)] = [273 / (298 - 273)] = 10.92. From equation (1) , w = (q / COP) = [(33.6 kJ) / (10.92)] \\thereforew = 3.07 kJ. b) Here T_h = 1\\textdegreeK, T_c = 10^-5\\textdegreeK \\thereforeCOP = [T_c / (T_h - T_c)] = [10^-5 / (1 -10^-5)]. Since the denominator is very close to 1, the COP value is approximately 10^-5. Again from equation (1), w = (q / COP) = [(33.6 kJ) / 10^-5] = 33.6 \u00d7 10^5 kJ.", "ref_id": 4438, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "What is the amount of work required a) to freeze 100g of water at 0\\textdegreeC when the temperature of the surroundings is 25\\textdegreeC? b) to withdraw the same amount of heat from a body at 10^-5\\textdegreeK when the surroundings is 1\\textdegreeK? Assume perfect thermodynamic efficiency.", "options": ["a) 33.6 kJ, b) 3.07 \u00d7 10^5 kJ", "a) 3.07 kJ, b) 10^5 kJ", "a) 10.92 kJ, b) 33.6 \u00d7 10^5 kJ", "a) 3.07 kJ, b) 33.6 \u00d7 10^5 kJ"], "answer": "D", "solution": "For a perfect refrigerator operating between the temperatures of T_c and T_h, the COP = [T_c / (T_h - T_c)] where COP = coefficient of performance. The subscripts c and h stand for \"cold and hot sinks\" respectively. The amount of work required is given by w = (q / COP)(1) whereq = amount of heat. The amount of heat needed in order to freeze water is the number of moles of water multiplied by enthalpy of fusion; given by n\\DeltaH_fusion where n = number of moles. For water \\DeltaH_fusion = 6.01 kJ mol^-1. Since 100 g of water is to be frozen, n = (weight / molecular weight) = [100g / 18g mol^-1] = 5.6 mol. Therefore, the amount of heat, q = n\\DeltaH_fusion. q = (5.6 mol)(6.01 kJ mol^-1) q = 33.6 kJ a) Here T_h = 298\\textdegreeK, T_c = 273\\textdegreeK \\thereforeCOP = [T_c / (T_h - T_c)] = [273 / (298 - 273)] = 10.92. From equation (1) , w = (q / COP) = [(33.6 kJ) / (10.92)] \\thereforew = 3.07 kJ. b) Here T_h = 1\\textdegreeK, T_c = 10^-5\\textdegreeK \\thereforeCOP = [T_c / (T_h - T_c)] = [10^-5 / (1 -10^-5)]. Since the denominator is very close to 1, the COP value is approximately 10^-5. Again from equation (1), w = (q / COP) = [(33.6 kJ) / 10^-5] = 33.6 \u00d7 10^5 kJ."}, "question": "task_1"}}, {"data": {"text": "Question:\nGiven the reaction CO(g) + 2H_2(g) = CH_3OH and Given the reaction CO(g) + 2H_2(g) = CH_3OH and S\\textdegree_298 [CO(g)] = 47.30eumol^-1 S\\textdegree_298 [(H)2(g)] = 31.21eu mol^-1 S\\textdegree_298[(CH)3 OH(l)] = 30.30eumol^-1 S\\textdegree_298[(CH)3 OH(g)] = 56.80eumol^-1 Compare the S\\textdegree298(fornation)of CH_3OH(g) and CH_3OH(l).\n\nOptions:\nA. - 52.92eu, - 79.42eu\nB. - 45.30eu, - 70.25eu\nC.             - 60.00eu, - 75.00eu\nD. - 40.50eu, - 80.50eu\n\nAnswer: A\n\nReference Solution:\n\\DeltaS\\textdegree_T for a chemical reaction is given by \\DeltaS\\textdegree_T(reaction) = (\\sum_in_iS\\textdegree_T,i)_products - (\\sum_jn_jS\\textdegree_T,j)_reactants wheren_iandn_jare thestoichiometriccoefficients of the balanced reaction equation. Thus for the given reaction, \\DeltaS\\textdegree_298 = [(1)S\\textdegree_298, _(CH)3OH] - [(2)S\\textdegree298, (H)2(g)+ (1)S\\textdegree_298, _CO(g)] a) \\therefore \\DeltaS\\textdegree_298 _(formation) for CH_3OH(g) is \\DeltaS\\textdegree_298 = [(1)(56.80) - (2)(31.21) + (1)(47.30)] = - 52.92eu \\therefore \\DeltaS\\textdegree298 (formation)= - 52.92eu b) \\DeltaS\\textdegree_298 _(formation) for H_2O(1) is \\DeltaS\\textdegree_298 = [(1)(30.30)] - [(2)(31.21) + (1)(47.30)] = - 79.42eu \\DeltaS\\textdegree_298 _(formation) = - 79.42eu Entropy is a measure of the amount of randomness in a material. For a), there are 3 moles of gaseous reactants to form 1 mole of gaseous products indicating a decrease in the randomness. For b), 3molesof gaseous reactants form 1 mole of liquid product indicating a large decrease in randomness as compared to a.", "ref_id": 4439, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Given the reaction CO(g) + 2H_2(g) = CH_3OH and Given the reaction CO(g) + 2H_2(g) = CH_3OH and S\\textdegree_298 [CO(g)] = 47.30eumol^-1 S\\textdegree_298 [(H)2(g)] = 31.21eu mol^-1 S\\textdegree_298[(CH)3 OH(l)] = 30.30eumol^-1 S\\textdegree_298[(CH)3 OH(g)] = 56.80eumol^-1 Compare the S\\textdegree298(fornation)of CH_3OH(g) and CH_3OH(l).", "options": ["- 52.92eu, - 79.42eu", "- 45.30eu, - 70.25eu", "- 60.00eu, - 75.00eu", "- 40.50eu, - 80.50eu"], "answer": "A", "solution": "\\DeltaS\\textdegree_T for a chemical reaction is given by \\DeltaS\\textdegree_T(reaction) = (\\sum_in_iS\\textdegree_T,i)_products - (\\sum_jn_jS\\textdegree_T,j)_reactants wheren_iandn_jare thestoichiometriccoefficients of the balanced reaction equation. Thus for the given reaction, \\DeltaS\\textdegree_298 = [(1)S\\textdegree_298, _(CH)3OH] - [(2)S\\textdegree298, (H)2(g)+ (1)S\\textdegree_298, _CO(g)] a) \\therefore \\DeltaS\\textdegree_298 _(formation) for CH_3OH(g) is \\DeltaS\\textdegree_298 = [(1)(56.80) - (2)(31.21) + (1)(47.30)] = - 52.92eu \\therefore \\DeltaS\\textdegree298 (formation)= - 52.92eu b) \\DeltaS\\textdegree_298 _(formation) for H_2O(1) is \\DeltaS\\textdegree_298 = [(1)(30.30)] - [(2)(31.21) + (1)(47.30)] = - 79.42eu \\DeltaS\\textdegree_298 _(formation) = - 79.42eu Entropy is a measure of the amount of randomness in a material. For a), there are 3 moles of gaseous reactants to form 1 mole of gaseous products indicating a decrease in the randomness. For b), 3molesof gaseous reactants form 1 mole of liquid product indicating a large decrease in randomness as compared to a."}, "question": "task_1"}}, {"data": {"text": "Question:\nNH_3 dissolves in water at 20\\textdegreeC to give a solution contain-ing 0.040 mole fraction NH_3. The total vapor pressure of the solution is 50.00 mm Hg and the vapor pressure for water is 17.00 mm Hg at 20\\textdegreeC. Calculate a) the partial pressures of NH_3 and water using Henry's andRaoult'slaws b) the total vapor pressure for a solution containing 0.05 mole fraction NH_3.\n\nOptions:\nA. 50.3 mm Hg\nB. 58.3 mm Hg\nC.             60.3 mm Hg\nD. 56.3 mm Hg\n\nAnswer: B\n\nReference Solution:\nRaoult'slaw states that the partial pressure of a component in solution is equal to the vapor pressure of the pure component times the molefracionof that component, P_i =P^O_iX_i, where subscriptirepresents theithcomponent. For water P_(H)2O= P^O_(H)2O X_(H)2O = (17.00 mm Hg)(1 - 0.04) P_(H)2O= 16.3 mm Hg Since this is a binary solution and the total vapor pres-sure of the solution is 50 mm Hg, P_N(H)3 = (50 - 16.3)mm Hg P_N(H)3 = 33.7 mm Hg Using Henry's law, the partial pressure of a component in solution is directly proportional to the mole fraction of that component. P_i =K_iX_i where K is Henry's constant. K_i= (P_i / X_i) \\thereforeK_N(H)3 = (P_N(H)3 / X_N(H)3) = [(33.7) / .04] K_N(H)3 = 842.5 Now considering the 5 mole % solution: UsingRaoult'slaw again, P_(H)2O= P^O_(H)2O X_(H)2O = (17 mm Hg)(1 - 0.05) P_(H)2O= 16.2 mm Hg To calculate P_N(H)3 using this 5 mole % solution, Henry's law is used since the constant K_N(H)3 = 842.5 is known. \\thereforeP_N(H)3= K_N(H)3 X_N(H)3 = (842.5) (.05) P_N(H)3= 42.1 mm Hg The total vapor pressure for this 5 mole % solution is P_(H)2O + P_N(H)3 = (16.2 + 42.1)mm Hg = 58.3 mm Hg", "ref_id": 4440, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "NH_3 dissolves in water at 20\\textdegreeC to give a solution contain-ing 0.040 mole fraction NH_3. The total vapor pressure of the solution is 50.00 mm Hg and the vapor pressure for water is 17.00 mm Hg at 20\\textdegreeC. Calculate a) the partial pressures of NH_3 and water using Henry's andRaoult'slaws b) the total vapor pressure for a solution containing 0.05 mole fraction NH_3.", "options": ["50.3 mm Hg", "58.3 mm Hg", "60.3 mm Hg", "56.3 mm Hg"], "answer": "B", "solution": "Raoult'slaw states that the partial pressure of a component in solution is equal to the vapor pressure of the pure component times the molefracionof that component, P_i =P^O_iX_i, where subscriptirepresents theithcomponent. For water P_(H)2O= P^O_(H)2O X_(H)2O = (17.00 mm Hg)(1 - 0.04) P_(H)2O= 16.3 mm Hg Since this is a binary solution and the total vapor pres-sure of the solution is 50 mm Hg, P_N(H)3 = (50 - 16.3)mm Hg P_N(H)3 = 33.7 mm Hg Using Henry's law, the partial pressure of a component in solution is directly proportional to the mole fraction of that component. P_i =K_iX_i where K is Henry's constant. K_i= (P_i / X_i) \\thereforeK_N(H)3 = (P_N(H)3 / X_N(H)3) = [(33.7) / .04] K_N(H)3 = 842.5 Now considering the 5 mole % solution: UsingRaoult'slaw again, P_(H)2O= P^O_(H)2O X_(H)2O = (17 mm Hg)(1 - 0.05) P_(H)2O= 16.2 mm Hg To calculate P_N(H)3 using this 5 mole % solution, Henry's law is used since the constant K_N(H)3 = 842.5 is known. \\thereforeP_N(H)3= K_N(H)3 X_N(H)3 = (842.5) (.05) P_N(H)3= 42.1 mm Hg The total vapor pressure for this 5 mole % solution is P_(H)2O + P_N(H)3 = (16.2 + 42.1)mm Hg = 58.3 mm Hg"}, "question": "task_1"}}, {"data": {"text": "Question:\nGlacial acetic acid has a melting point of 16\\textdegreeC at a pressure of 1 atm. a) Calculate the melting point at its vapor pressure of 0atm, given that the acid has a heat of fusion of 2700 cal/mole and a molecular weight of 60. Solid and liquid acetic acid have densities of 1.10 g/cc and 1.05 g/cc respectively, b) Calculate the heat of sublimation of solid acetic acid given that the acid has a normal boiling point of 118\\textdegreeC.\n\nOptions:\nA. 15.0C, 10500 cal/mole\nB. 15.993C, 10900 cal/mole\nC.             15.5C, 11500 cal/mole\nD. 16.5C, 9500 cal/mole\n\nAnswer: B\n\nReference Solution:\nIn this problem, the heat of fusion as well as the changes in pressure are given. So we can utilize theClapeyronequation knowing how it relates chancres in pressure and temperature to the \u2206H_fusion. a) TheClapeyronequation is (dP/dT) = [\u2206H_fusion/ {T(V_L - V_S)}](1) where V_L and V_S are the volumes of liquid and solid respectively, Equation (1) can also be written as (\u2206P / \u2206T) = [\u2206H_fusion/ {T(\u2206V)}](2) where \u2206V = V_L - V_S From Equation (2) , \u2206T = [(\u2206P T\u2206V) / (\u2206H_fusion)](3) \u2206P = (0atm- 1atm) = - 1atm T = 273 K + 16 = 289\\textdegreeK \u2206V = V_L - V_S Volume = [(mass) / (density)] \\thereforeV_L =[(60 g mole^-1) / (1.05 g cc^-1)] = 57.1 (cc / mole) andV_S = [(60 g mole^-1) / (1.10 g cc^-1)] = 54.5 (cc / mole) \\therefore\u2206V = (57.1 - 54.5) (cc / mole) = 2.6 (cc / mole). From Equation (3) therefore, \u2206T = [{(- 1atm) (289\\textdegreeK) 2.6(cc / mole)} / {(2700(cc / mole)) {(0.04129 l -atm) / cal} ((1000 cc) / 1 l)}] \u2206T = - 0.007\\textdegreeK Thus the melting point at 0\\textdegreeC is T = 289\\textdegreeK - 0.007\\textdegreeK T = 288.993\\textdegreeK = (288.993 - 273)\\textdegreeC T = 15.993\\textdegreeC b) We can calculate the heat of sublimation, \u2206H_S, using the fact that \u2206H_S =H_f+H_v where \u2206H_fand \u2206H_vare respectively the heat of fusion and vapori-zation. The heat of fusion is given to be 2700 cal/mole, and to find the heat of vaporization,Trouton'srule can be used. This rule states that the molar entropy of vaporization for most liquids at their boiling points is approximately a constant at 21 (cal / mole K) \\therefore\u2206S_vap= [\u2206H_vap/ T_b] \\approx 21 (cal / mole \\textdegreeK) where T_b is the boiling point temperature and \u2206S_vapis the molar entropy of vaporization \\therefore\u2206H_vap= [21 (cal / mole K)](T_b) = 21 (cal / mole K) (391 \\textdegreeK) \u2206H_vap= 8200 (cal / mole) \u2206H_S = \u2206H_f+ \u2206H_v = (2700 + 8200) (cal / mole) \\therefore\u2206H_S = 10900 cal/mole", "ref_id": 4441, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Glacial acetic acid has a melting point of 16\\textdegreeC at a pressure of 1 atm. a) Calculate the melting point at its vapor pressure of 0atm, given that the acid has a heat of fusion of 2700 cal/mole and a molecular weight of 60. Solid and liquid acetic acid have densities of 1.10 g/cc and 1.05 g/cc respectively, b) Calculate the heat of sublimation of solid acetic acid given that the acid has a normal boiling point of 118\\textdegreeC.", "options": ["15.0C, 10500 cal/mole", "15.993C, 10900 cal/mole", "15.5C, 11500 cal/mole", "16.5C, 9500 cal/mole"], "answer": "B", "solution": "In this problem, the heat of fusion as well as the changes in pressure are given. So we can utilize theClapeyronequation knowing how it relates chancres in pressure and temperature to the \u2206H_fusion. a) TheClapeyronequation is (dP/dT) = [\u2206H_fusion/ {T(V_L - V_S)}](1) where V_L and V_S are the volumes of liquid and solid respectively, Equation (1) can also be written as (\u2206P / \u2206T) = [\u2206H_fusion/ {T(\u2206V)}](2) where \u2206V = V_L - V_S From Equation (2) , \u2206T = [(\u2206P T\u2206V) / (\u2206H_fusion)](3) \u2206P = (0atm- 1atm) = - 1atm T = 273 K + 16 = 289\\textdegreeK \u2206V = V_L - V_S Volume = [(mass) / (density)] \\thereforeV_L =[(60 g mole^-1) / (1.05 g cc^-1)] = 57.1 (cc / mole) andV_S = [(60 g mole^-1) / (1.10 g cc^-1)] = 54.5 (cc / mole) \\therefore\u2206V = (57.1 - 54.5) (cc / mole) = 2.6 (cc / mole). From Equation (3) therefore, \u2206T = [{(- 1atm) (289\\textdegreeK) 2.6(cc / mole)} / {(2700(cc / mole)) {(0.04129 l -atm) / cal} ((1000 cc) / 1 l)}] \u2206T = - 0.007\\textdegreeK Thus the melting point at 0\\textdegreeC is T = 289\\textdegreeK - 0.007\\textdegreeK T = 288.993\\textdegreeK = (288.993 - 273)\\textdegreeC T = 15.993\\textdegreeC b) We can calculate the heat of sublimation, \u2206H_S, using the fact that \u2206H_S =H_f+H_v where \u2206H_fand \u2206H_vare respectively the heat of fusion and vapori-zation. The heat of fusion is given to be 2700 cal/mole, and to find the heat of vaporization,Trouton'srule can be used. This rule states that the molar entropy of vaporization for most liquids at their boiling points is approximately a constant at 21 (cal / mole K) \\therefore\u2206S_vap= [\u2206H_vap/ T_b] \\approx 21 (cal / mole \\textdegreeK) where T_b is the boiling point temperature and \u2206S_vapis the molar entropy of vaporization \\therefore\u2206H_vap= [21 (cal / mole K)](T_b) = 21 (cal / mole K) (391 \\textdegreeK) \u2206H_vap= 8200 (cal / mole) \u2206H_S = \u2206H_f+ \u2206H_v = (2700 + 8200) (cal / mole) \\therefore\u2206H_S = 10900 cal/mole"}, "question": "task_1"}}, {"data": {"text": "Question:\nThe experimental value of the entropy of xenon as determined from calorimetric data is S^o_298 = 170.29 \\pm 1.2JK^-1 mol^-1 a) Calculate the entropy of xenon at 298\\textdegreeK and compare with the experimental value, b) Determine the values of the thermodynamic function C^0_p, (H^o / T) and (G^o / T), respectively.\n\nOptions:\nA. 180.50J K^-1 mol^-1\nB. 160.50J K^-1 mol^-1\nC.             169.58J K^-1 mol^-1\nD. 170.29J K^-1 mol^-1\n\nAnswer: C\n\nReference Solution:\nXenon is amonoatomicgas, and thusq_rot=q_vib= 1. At low temperaturesq_elect. is also equal to 1. Therefore, ifq_nuclcan be neglected, the thermodynamic properties of xenon results from translational motion only. Thus for 1 mole of gas, Q_trans. = (1 / N!)q^N_trans= (1 / N!) [{V (2\\pimkT)^3/2} / h^3]^N andlnQ_trans. = -NlnN + Nlne + Nlnq_trans = Nln[(Ve/ Nh^3)(2\\pimkT)^3/2](1) For an ideal gas, V = (RT / P) Substitute for V in equation (1) and differentiate with respect to T to get [(\\partiallnQ_trans.) / \\partialT]_P = (5/2) (1/T) Therefore,H^o = RT^2[(\\partiallnQ_trans.) / \\partialT]_P = RT^2 (5/2) (1/T) = (5/2)RT = (5/2)(8.314J K^-1 mol^-1) (298\\textdegreeK) = 6193.9J mol^-1 . The enthalpy function is thus given by (H^o / T) = (5/2)R = (5/2)(8.314J K^-1 mol^-1) = 20.78J K^-1 mol^-1 . The molar heat capacity function at constant pressure is given by C^o_P= [(\\partial / \\partialT)(H^o)]_P = (\\partial / \\partialT)[(5/2)RT] = (5/2)R = 20.78J K^-1 mol^-1. The entropy of xenon at P = 1 and T = 298\\textdegreeK is thus given by S^o_trans. = Rln[(Ve^5/2 / h^3N)(2\\pimkT)^3/2] = 169.58J K^-1 mol^-1. This value ofS^o_trans. agrees reasonably with the experimental value. The Gibbs free energy function is given by - (G/T)_trans = - (H^o / T)_trans +S^o_trans = - (5/2)R + 169.58 = 148.80J K^-1 mol^-1", "ref_id": 4442, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "The experimental value of the entropy of xenon as determined from calorimetric data is S^o_298 = 170.29 \\pm 1.2JK^-1 mol^-1 a) Calculate the entropy of xenon at 298\\textdegreeK and compare with the experimental value, b) Determine the values of the thermodynamic function C^0_p, (H^o / T) and (G^o / T), respectively.", "options": ["180.50J K^-1 mol^-1", "160.50J K^-1 mol^-1", "169.58J K^-1 mol^-1", "170.29J K^-1 mol^-1"], "answer": "C", "solution": "Xenon is amonoatomicgas, and thusq_rot=q_vib= 1. At low temperaturesq_elect. is also equal to 1. Therefore, ifq_nuclcan be neglected, the thermodynamic properties of xenon results from translational motion only. Thus for 1 mole of gas, Q_trans. = (1 / N!)q^N_trans= (1 / N!) [{V (2\\pimkT)^3/2} / h^3]^N andlnQ_trans. = -NlnN + Nlne + Nlnq_trans = Nln[(Ve/ Nh^3)(2\\pimkT)^3/2](1) For an ideal gas, V = (RT / P) Substitute for V in equation (1) and differentiate with respect to T to get [(\\partiallnQ_trans.) / \\partialT]_P = (5/2) (1/T) Therefore,H^o = RT^2[(\\partiallnQ_trans.) / \\partialT]_P = RT^2 (5/2) (1/T) = (5/2)RT = (5/2)(8.314J K^-1 mol^-1) (298\\textdegreeK) = 6193.9J mol^-1 . The enthalpy function is thus given by (H^o / T) = (5/2)R = (5/2)(8.314J K^-1 mol^-1) = 20.78J K^-1 mol^-1 . The molar heat capacity function at constant pressure is given by C^o_P= [(\\partial / \\partialT)(H^o)]_P = (\\partial / \\partialT)[(5/2)RT] = (5/2)R = 20.78J K^-1 mol^-1. The entropy of xenon at P = 1 and T = 298\\textdegreeK is thus given by S^o_trans. = Rln[(Ve^5/2 / h^3N)(2\\pimkT)^3/2] = 169.58J K^-1 mol^-1. This value ofS^o_trans. agrees reasonably with the experimental value. The Gibbs free energy function is given by - (G/T)_trans = - (H^o / T)_trans +S^o_trans = - (5/2)R + 169.58 = 148.80J K^-1 mol^-1"}, "question": "task_1"}}, {"data": {"text": "Question:\nFromM_n= [(\\sumN_i M_i) / (\\sumN_i)], show thatM_n= (1/\\sum)(w_i/ M_i) and fromM_w = [(\\sumW_iM_i) / (\\sumW_i)] thatM_w = \\sumw_iM_i.\n\nOptions:\nA. M_w = \\sumw_i/M_i\nB. M_n= [1 / {\\sum(w_i* M_i)}]\nC.             M_n= [\\sum(W_i/ M_i)]\nD. M_n= [1 / {\\sum(w_i/ M_i)}], M_w = \\sumw_iM_i\n\nAnswer: D\n\nReference Solution:\na) One of the definitions ofM_nis M_n= [(\\sumN_i M_i) / (\\sumN_i)](1) whereM_n= number average molecular weight M_i = molecular weight of theithspecies N_i = moles of molecules with molecular weight M_i By definition, N_i = (W_i/ M_i). Therefore, equation (1) changes to M_n= [{\\sum(W_i/ M_i)M_i} / {\\sum(W_i/ M_i)}] = [\\sumW_i/ {\\sum(W_i/ M_i)}](2) ButW_i=w_iW_t =w_i\\sumW_iwherew_i= weight fraction of molecules of theithspecies. W_t = total weight . Inserting these into equation (2) changes it to M_n= [\\sumW_i/ {\\sum((w_i\\sumW_i) / M_i)}] Observe that the \\sumW_iis a constant. Therefore, M_n= [1 / {\\sum(w_i/ M_i)}]. The weight average molecular weight is given by M_w = [(\\sumW_iM_i) / (\\sumW_i)](3) M_w = [(\\sumW_iM_i) / (\\sumW_i)](3) ButW_i=w_iW_t =w_i\\sumW_i. Therefore equation (3) becomes M_w = [{\\sum(w_i\\sumW_i)M_i} / (\\sumW_i)](4) Observe that the \\sumW_i= constant. Therefore, equation (4) becomes M_w = \\sumw_iM_i.", "ref_id": 4443, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "FromM_n= [(\\sumN_i M_i) / (\\sumN_i)], show thatM_n= (1/\\sum)(w_i/ M_i) and fromM_w = [(\\sumW_iM_i) / (\\sumW_i)] thatM_w = \\sumw_iM_i.", "options": ["M_w = \\sumw_i/M_i", "M_n= [1 / {\\sum(w_i* M_i)}]", "M_n= [\\sum(W_i/ M_i)]", "M_n= [1 / {\\sum(w_i/ M_i)}], M_w = \\sumw_iM_i"], "answer": "D", "solution": "a) One of the definitions ofM_nis M_n= [(\\sumN_i M_i) / (\\sumN_i)](1) whereM_n= number average molecular weight M_i = molecular weight of theithspecies N_i = moles of molecules with molecular weight M_i By definition, N_i = (W_i/ M_i). Therefore, equation (1) changes to M_n= [{\\sum(W_i/ M_i)M_i} / {\\sum(W_i/ M_i)}] = [\\sumW_i/ {\\sum(W_i/ M_i)}](2) ButW_i=w_iW_t =w_i\\sumW_iwherew_i= weight fraction of molecules of theithspecies. W_t = total weight . Inserting these into equation (2) changes it to M_n= [\\sumW_i/ {\\sum((w_i\\sumW_i) / M_i)}] Observe that the \\sumW_iis a constant. Therefore, M_n= [1 / {\\sum(w_i/ M_i)}]. The weight average molecular weight is given by M_w = [(\\sumW_iM_i) / (\\sumW_i)](3) M_w = [(\\sumW_iM_i) / (\\sumW_i)](3) ButW_i=w_iW_t =w_i\\sumW_i. Therefore equation (3) becomes M_w = [{\\sum(w_i\\sumW_i)M_i} / (\\sumW_i)](4) Observe that the \\sumW_i= constant. Therefore, equation (4) becomes M_w = \\sumw_iM_i."}, "question": "task_1"}}, {"data": {"text": "Question:\nConsider an ideal monatomic gas at temperature T and volume V, show that the entropy of one mole of this gas is given by S = Rln[Q_i{[(2\\pimkT)^3/2] / (N h^3)} V] + (5/2)R whereQ_irepresents the internal partition function. State all assumptions. This expression is known as the Sackur-TetrodeEquation.\n\nOptions:\nA. S = Rln[Q_i{[(2\\pimkT)^3/2] / (Nh^3)}V] + (5/2)R\nB. S = Rln[Q_i{[(2\\pimkT)^3/2] / (Nh^3)}V] + (3/2)R\nC.             S = Rln[Q_i{[(2\\pimkT)^3/2] / (Nh^3)}V] - (5/2)R\nD. S = Rln[Q_i{[(2\\pimkT)^3/2] / (Nh^3)}V]\n\nAnswer: A\n\nReference Solution:\nThe expression for the internal energy U meas-ured from a ground state energy U_0, in terms of the par-tition function. Q is given on a molar basis by U = RT^2 [(\\partiallnQ) / \\partialT]_V,N(1) where N is the number of moles. Also, in terms of the partition function the Helmholtz free energy A, is given by A = -kTlnQ. ButA = U - TS orTS = U - A Thus,S = [(U - A) / T] = [{kT^2 [(\\partiallnQ) / \\partialT]_V,N +kTlnQ} / T] =kT[(\\partiallnQ) / \\partialT]_V,N + klnQ(2) When molecules are in a crystal, they are said to be localized because they can be identified as a, b, . . . , but if the molecules are in a gas they are not localized and are said to be indistinguishable and non localized. For localized molecules a, b, . . . , their molecular partition functions are identical if the molecules are identical, and for N independent molecules the canonical ensemble partition function is given by Q =q_N where q is the molecular partition function. For non-localized molecules the partition function is given by Q = (1/N!)q^N(3) But the molecular, partition function is given by q =q_trans_.Q_i whereQ_i= the internal partition function. Also, q_trans_. = (V / \\Lambda^3) where\\Lambda^3 = [h^2 / (2\\pimkT)]^3/2(4) Therefore, from equation (2) Q = (1 / N!) (V^N / \\Lambda^3N)Q^N_i(T) . Takinglnof both sides gives lnQ = - NlnN + N + NlnV - 3Nln\\Lambda + NlnQ_i(T) From the above equation [(\\partiallnQ) / \\partialT]_V,N = -3N [\\partial\\Lambda / (\\partialT/\\Lambda)] + [{N (\\partial/\\partialT)(Q_i)} / {Q_i(T)}](5) From equation (3), \\Lambda = [h / \\surd(2\\pimk)]T^-1/2 and(\\partial\\Lambda / \\partialT) = - (1/2) [h / \\surd(2\\pimk)]T^-3/2 = - (1/2) [h / \\surd(2\\pimk)]T^-1 = - (1/2)\\LambdaT^-1 . From equation (4) [(\\partiallnQ) / \\partialT]_V,N = (3/2)NT^-1 + [{N(\\partial / \\partialT)(Q_i)_V,N} / {Q_i(T)}] Therefore, equation (2) can now be written as Therefore, equation (2) can now be written as S =kT[(3/2) (N/T) + N {[(\\partial / \\partialT)(Q_i)] /Q_i}] + k [-NlnN + N + NlnV - 3NlnV + NlnQ_i] = (3/2)R + [{RT(\\partial / \\partialT)(Q_i)} /Q_i] - RlnN + R + RlnV - 3Rln\\Lambda^3 + RlnQ_i = (5/2)R + Rln[VQ_i/ N\\Lambda^3] + [{RT(\\partial / \\partialT)(Q_i)} /Q_i] = Rln[Q_i{[(2\\pimkT)^3/2] / (Nh^3)}V] + (5/2)R + [{RT(\\partial / \\partialT)Q_i} /Q_i] The last term [{RT(\\partial / \\partialT)(Q_i)} /Q_i] is assumed to be negligible \\therefore S = Rln[Q_i{[(2\\pimkT)^3/2] / (Nh^3)}V] + (5/2)R The following assumptions were made in deriving the expres-sion for S. a) (\\partial / \\partialT)Q_iis small . b)The translational partition function is classical. The translational partition function is classical.", "ref_id": 4444, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Consider an ideal monatomic gas at temperature T and volume V, show that the entropy of one mole of this gas is given by S = Rln[Q_i{[(2\\pimkT)^3/2] / (N h^3)} V] + (5/2)R whereQ_irepresents the internal partition function. State all assumptions. This expression is known as the Sackur-TetrodeEquation.", "options": ["S = Rln[Q_i{[(2\\pimkT)^3/2] / (Nh^3)}V] + (5/2)R", "S = Rln[Q_i{[(2\\pimkT)^3/2] / (Nh^3)}V] + (3/2)R", "S = Rln[Q_i{[(2\\pimkT)^3/2] / (Nh^3)}V] - (5/2)R", "S = Rln[Q_i{[(2\\pimkT)^3/2] / (Nh^3)}V]"], "answer": "A", "solution": "The expression for the internal energy U meas-ured from a ground state energy U_0, in terms of the par-tition function. Q is given on a molar basis by U = RT^2 [(\\partiallnQ) / \\partialT]_V,N(1) where N is the number of moles. Also, in terms of the partition function the Helmholtz free energy A, is given by A = -kTlnQ. ButA = U - TS orTS = U - A Thus,S = [(U - A) / T] = [{kT^2 [(\\partiallnQ) / \\partialT]_V,N +kTlnQ} / T] =kT[(\\partiallnQ) / \\partialT]_V,N + klnQ(2) When molecules are in a crystal, they are said to be localized because they can be identified as a, b, . . . , but if the molecules are in a gas they are not localized and are said to be indistinguishable and non localized. For localized molecules a, b, . . . , their molecular partition functions are identical if the molecules are identical, and for N independent molecules the canonical ensemble partition function is given by Q =q_N where q is the molecular partition function. For non-localized molecules the partition function is given by Q = (1/N!)q^N(3) But the molecular, partition function is given by q =q_trans_.Q_i whereQ_i= the internal partition function. Also, q_trans_. = (V / \\Lambda^3) where\\Lambda^3 = [h^2 / (2\\pimkT)]^3/2(4) Therefore, from equation (2) Q = (1 / N!) (V^N / \\Lambda^3N)Q^N_i(T) . Takinglnof both sides gives lnQ = - NlnN + N + NlnV - 3Nln\\Lambda + NlnQ_i(T) From the above equation [(\\partiallnQ) / \\partialT]_V,N = -3N [\\partial\\Lambda / (\\partialT/\\Lambda)] + [{N (\\partial/\\partialT)(Q_i)} / {Q_i(T)}](5) From equation (3), \\Lambda = [h / \\surd(2\\pimk)]T^-1/2 and(\\partial\\Lambda / \\partialT) = - (1/2) [h / \\surd(2\\pimk)]T^-3/2 = - (1/2) [h / \\surd(2\\pimk)]T^-1 = - (1/2)\\LambdaT^-1 . From equation (4) [(\\partiallnQ) / \\partialT]_V,N = (3/2)NT^-1 + [{N(\\partial / \\partialT)(Q_i)_V,N} / {Q_i(T)}] Therefore, equation (2) can now be written as Therefore, equation (2) can now be written as S =kT[(3/2) (N/T) + N {[(\\partial / \\partialT)(Q_i)] /Q_i}] + k [-NlnN + N + NlnV - 3NlnV + NlnQ_i] = (3/2)R + [{RT(\\partial / \\partialT)(Q_i)} /Q_i] - RlnN + R + RlnV - 3Rln\\Lambda^3 + RlnQ_i = (5/2)R + Rln[VQ_i/ N\\Lambda^3] + [{RT(\\partial / \\partialT)(Q_i)} /Q_i] = Rln[Q_i{[(2\\pimkT)^3/2] / (Nh^3)}V] + (5/2)R + [{RT(\\partial / \\partialT)Q_i} /Q_i] The last term [{RT(\\partial / \\partialT)(Q_i)} /Q_i] is assumed to be negligible \\therefore S = Rln[Q_i{[(2\\pimkT)^3/2] / (Nh^3)}V] + (5/2)R The following assumptions were made in deriving the expres-sion for S. a) (\\partial / \\partialT)Q_iis small . b)The translational partition function is classical. The translational partition function is classical."}, "question": "task_1"}}, {"data": {"text": "Question:\nConsider the following reaction 3H_2(g) + N_2(g) = 2NH_3(g) in which a mixture of hydrogen and nitrogen in a 3:1 mole ratio is passed over a catalyst at 400\\textdegreeC. Calculate the total pressure if the mole fraction of ammonia in the equilibrium mixture is to be 10%, andK_p= 0.00164 atm^-2.\n\nOptions:\nA. 10.4 atm\nB. 9.4 atm\nC.             8.4 atm\nD. 11.4 atm\n\nAnswer: B\n\nReference Solution:\nDefine y = number of moles of ammonia present in a sample of equilibrium mixture, consisting of three moles of hydrogen and one mole of nitrogen 3H_2+N_2=2NH_3 number of mole present initially 3 1 0 number of mole present at equilibrium 3 - (3/2)y 1 - (1/2)y y Therefore, n_total= 3 - (3/2)y + 1 - (1/2)y + y orn_total= 4 - y(1) Since the mole fraction of ammonia in the mixture is to be 0.1, then, [{n_(NH)3} / {n_total}] = 0.1 or [y / (4 - y)] = 0.1. Solving for y gives y = (4 / 11) = n_(NH)3. From equation (1), n_total= 4 - (4 / 11) n_total= (40 / 11) n_(H)2 = 3 - (3/2)y = 3 - (3/2) (4/11) n_(H)2 = (27/11) andn_(N)2 = 1 - (1/2)y = 1 - (1/2) (4/11) n_(N)2 = (9/11). Writing theK_pterm for the reaction yields K_p= [{P_(NH)3^2} / {P_(H)2^3 P_(N)2}] K_p= [{n_(NH)3^2} / {n_(H)2^3 n_(N)2}] [(n_total) / (P_total)]^2 ButK_p= 0.00164 atm^-2 K_p= 0.00164 atm^-2 = [{n_(NH)3^2} / {n_(H)2^3 n_(N)2}] [(n_total^2) / (P_total^2)] or 0.00164 = [{4/11}^2 / {(27/11)^3 (9/11)}] [(40/11)^2 / (P^2)] 0.00164 = [{0.132} / {(14.788) (0.818)}] [(13.223) / (P^2)] 0.00164 = [(0.144) / (P^2)] Solve for P^2 and hence, P to obtain P^2 = [(0.144) / (0.00164)] P^2 = 87.80 P^2 = 9.4 atm.", "ref_id": 4445, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Consider the following reaction 3H_2(g) + N_2(g) = 2NH_3(g) in which a mixture of hydrogen and nitrogen in a 3:1 mole ratio is passed over a catalyst at 400\\textdegreeC. Calculate the total pressure if the mole fraction of ammonia in the equilibrium mixture is to be 10%, andK_p= 0.00164 atm^-2.", "options": ["10.4 atm", "9.4 atm", "8.4 atm", "11.4 atm"], "answer": "B", "solution": "Define y = number of moles of ammonia present in a sample of equilibrium mixture, consisting of three moles of hydrogen and one mole of nitrogen 3H_2+N_2=2NH_3 number of mole present initially 3 1 0 number of mole present at equilibrium 3 - (3/2)y 1 - (1/2)y y Therefore, n_total= 3 - (3/2)y + 1 - (1/2)y + y orn_total= 4 - y(1) Since the mole fraction of ammonia in the mixture is to be 0.1, then, [{n_(NH)3} / {n_total}] = 0.1 or [y / (4 - y)] = 0.1. Solving for y gives y = (4 / 11) = n_(NH)3. From equation (1), n_total= 4 - (4 / 11) n_total= (40 / 11) n_(H)2 = 3 - (3/2)y = 3 - (3/2) (4/11) n_(H)2 = (27/11) andn_(N)2 = 1 - (1/2)y = 1 - (1/2) (4/11) n_(N)2 = (9/11). Writing theK_pterm for the reaction yields K_p= [{P_(NH)3^2} / {P_(H)2^3 P_(N)2}] K_p= [{n_(NH)3^2} / {n_(H)2^3 n_(N)2}] [(n_total) / (P_total)]^2 ButK_p= 0.00164 atm^-2 K_p= 0.00164 atm^-2 = [{n_(NH)3^2} / {n_(H)2^3 n_(N)2}] [(n_total^2) / (P_total^2)] or 0.00164 = [{4/11}^2 / {(27/11)^3 (9/11)}] [(40/11)^2 / (P^2)] 0.00164 = [{0.132} / {(14.788) (0.818)}] [(13.223) / (P^2)] 0.00164 = [(0.144) / (P^2)] Solve for P^2 and hence, P to obtain P^2 = [(0.144) / (0.00164)] P^2 = 87.80 P^2 = 9.4 atm."}, "question": "task_1"}}, {"data": {"text": "Question:\nWhat is the theoretical density for calcium, since it crystallizes in the face-centered cubic unit cell, where a = 3.48\\textdegreeA, z = content = 3.\n\nOptions:\nA. 4.238 \u00d7 10^3 kg/m^3\nB. 3.738 \u00d7 10^3 kg/m^3\nC.             5.738 \u00d7 10^3 kg/m^3\nD. 4.738 \u00d7 10^3 kg/m^3\n\nAnswer: D\n\nReference Solution:\nDensity,d = (ZM / AV). Z = content = 4 M = Molecular weight A = Avogadro's number V = Volume = a^3 in this case. But V = (3.48\\textdegreeA)^3 = (3.48 x 10^-10m)^3 d = [{(3) (40.08 g/mole)(10^-3kg/g)} / {(6.022 \u00d7 10^23 mole^-1) (3.48 \u00d7 10^-10m)^3}] = 4.738 \u00d7 10^3 kg/m^3 Note that a face-centered unit cell has points at the faces of the cubic cell. So the total contribution from all faces = (1/2) \u00d7 6 = 3. This is why z = content = 3.", "ref_id": 4446, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "What is the theoretical density for calcium, since it crystallizes in the face-centered cubic unit cell, where a = 3.48\\textdegreeA, z = content = 3.", "options": ["4.238 \u00d7 10^3 kg/m^3", "3.738 \u00d7 10^3 kg/m^3", "5.738 \u00d7 10^3 kg/m^3", "4.738 \u00d7 10^3 kg/m^3"], "answer": "D", "solution": "Density,d = (ZM / AV). Z = content = 4 M = Molecular weight A = Avogadro's number V = Volume = a^3 in this case. But V = (3.48\\textdegreeA)^3 = (3.48 x 10^-10m)^3 d = [{(3) (40.08 g/mole)(10^-3kg/g)} / {(6.022 \u00d7 10^23 mole^-1) (3.48 \u00d7 10^-10m)^3}] = 4.738 \u00d7 10^3 kg/m^3 Note that a face-centered unit cell has points at the faces of the cubic cell. So the total contribution from all faces = (1/2) \u00d7 6 = 3. This is why z = content = 3."}, "question": "task_1"}}, {"data": {"text": "Question:\nAt 800\\textdegreeC the value ofK_pfor the decomposition of methane, according to the reaction CH_4 (g) = C (s) + 2H_2 (g), is 23 atm. Initially 3 moles of CH_4 were present in a 5-liter vessel. Calculatea) the number of moles of each species present at equilibrium.b) how much hydrogen gas should be introduced into the 5-liter vessel at 800\\textdegreeC in order to just convert 3 mole of carbon into methane.\n\nOptions:\nA. 4 moles, 2 moles, 1 moles, 7 moles\nB. 3.5 moles, 2.5 moles, 0.5 moles, 8.5 moles\nC.             3.3 moles, 2.2 moles, 0.8 moles, 7.7 moles\nD. 3.84 moles, 2.16 moles, 0.84 moles, 7.98 moles\n\nAnswer: D\n\nReference Solution:\nCH_4 (g) = C (s) + 2H_2 (g) The expression forK_pis given by, K_p= [{P_(H)2^2} / {P_(CH)4}] = 23(1) Define y = number of moles of H_2 present. Then, the number of moles of CH_4, n_(CH)4 = 3 - (1/2)y. Total number of moles,n_total= y + 3 - (1/2)y or n_total= 3 + (1/2)y(2a) From (1) K_p= [{P_(H)2^2} / {P_(CH)4}](2) K_p= [{(n(H)2/n_total)P_total}^2 / {(n_(CH)4/n_total)P_total}] = 23(3) But from the ideal gas law, PV =n_totalRT or [P / (n_total)] = (RT / V) = [{(0.082 literatm\\textdegree K^-1 mole^-1) (1073\\textdegreeK)} / {5 liters}] = 17.6atmmole^-1. From equation (3), K_p= [{n_(H)2^2 P} / {n_(CH)4n_total}] 23 = [{n_(H)2^2} / {n_(CH)4}] (RT / V) 23 = [y^2 / {3 - (1/2)y}] (17.6). Solving for y gives y = 1.68. Thus from equation (2a), n_total= 3 + (1/2) (1.68) = 3.84 From equation (4),P = 17.6n_total = 17.6 (3.84) orP = 67.5atm The number of moles of CH_2 at equilibrium = 3 - (1/2)y = 3 - (1/2) (1.68) or n_(CH)4 = 2.16. Thus 0.84 mole has decomposed andn_Cis therefore 0.84 mole. b) When 3 moles of carbon is converted into methane, there will be 3 moles of methane. Consequently, the partial pressure of methane P_(CH)4 = n_(CH)4 (P_total) = 3 (17.6) = 52.8 atm. Since carbon is to have just disappeared, the hydrogen pressure will be the equilibrium pressure. That is, K_p= [{P_(H)2^2} / {P_(CH)4}] or P_(H)2^2 =K_pP_(CH)4 = (23atm) (52.8atm) = 1214.4 atm^2 \\thereforeP_(H)2 = 34.8 atm. Solving for n_(H)2 gives n_(H)2 = [{P_(H)2-} / {P_total}] = [(34.8atm) / (17.6atmmole^-1)] orn_(H)2 = 1.98 mole. The total number of moles of hydrogen required is then 1.98 mole plus the number of moles required to convert the carbon to methane. That is, 6 additional mole, or a total of 7.98 moles.", "ref_id": 4447, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "At 800\\textdegreeC the value ofK_pfor the decomposition of methane, according to the reaction CH_4 (g) = C (s) + 2H_2 (g), is 23 atm. Initially 3 moles of CH_4 were present in a 5-liter vessel. Calculatea) the number of moles of each species present at equilibrium.b) how much hydrogen gas should be introduced into the 5-liter vessel at 800\\textdegreeC in order to just convert 3 mole of carbon into methane.", "options": ["4 moles, 2 moles, 1 moles, 7 moles", "3.5 moles, 2.5 moles, 0.5 moles, 8.5 moles", "3.3 moles, 2.2 moles, 0.8 moles, 7.7 moles", "3.84 moles, 2.16 moles, 0.84 moles, 7.98 moles"], "answer": "D", "solution": "CH_4 (g) = C (s) + 2H_2 (g) The expression forK_pis given by, K_p= [{P_(H)2^2} / {P_(CH)4}] = 23(1) Define y = number of moles of H_2 present. Then, the number of moles of CH_4, n_(CH)4 = 3 - (1/2)y. Total number of moles,n_total= y + 3 - (1/2)y or n_total= 3 + (1/2)y(2a) From (1) K_p= [{P_(H)2^2} / {P_(CH)4}](2) K_p= [{(n(H)2/n_total)P_total}^2 / {(n_(CH)4/n_total)P_total}] = 23(3) But from the ideal gas law, PV =n_totalRT or [P / (n_total)] = (RT / V) = [{(0.082 literatm\\textdegree K^-1 mole^-1) (1073\\textdegreeK)} / {5 liters}] = 17.6atmmole^-1. From equation (3), K_p= [{n_(H)2^2 P} / {n_(CH)4n_total}] 23 = [{n_(H)2^2} / {n_(CH)4}] (RT / V) 23 = [y^2 / {3 - (1/2)y}] (17.6). Solving for y gives y = 1.68. Thus from equation (2a), n_total= 3 + (1/2) (1.68) = 3.84 From equation (4),P = 17.6n_total = 17.6 (3.84) orP = 67.5atm The number of moles of CH_2 at equilibrium = 3 - (1/2)y = 3 - (1/2) (1.68) or n_(CH)4 = 2.16. Thus 0.84 mole has decomposed andn_Cis therefore 0.84 mole. b) When 3 moles of carbon is converted into methane, there will be 3 moles of methane. Consequently, the partial pressure of methane P_(CH)4 = n_(CH)4 (P_total) = 3 (17.6) = 52.8 atm. Since carbon is to have just disappeared, the hydrogen pressure will be the equilibrium pressure. That is, K_p= [{P_(H)2^2} / {P_(CH)4}] or P_(H)2^2 =K_pP_(CH)4 = (23atm) (52.8atm) = 1214.4 atm^2 \\thereforeP_(H)2 = 34.8 atm. Solving for n_(H)2 gives n_(H)2 = [{P_(H)2-} / {P_total}] = [(34.8atm) / (17.6atmmole^-1)] orn_(H)2 = 1.98 mole. The total number of moles of hydrogen required is then 1.98 mole plus the number of moles required to convert the carbon to methane. That is, 6 additional mole, or a total of 7.98 moles."}, "question": "task_1"}}, {"data": {"text": "Question:\n(a)Usingthe expression V = 1002.94 + 16.40m + 2.140m^3/2 + 0.0027m^5/2 as a functionof m for aqueousNaClat 25\\textdegree, findV_NaClandV_[(H)2O] inlm solution. (b) Given that the molar volumes ofNaCl(s) and H_2O (1) are 27.00and18.07 cm^3 mole ^-1, respectively, find \\DeltaV\\textdegree_298 for (i) (1000 / 18) H_2O (1) +NaCl(s) \\rightarrow Solution (lm) (ii)NaCl(s) \\rightarrowNaCl(lm) (iii) H_2O (1) \\rightarrow H_2O (lm)\n\nOptions:\nA. V_NaCl= 19.61 cm^3 mol^-1, V_[_(H)2O] = 18.05 cm^3 mol^-1, \\DeltaV\textdegree_298 (i) = - 0.02 cm^3, (ii) = - 8.6 cm^3, (iii) = - 7.39 cm^3\nB. V_NaCl= 18.05 cm^3 mol^-1, V_[_(H)2O] = 19.61 cm^3 mol^-1, \\DeltaV\textdegree_298 (i) = - 7.39 cm^3, (ii) = - 0.02 cm^3, (iii) = - 8.6 cm^3\nC.             V_NaCl= 19.61 cm^3 mol^-1, V_[_(H)2O] = 18.05 cm^3 mol^-1, \\DeltaV\textdegree_298 (i) = - 8.6 cm^3, (ii) = - 7.39 cm^3, (iii) = - 0.02 cm^3\nD. V_NaCl= 18.07 cm^3 mol^-1, V_[_(H)2O] = 19.61 cm^3 mol^-1, \\DeltaV\textdegree_298 (i) = - 7.39 cm^3, (ii) = - 8.6 cm^3, (iii) = - 0.02 cm^3\n\nAnswer: C\n\nReference Solution:\nBy definition, V_NaCl= (dV/ dm) = (\\partialV / \\partialn_NaCl)_(_n)[(H)2O] where n = number of moles V= partial molar volume. From the given V expression, V_NaCl= (dV/ dm) = 16.40 + 3.210m^1/2 + 0.0068m^3/2(1) SinceV_NaClhas been determined,V_[_(H)2O] can be found by theNaCluse ofV = n_1V_1 + n_2V_2 where n_2 is replaced by m and n_1 by (1000 / M_1) = (1000 / 18) 55.51. Note that m =molality= [(moles of solute) / (1 kg solvent)] and that M_1 = molecular weight of component 1, which is waterin this case. V = 1002.94 + 16.40m + 2.140m^3/2 + 0.0027m^1/2 = 55.51V_[_(H)2O] +mV_NaCl. Therefore, with the use of equation (1), V =55.51V_[_(H)2O] + m(16.40 + 3.210m^1/2 + 0.0068m^3/2) fromwhichV_[(H)2O] = 18.07 - 1.928 \u00d7 10^-2m^3/2 - 7.4 \u00d7 10^-5m^5/2(2) When m = 1,V_NaClandV_[_(H)2O] can be obtained by direct substitution into equations(1) and (2). Thus V_NaCl= 19.61 cm^3 mol^-1and V_[_(H)2O] = 18.05 cm^3 mol^-1 . b) By definition, (i) \\DeltaV\\textdegree_298 =V_solution- [n_1V_[_(H)2O](1) + n_2V_NaCl(s)] But n_1 = (1000 / 18)andn_2 = m Therefore \\DeltaV\\textdegree_298 =V_solution- [(1000 / 18)V_[_(H)2O](1) +mV_NaCl_(s)] ButV_solution= 1002.94 + 16.40(1) + 2.140(1^3/2)+0.0027(1^5/2) Therefore,V_solution= 1021.48 cm^3 so, \\DeltaV\\textdegree_298 = 1021.48 - [55.51(18.07) + 1(27.00)] = - 8.6 cm^3 (ii) Here, \\DeltaV\\textdegree_298 =V_NaCl_(_lm) -V_NaCl_(s) The calculatedV_NaCl_(_lm) = 19.61 cm^3 andV_NaCl_(s) is given to be 27.00. Note that there is a difference betweenNaCl(s) andNaCl(lm). Therefore \\DeltaV\\textdegree_298 = 19.61 - 27.00 = - 7.39 cm^3 (iii) \\DeltaV\\textdegree_298 =V_[_(H)2O](lm) -V_[(H)2O](1) = 18.05 - 18.07 = - 0.02 cm^3.", "ref_id": 4448, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "(a)Usingthe expression V = 1002.94 + 16.40m + 2.140m^3/2 + 0.0027m^5/2 as a functionof m for aqueousNaClat 25\\textdegree, findV_NaClandV_[(H)2O] inlm solution. (b) Given that the molar volumes ofNaCl(s) and H_2O (1) are 27.00and18.07 cm^3 mole ^-1, respectively, find \\DeltaV\\textdegree_298 for (i) (1000 / 18) H_2O (1) +NaCl(s) \\rightarrow Solution (lm) (ii)NaCl(s) \\rightarrowNaCl(lm) (iii) H_2O (1) \\rightarrow H_2O (lm)", "options": ["V_NaCl= 19.61 cm^3 mol^-1, V_[_(H)2O] = 18.05 cm^3 mol^-1, \\DeltaV\textdegree_298 (i) = - 0.02 cm^3, (ii) = - 8.6 cm^3, (iii) = - 7.39 cm^3", "V_NaCl= 18.05 cm^3 mol^-1, V_[_(H)2O] = 19.61 cm^3 mol^-1, \\DeltaV\textdegree_298 (i) = - 7.39 cm^3, (ii) = - 0.02 cm^3, (iii) = - 8.6 cm^3", "V_NaCl= 19.61 cm^3 mol^-1, V_[_(H)2O] = 18.05 cm^3 mol^-1, \\DeltaV\textdegree_298 (i) = - 8.6 cm^3, (ii) = - 7.39 cm^3, (iii) = - 0.02 cm^3", "V_NaCl= 18.07 cm^3 mol^-1, V_[_(H)2O] = 19.61 cm^3 mol^-1, \\DeltaV\textdegree_298 (i) = - 7.39 cm^3, (ii) = - 8.6 cm^3, (iii) = - 0.02 cm^3"], "answer": "C", "solution": "By definition, V_NaCl= (dV/ dm) = (\\partialV / \\partialn_NaCl)_(_n)[(H)2O] where n = number of moles V= partial molar volume. From the given V expression, V_NaCl= (dV/ dm) = 16.40 + 3.210m^1/2 + 0.0068m^3/2(1) SinceV_NaClhas been determined,V_[_(H)2O] can be found by theNaCluse ofV = n_1V_1 + n_2V_2 where n_2 is replaced by m and n_1 by (1000 / M_1) = (1000 / 18) 55.51. Note that m =molality= [(moles of solute) / (1 kg solvent)] and that M_1 = molecular weight of component 1, which is waterin this case. V = 1002.94 + 16.40m + 2.140m^3/2 + 0.0027m^1/2 = 55.51V_[_(H)2O] +mV_NaCl. Therefore, with the use of equation (1), V =55.51V_[_(H)2O] + m(16.40 + 3.210m^1/2 + 0.0068m^3/2) fromwhichV_[(H)2O] = 18.07 - 1.928 \u00d7 10^-2m^3/2 - 7.4 \u00d7 10^-5m^5/2(2) When m = 1,V_NaClandV_[_(H)2O] can be obtained by direct substitution into equations(1) and (2). Thus V_NaCl= 19.61 cm^3 mol^-1and V_[_(H)2O] = 18.05 cm^3 mol^-1 . b) By definition, (i) \\DeltaV\\textdegree_298 =V_solution- [n_1V_[_(H)2O](1) + n_2V_NaCl(s)] But n_1 = (1000 / 18)andn_2 = m Therefore \\DeltaV\\textdegree_298 =V_solution- [(1000 / 18)V_[_(H)2O](1) +mV_NaCl_(s)] ButV_solution= 1002.94 + 16.40(1) + 2.140(1^3/2)+0.0027(1^5/2) Therefore,V_solution= 1021.48 cm^3 so, \\DeltaV\\textdegree_298 = 1021.48 - [55.51(18.07) + 1(27.00)] = - 8.6 cm^3 (ii) Here, \\DeltaV\\textdegree_298 =V_NaCl_(_lm) -V_NaCl_(s) The calculatedV_NaCl_(_lm) = 19.61 cm^3 andV_NaCl_(s) is given to be 27.00. Note that there is a difference betweenNaCl(s) andNaCl(lm). Therefore \\DeltaV\\textdegree_298 = 19.61 - 27.00 = - 7.39 cm^3 (iii) \\DeltaV\\textdegree_298 =V_[_(H)2O](lm) -V_[(H)2O](1) = 18.05 - 18.07 = - 0.02 cm^3."}, "question": "task_1"}}, {"data": {"text": "Question:\n(a) When 1.158 moles of water are dissolved in 0.842 moles of ethanol the volume of the solution is 68.16 cm^3 at 25\\textdegree. If V_[(H)2O] = 16.98 cm^3 mole^-1 in this solution findV_[(C)2(H)5OH]. (b) Compare the partial molar volumes of the components with their molar volumes, if H_2O(1) and C_2H_5 \\bullet OH(1) have molecular weights of 18.02 and 46.07 g mole^-1, and densities of 0.9970 and 0.7852 g cm^-3, respectively, at this temperature.\n\nOptions:\nA. 18.074 cm^3mol^-1\nB. 57.60 cm^3mol^-1\nC.             58.673 cm^3mol^-1\nD. 68.16 cm^3mol^-1\n\nAnswer: B\n\nReference Solution:\na) Using the state function equation as applied to Volume, V = n_1V_1 + n_2V_2 + n_3V_3 + . . . wheren_i= number of moles of componenti V_i = partial molar volume of componenti andV = volume of solution Since this is a binary solution of water and ethanol, V = n_[(H)2O]V_[(H)2O] + n_[(C)2(H)5OH]V_[(C)2(H)5OH] .(1) Substitutingthe given values into equation (1), it becomes 68.16 = (1.158) (16.98) + (0.842)[V_[(C)2(H)5OH]] = 19.663 + 0.842V_[(C)2(H)5OH] \\therefore48.497 = 0.842V_[(C)2(H)5OH] orV_[(C)2(H)5OH] = [(48.497) / (0.842) = 57.60 cm^3mol^-1 b) By definition, molar volume = [(molecular weight) / density] . Therefore, molar volume of water = [(18.02) / (0.9970)] = 18.074 cm^3 mol^-1 and that of ethanol = [(46.07) / (0.7852)] = 58.673 cm^3 mol^-1 In this case their molar volumes are greater than their partial molar volumes.", "ref_id": 4449, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "(a) When 1.158 moles of water are dissolved in 0.842 moles of ethanol the volume of the solution is 68.16 cm^3 at 25\\textdegree. If V_[(H)2O] = 16.98 cm^3 mole^-1 in this solution findV_[(C)2(H)5OH]. (b) Compare the partial molar volumes of the components with their molar volumes, if H_2O(1) and C_2H_5 \\bullet OH(1) have molecular weights of 18.02 and 46.07 g mole^-1, and densities of 0.9970 and 0.7852 g cm^-3, respectively, at this temperature.", "options": ["18.074 cm^3mol^-1", "57.60 cm^3mol^-1", "58.673 cm^3mol^-1", "68.16 cm^3mol^-1"], "answer": "B", "solution": "a) Using the state function equation as applied to Volume, V = n_1V_1 + n_2V_2 + n_3V_3 + . . . wheren_i= number of moles of componenti V_i = partial molar volume of componenti andV = volume of solution Since this is a binary solution of water and ethanol, V = n_[(H)2O]V_[(H)2O] + n_[(C)2(H)5OH]V_[(C)2(H)5OH] .(1) Substitutingthe given values into equation (1), it becomes 68.16 = (1.158) (16.98) + (0.842)[V_[(C)2(H)5OH]] = 19.663 + 0.842V_[(C)2(H)5OH] \\therefore48.497 = 0.842V_[(C)2(H)5OH] orV_[(C)2(H)5OH] = [(48.497) / (0.842) = 57.60 cm^3mol^-1 b) By definition, molar volume = [(molecular weight) / density] . Therefore, molar volume of water = [(18.02) / (0.9970)] = 18.074 cm^3 mol^-1 and that of ethanol = [(46.07) / (0.7852)] = 58.673 cm^3 mol^-1 In this case their molar volumes are greater than their partial molar volumes."}, "question": "task_1"}}, {"data": {"text": "Question:\nA(g) + 2B(g) \\rightleftarrows C(g) + D(s) For the above reaction, A, B, and C are ideal gases and D is solid of negligible volume and vapor pressure. Its K_p = 1.0 \u00d7 10^-3. Initially A and B are introduced into a container until the partial pressure of each, before any reaction takes place, is 1.00 atm. Calculate the partial pressure of C at equilibrium, (a) When the volume of the container is held constant. (b) When the total pressure is held constant at 2.00 atm.\n\nOptions:\nA. 0.995 \u00d7 10^-3\nB. 1.0 \u00d7 10^-3\nC.             0.998 \u00d7 10^-3\nD. 0.997 \u00d7 10^-3\n\nAnswer: C\n\nReference Solution:\nA+2B\\rightleftarrowsC+ D(s) numberof moles present initially : n_0 n_0 0 numberof moles present at equilibrium: (1 - \\alpha)n_0 (1 - 2\\alpha)n_0 \\alpha n_0 From the ideal gas law PV = n_0RT or P = [(n_0RT) / V] 1.00atm= [(n_0RT) / V]. a) The partial pressure of A, P_-A, is given by P_A = n_0 (1- \\alpha) [(RT) / V] = (1 - \\alpha) (1) = 1 - \\alpha P_B = n_0 (1 - 2\\alpha) [(RT) / V] = 1 - 2\\alpha P_C = n_0\\alpha [(RT) / V] = \\alpha. The equilibrium constant expression is given by K_p= [P_C / {P_A P_(B)^ 2}] or 1.0 \u00d7 10^-3= [\\alpha / {(1 - \\alpha) (1 - 2\\alpha)^2}] Solve the quadratic equation for \\alpha. If 2\\alpha is assumed to be much less than 1, then \\alpha = 1.0 \u00d7 10^-3 atm. For an improved result, set 1 - \\alpha = 0.999 and 1 - 2\\alpha = 0.0998 . Therefore, \\alpha = 1.0 \u00d7 10^-3 \u00d7 0.999 \u00d7 0.996 \\alpha = 0.995 \u00d7 10^-3atm= P_C b) Total number of moles,n_totalis n_total= n_0 (1 - \\alpha) + (1 - 2\\alpha)n_0 + \\alpha n_0 = (2 - 2\\alpha)n_0 P_total= 2.00atm P_A = [(number of moles of A) / (total moles)]P_total = [(1 - \\alpha) / (2 - 2\\alpha)] P P_A = [{1 - 0.995 \u00d7 10^-3} / {2 - 2 (0.995 \u00d7 10^-3)}] 2.00atm P_A = 1atm P_B = [(1 - 2\\alpha) / (2 - 2\\alpha)] P = [(1 - 2\\alpha) / (1 - \\alpha)] P_C = [\\alpha / (2 - 2\\alpha)] P P_C = [\\alpha / (1 - \\alpha)] ButK_p= [P_C / {P_A P_B^2}] \\therefore1.0 \u00d7 10^-3 = [{\\alpha / (1 - \\alpha)} / {{(1 - \\alpha) / (1 - \\alpha)} {(1 - 2\\alpha) / (1 - \\alpha)}^2}] 1.0 \u00d7 10^-3 = [{\\alpha(1 - \\alpha)} / (1 - 2\\alpha)^2] If in solving for \\alpha, 2 \\alpha is assumed to be much less than 1, then \\alpha = 1.0 \u00d7 10^-3 atm. For a more refined result, set 1 - \\alpha = .999 and 1 - 2\\alpha = .998. Therefore, \\alpha = [(1.0 \u00d7 10^-3 \u00d7 0.998^2) / (0.999)] \\alpha = 0.997 \u00d7 10^-3 P_C = [\\alpha / (1 - \\alpha)] = [(0.997 \u00d7 10^-3) / (0.999)] orP_C = 0.998 \u00d7 10^-3.", "ref_id": 4450, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "A(g) + 2B(g) \\rightleftarrows C(g) + D(s) For the above reaction, A, B, and C are ideal gases and D is solid of negligible volume and vapor pressure. Its K_p = 1.0 \u00d7 10^-3. Initially A and B are introduced into a container until the partial pressure of each, before any reaction takes place, is 1.00 atm. Calculate the partial pressure of C at equilibrium, (a) When the volume of the container is held constant. (b) When the total pressure is held constant at 2.00 atm.", "options": ["0.995 \u00d7 10^-3", "1.0 \u00d7 10^-3", "0.998 \u00d7 10^-3", "0.997 \u00d7 10^-3"], "answer": "C", "solution": "A+2B\\rightleftarrowsC+ D(s) numberof moles present initially : n_0 n_0 0 numberof moles present at equilibrium: (1 - \\alpha)n_0 (1 - 2\\alpha)n_0 \\alpha n_0 From the ideal gas law PV = n_0RT or P = [(n_0RT) / V] 1.00atm= [(n_0RT) / V]. a) The partial pressure of A, P_-A, is given by P_A = n_0 (1- \\alpha) [(RT) / V] = (1 - \\alpha) (1) = 1 - \\alpha P_B = n_0 (1 - 2\\alpha) [(RT) / V] = 1 - 2\\alpha P_C = n_0\\alpha [(RT) / V] = \\alpha. The equilibrium constant expression is given by K_p= [P_C / {P_A P_(B)^ 2}] or 1.0 \u00d7 10^-3= [\\alpha / {(1 - \\alpha) (1 - 2\\alpha)^2}] Solve the quadratic equation for \\alpha. If 2\\alpha is assumed to be much less than 1, then \\alpha = 1.0 \u00d7 10^-3 atm. For an improved result, set 1 - \\alpha = 0.999 and 1 - 2\\alpha = 0.0998 . Therefore, \\alpha = 1.0 \u00d7 10^-3 \u00d7 0.999 \u00d7 0.996 \\alpha = 0.995 \u00d7 10^-3atm= P_C b) Total number of moles,n_totalis n_total= n_0 (1 - \\alpha) + (1 - 2\\alpha)n_0 + \\alpha n_0 = (2 - 2\\alpha)n_0 P_total= 2.00atm P_A = [(number of moles of A) / (total moles)]P_total = [(1 - \\alpha) / (2 - 2\\alpha)] P P_A = [{1 - 0.995 \u00d7 10^-3} / {2 - 2 (0.995 \u00d7 10^-3)}] 2.00atm P_A = 1atm P_B = [(1 - 2\\alpha) / (2 - 2\\alpha)] P = [(1 - 2\\alpha) / (1 - \\alpha)] P_C = [\\alpha / (2 - 2\\alpha)] P P_C = [\\alpha / (1 - \\alpha)] ButK_p= [P_C / {P_A P_B^2}] \\therefore1.0 \u00d7 10^-3 = [{\\alpha / (1 - \\alpha)} / {{(1 - \\alpha) / (1 - \\alpha)} {(1 - 2\\alpha) / (1 - \\alpha)}^2}] 1.0 \u00d7 10^-3 = [{\\alpha(1 - \\alpha)} / (1 - 2\\alpha)^2] If in solving for \\alpha, 2 \\alpha is assumed to be much less than 1, then \\alpha = 1.0 \u00d7 10^-3 atm. For a more refined result, set 1 - \\alpha = .999 and 1 - 2\\alpha = .998. Therefore, \\alpha = [(1.0 \u00d7 10^-3 \u00d7 0.998^2) / (0.999)] \\alpha = 0.997 \u00d7 10^-3 P_C = [\\alpha / (1 - \\alpha)] = [(0.997 \u00d7 10^-3) / (0.999)] orP_C = 0.998 \u00d7 10^-3."}, "question": "task_1"}}, {"data": {"text": "Question:\nA sintered glass filter with a uniform pore diameter of 0.20\\mumis filled with water at 20\\textdegreeC. Estimate the pressure that would be necessary to blow the capillary water out of the pores of the filter. How would you design an apparatus to measure the dis-tribution of pore sizes in a filter.\n\nOptions:\nA. 14.4 atm\nB. 20 atm\nC.             30 atm\nD. 10 atm\n\nAnswer: A\n\nReference Solution:\na) As a direct consequence of surface tension, there exist a difference in pressure across any curved liquid surface given by \\DeltaP = 2\\Upsilon/r(1) where \\DeltaP = the pressure difference between the concave and convex side of the liquid surface, \\Upsilon is the surface tension of the liquid and r is the radius of the pore. The surface tension of water at 20\\textdegreeC is 72.75 dyne cm^-1. Therefore from equation (1) \\DeltaP= [{2(72.75 dyne/cm)(10^-5N/dyne)(10^2 cm/m)} / {(1/2) (0.20 \u00d7 10^-6m)(1.013 \u00d7 10^5 N\\bulletm^-2/atm)}] = 14.4 atm. b) The study of pore size distributions has been done with a mercury porosimeter. Mercury under nitrogen pressure up to 4000atmis forced into the pores of the filter material and the volume penetrated is determined by electrical measurements. The distribution function D is given in terms of the volume V and radius r of the pore. Thus dV= D(r)dr(2) From equation (1), r = 2\\Upsilon/P Differentiate both sides to obtain dr= (-2\\Upsilon/P^2)dP Substitute fordrin equation (2) to get dV= [{-2D(r)\\UpsilondP} / P^2](3) But2\\Upsilon/P = r Thus, equation (3) becomes dV= [{-rD(r)dP} / P] orD(r) = -(P/r) (dV/dP).", "ref_id": 4451, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "A sintered glass filter with a uniform pore diameter of 0.20\\mumis filled with water at 20\\textdegreeC. Estimate the pressure that would be necessary to blow the capillary water out of the pores of the filter. How would you design an apparatus to measure the dis-tribution of pore sizes in a filter.", "options": ["14.4 atm", "20 atm", "30 atm", "10 atm"], "answer": "A", "solution": "a) As a direct consequence of surface tension, there exist a difference in pressure across any curved liquid surface given by \\DeltaP = 2\\Upsilon/r(1) where \\DeltaP = the pressure difference between the concave and convex side of the liquid surface, \\Upsilon is the surface tension of the liquid and r is the radius of the pore. The surface tension of water at 20\\textdegreeC is 72.75 dyne cm^-1. Therefore from equation (1) \\DeltaP= [{2(72.75 dyne/cm)(10^-5N/dyne)(10^2 cm/m)} / {(1/2) (0.20 \u00d7 10^-6m)(1.013 \u00d7 10^5 N\\bulletm^-2/atm)}] = 14.4 atm. b) The study of pore size distributions has been done with a mercury porosimeter. Mercury under nitrogen pressure up to 4000atmis forced into the pores of the filter material and the volume penetrated is determined by electrical measurements. The distribution function D is given in terms of the volume V and radius r of the pore. Thus dV= D(r)dr(2) From equation (1), r = 2\\Upsilon/P Differentiate both sides to obtain dr= (-2\\Upsilon/P^2)dP Substitute fordrin equation (2) to get dV= [{-2D(r)\\UpsilondP} / P^2](3) But2\\Upsilon/P = r Thus, equation (3) becomes dV= [{-rD(r)dP} / P] orD(r) = -(P/r) (dV/dP)."}, "question": "task_1"}}, {"data": {"text": "Question:\nIn the ammonia synthesis reaction, N_2(g) + 3H_2(g) \\rightarrow 2NH_3(g), all the gases involved are ideal. Prove that the maximum concentration of ammonia at equilibrium is attained when the ratio of H_2 to N_2 is 3:1.\n\nOptions:\nA. 5P_(N)2= P_(H)2\nB. 3P_(N)2= P_(H)2\nC.             2P_(N)2= P_(H)2\nD. 4P_(N)2= P_(H)2\n\nAnswer: B\n\nReference Solution:\nN_2 + 3H_2 \\rightarrow 2NH-_3. The equilibrium constant expression for this reaction is K_p_ -= [{P_(NH)3^2} / {P_(N)2 P_(H)2^3}](1) The total pressure P = P_(N)2 + P_(H)2 + P_(NH)3(2) Define y = [{P_(H)2} / {P_(N)2}]. Then P_(H)2 =yP_(N)2. From equation (2) P_total= P_(N)2 +yP_(N)2 + P_(NH)3 P_total= P_(N)2 + (y + 1) + P_(NH)3 \\thereforeP_(N)2 = [{P_total- P_(NH)3} / {y + 1}] From equation (1) K_p= [{P_(NH)3^2} / {(y^3 P_(N)2^3) (P_(N)2)}] = [{P_(NH)3^2} / {y^3 P_(N)2^4}] K_p= [{P_(NH)3^2} / {y^3{(P - P_(NH)3) / (y + 1)}^4}] orK_p[y^3 {(P - P_(NH)3) / (y + 1)}^4] = P_(NH)3^2(3) Taking natural logarithm of both sides of equation (3) gives InK_p+ 3 In y + 4 In [P - P_(NH)3] - 4 In (y + 1) = 2 In P_(NH)3. Differentiate P_(NH)3 with respect to y at constant temperature and total pressure, to obtain (3/y) + [4 / {P - P_(NH)3}] [{-dP_(NH)3} /dy]P, T- [4 / (y + 1)] = [2 / {P_(NH)3}] [{dP_(NH)3} /dy]_P, T(4) To get the maximum value of P_(NH)3, set the term [dP_(NH)3 /dy] in equation (4) equal to zero to get (3/y) - [4 / (y + 1)] = [{3 - y} / {y (y + 1)}] = 0 \\thereforey = 3 = [P_(H)2 / P_(N)2]. or3P_(N)2= P_(H)2", "ref_id": 4452, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "In the ammonia synthesis reaction, N_2(g) + 3H_2(g) \\rightarrow 2NH_3(g), all the gases involved are ideal. Prove that the maximum concentration of ammonia at equilibrium is attained when the ratio of H_2 to N_2 is 3:1.", "options": ["5P_(N)2= P_(H)2", "3P_(N)2= P_(H)2", "2P_(N)2= P_(H)2", "4P_(N)2= P_(H)2"], "answer": "B", "solution": "N_2 + 3H_2 \\rightarrow 2NH-_3. The equilibrium constant expression for this reaction is K_p_ -= [{P_(NH)3^2} / {P_(N)2 P_(H)2^3}](1) The total pressure P = P_(N)2 + P_(H)2 + P_(NH)3(2) Define y = [{P_(H)2} / {P_(N)2}]. Then P_(H)2 =yP_(N)2. From equation (2) P_total= P_(N)2 +yP_(N)2 + P_(NH)3 P_total= P_(N)2 + (y + 1) + P_(NH)3 \\thereforeP_(N)2 = [{P_total- P_(NH)3} / {y + 1}] From equation (1) K_p= [{P_(NH)3^2} / {(y^3 P_(N)2^3) (P_(N)2)}] = [{P_(NH)3^2} / {y^3 P_(N)2^4}] K_p= [{P_(NH)3^2} / {y^3{(P - P_(NH)3) / (y + 1)}^4}] orK_p[y^3 {(P - P_(NH)3) / (y + 1)}^4] = P_(NH)3^2(3) Taking natural logarithm of both sides of equation (3) gives InK_p+ 3 In y + 4 In [P - P_(NH)3] - 4 In (y + 1) = 2 In P_(NH)3. Differentiate P_(NH)3 with respect to y at constant temperature and total pressure, to obtain (3/y) + [4 / {P - P_(NH)3}] [{-dP_(NH)3} /dy]P, T- [4 / (y + 1)] = [2 / {P_(NH)3}] [{dP_(NH)3} /dy]_P, T(4) To get the maximum value of P_(NH)3, set the term [dP_(NH)3 /dy] in equation (4) equal to zero to get (3/y) - [4 / (y + 1)] = [{3 - y} / {y (y + 1)}] = 0 \\thereforey = 3 = [P_(H)2 / P_(N)2]. or3P_(N)2= P_(H)2"}, "question": "task_1"}}, {"data": {"text": "Question:\nGases A, B, C, and D obey the vanderWaals equation, with a and b values as given (liter-atmsystem of units): A B C D a 6 6 20 0.05 b 0.025 0.15 0.10 0.02 Which gas has the highest critical temperature, the largest mole-cules, the most nearly ideal behavior at STP?\n\nOptions:\nA. Gas D has the highest critical temperature, Gas C has the largest molecules, Gas B has the most nearly ideal behavior at STP\nB. Gas B has the highest critical temperature, Gas A has the largest molecules, Gas C has the most nearly ideal behavior at STP\nC.             Gas C has the highest critical temperature, Gas D has the largest molecules, Gas A has the most nearly ideal behavior at STP\nD. Gas A has the highest critical temperature, Gas B has the largest molecules, Gas D has the most nearly ideal behavior at STP\n\nAnswer: D\n\nReference Solution:\nLooking at [(P_cV_c) / (RT_c)] = [{(a/27b^2) (3b)} / {(R)(8a/27Rb)}] it is seen thatT_cis proportional to a/b . If this ratio is computed for the various gases, then gas A, a/b = 6/0.025 = 240; For gas B, a/b = 6/0.15 = 40; For gas C, a/b = 20/0.10 = 200 and for gas D, a/b = 0.05/0.02 = 2.5. These values show that gas A (with the highest a/b ratio) has the highestT_c. The constant b gives a measure of molecular volume (that is,V_c= 3b). Therefore, gas B has the largest molecules. At STP, the gas that has the lowest critical temperature and pressure will be most ideal. Gas D has the lowest a/b ratio, hence lowestT_c. The same gas also gives the lowest a/b^2 ratio, hence the lowest critical pressure P_c.", "ref_id": 4453, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Gases A, B, C, and D obey the vanderWaals equation, with a and b values as given (liter-atmsystem of units): A B C D a 6 6 20 0.05 b 0.025 0.15 0.10 0.02 Which gas has the highest critical temperature, the largest mole-cules, the most nearly ideal behavior at STP?", "options": ["Gas D has the highest critical temperature, Gas C has the largest molecules, Gas B has the most nearly ideal behavior at STP", "Gas B has the highest critical temperature, Gas A has the largest molecules, Gas C has the most nearly ideal behavior at STP", "Gas C has the highest critical temperature, Gas D has the largest molecules, Gas A has the most nearly ideal behavior at STP", "Gas A has the highest critical temperature, Gas B has the largest molecules, Gas D has the most nearly ideal behavior at STP"], "answer": "D", "solution": "Looking at [(P_cV_c) / (RT_c)] = [{(a/27b^2) (3b)} / {(R)(8a/27Rb)}] it is seen thatT_cis proportional to a/b . If this ratio is computed for the various gases, then gas A, a/b = 6/0.025 = 240; For gas B, a/b = 6/0.15 = 40; For gas C, a/b = 20/0.10 = 200 and for gas D, a/b = 0.05/0.02 = 2.5. These values show that gas A (with the highest a/b ratio) has the highestT_c. The constant b gives a measure of molecular volume (that is,V_c= 3b). Therefore, gas B has the largest molecules. At STP, the gas that has the lowest critical temperature and pressure will be most ideal. Gas D has the lowest a/b ratio, hence lowestT_c. The same gas also gives the lowest a/b^2 ratio, hence the lowest critical pressure P_c."}, "question": "task_1"}}, {"data": {"text": "Question:\nIn a certain binary solution, the activity a_1 of component 1 is givenby the equation Rlna_1 = Rlnx_1 + Ax_22+ Bx_2^3 wherex_1 and x_2 are the respective mole fractions and A and Bareconstants. Derive an expression for the ac-tivity of component2 given that the equation is valid over the entire concentrationrange from pure liquid 1 to pure liquid 2.\n\nOptions:\nA. Rlna_2 = Rlnx_1 + Ax_1^2 + B[x_1^2 - x_1^3]\nB. Rlna_2 = Rlnx_2 + Ax_1^2 + B[x_1^2 - x_1^3]\nC.             Rlna_2 = Rlnx_2 + Ax_1^2 + B[(3/2)x_1^2 - x_1^3]\nD. Rlna_2 = Rlnx_1 + Ax_1^2 + B[(3/2)x_1^2 - x_1^3]\n\nAnswer: C\n\nReference Solution:\nRlna_1 = Rlnx_1 + Ax_2^2 + Bx_2^3 orlna_1 =lnx_1 + (Ax_2^2 / R) + (Bx_2^3 / R)(1) Differentiating equation (1) gives dlna 1 = (dx_1 / x_1) + [(2Ax_2dx_2) / R] + [(3Bx_2^2dx_2) / R] One form of the Gibbs-Duhemequation is given as x_1dlna_1 + x_2dlna_2 = 0(2) wherex_1 and x_2 denote the mole fraction of components 1 (solvent) and 2. Equation (2) can also be written as x_2dlna_2 = - x_1dlna_1 ordlna_2 = - (x_1 / x_2)dlna_1 = - (x_1 / x_2) [(dx_1 / x_1) + {(2Ax_2dx_2) / R} + {(3Bx_2^2dx_2) / R}] = - (dx_1 / x_2) - {(2Ax_1dx_2) / R} - {(3Bx_1x_2dx_2) / R} Now x_1 + x_2 = 1.So dx_1 + dx_2 = 0, or dx_1 = - dx_2. After the appropriate substitutions, dlna_2 = (dx_2 / x_2) + {(2Ax_1dx_1) / R} + [{3Bx_1 (1 - x_1) dx_1} / R] (lna_2)(x)2_1 = (lnx_2)^(x)2_1 + (Ax_1^2 / R)^(x)1_0 + [(3B / R) {(x_1^2 / 2) - (x_1^3 / 3)}]^(x)1_0 Rlna_2 = Rlnx_2 + Ax_1^2 + B[(3/2)x_1^2 - x_1^3]", "ref_id": 4454, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "In a certain binary solution, the activity a_1 of component 1 is givenby the equation Rlna_1 = Rlnx_1 + Ax_22+ Bx_2^3 wherex_1 and x_2 are the respective mole fractions and A and Bareconstants. Derive an expression for the ac-tivity of component2 given that the equation is valid over the entire concentrationrange from pure liquid 1 to pure liquid 2.", "options": ["Rlna_2 = Rlnx_1 + Ax_1^2 + B[x_1^2 - x_1^3]", "Rlna_2 = Rlnx_2 + Ax_1^2 + B[x_1^2 - x_1^3]", "Rlna_2 = Rlnx_2 + Ax_1^2 + B[(3/2)x_1^2 - x_1^3]", "Rlna_2 = Rlnx_1 + Ax_1^2 + B[(3/2)x_1^2 - x_1^3]"], "answer": "C", "solution": "Rlna_1 = Rlnx_1 + Ax_2^2 + Bx_2^3 orlna_1 =lnx_1 + (Ax_2^2 / R) + (Bx_2^3 / R)(1) Differentiating equation (1) gives dlna 1 = (dx_1 / x_1) + [(2Ax_2dx_2) / R] + [(3Bx_2^2dx_2) / R] One form of the Gibbs-Duhemequation is given as x_1dlna_1 + x_2dlna_2 = 0(2) wherex_1 and x_2 denote the mole fraction of components 1 (solvent) and 2. Equation (2) can also be written as x_2dlna_2 = - x_1dlna_1 ordlna_2 = - (x_1 / x_2)dlna_1 = - (x_1 / x_2) [(dx_1 / x_1) + {(2Ax_2dx_2) / R} + {(3Bx_2^2dx_2) / R}] = - (dx_1 / x_2) - {(2Ax_1dx_2) / R} - {(3Bx_1x_2dx_2) / R} Now x_1 + x_2 = 1.So dx_1 + dx_2 = 0, or dx_1 = - dx_2. After the appropriate substitutions, dlna_2 = (dx_2 / x_2) + {(2Ax_1dx_1) / R} + [{3Bx_1 (1 - x_1) dx_1} / R] (lna_2)(x)2_1 = (lnx_2)^(x)2_1 + (Ax_1^2 / R)^(x)1_0 + [(3B / R) {(x_1^2 / 2) - (x_1^3 / 3)}]^(x)1_0 Rlna_2 = Rlnx_2 + Ax_1^2 + B[(3/2)x_1^2 - x_1^3]"}, "question": "task_1"}}, {"data": {"text": "Question:\nThe following data was obtained for the adsorption of aqueous acetic acid on charcoal. c_0,molarityof acetic acid in solution before addition to charcoal c_e ,molarityof acetic acid remaining in solution at equilibrium m, grams of charcoal 0.503 0.434 3.96 0.252 0.202 3.94 0.126 0.0899 4.00 0.0628 0.0347 4.12 0.0314 0.0113 4.04 0.0157 0.00333 4.00 Show that these data is in accordance with theFreundlich adsorption isotherm, x/m = kc^1/n_e where x = the number of grams of acetic acid adsorbed and k and n are constants. Estimate the constants k and n. In all cases the volume of the solution in contact with the charcoal was 200 ml.\n\nOptions:\nA. k = 0.28, n = 2.82\nB. k = 0.35, n = 2.90\nC.             k = 0.30, n = 2.85\nD. k = 0.22, n = 2.75\n\nAnswer: A\n\nReference Solution:\nAdsorption from solution does not in general appear to lead to layers more than one molecule thick. For many cases the experimental data can be fairly well represented by an empirical isotherm proposed by Freundich. x/m = kc^1/n_e .(1) Here, x and m are the masses of the substances adsorbed (adsorbate) and of the substances on which the adsorption takes place (adsorbent) respectively,c_eis the concentration of the solution at equili-brium and n is an empirical constant usually greater than unity.Freundlichequation then implies that if log x/m is plotted against logc_e, a straight line will be obtained with a slope of 1/n. Let x = number of gramsadsorbate(CH_3COOH) adsorbed = (c_0 -c_e)mole/liter] [0.200 liter] [60.0 g/mole]. From equation (1) log x/m = log k + 1/n logc_e c_0 c_e x x/m log(x/m) logc_e 0.503 0.434 0.828 0.209 -0.680 -0.362 0.252 0.202 0.600 0.152 -0.818 -0.695 0.126 0.0899 0.433 0.1083 -0.965 -1.046 0.0628 0.0347 0.337 0.0818 -1.087 -1.459 0.0314 0.0113 0.241 0.060 -1.222 -1.950 0.0157 0.00333 0.148 0.037 -1.430 -2.478 Plot log(x/m)vslogc_eto get a straight line. The intercept for c_e= 1(logc_e= 0) = log k. Therefore, log k = 9.448 - 10 = -0.552 and k = 0.28 , slope = 1/n = 0.355 and n = 2.82.", "ref_id": 4455, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "The following data was obtained for the adsorption of aqueous acetic acid on charcoal. c_0,molarityof acetic acid in solution before addition to charcoal c_e ,molarityof acetic acid remaining in solution at equilibrium m, grams of charcoal 0.503 0.434 3.96 0.252 0.202 3.94 0.126 0.0899 4.00 0.0628 0.0347 4.12 0.0314 0.0113 4.04 0.0157 0.00333 4.00 Show that these data is in accordance with theFreundlich adsorption isotherm, x/m = kc^1/n_e where x = the number of grams of acetic acid adsorbed and k and n are constants. Estimate the constants k and n. In all cases the volume of the solution in contact with the charcoal was 200 ml.", "options": ["k = 0.28, n = 2.82", "k = 0.35, n = 2.90", "k = 0.30, n = 2.85", "k = 0.22, n = 2.75"], "answer": "A", "solution": "Adsorption from solution does not in general appear to lead to layers more than one molecule thick. For many cases the experimental data can be fairly well represented by an empirical isotherm proposed by Freundich. x/m = kc^1/n_e .(1) Here, x and m are the masses of the substances adsorbed (adsorbate) and of the substances on which the adsorption takes place (adsorbent) respectively,c_eis the concentration of the solution at equili-brium and n is an empirical constant usually greater than unity.Freundlichequation then implies that if log x/m is plotted against logc_e, a straight line will be obtained with a slope of 1/n. Let x = number of gramsadsorbate(CH_3COOH) adsorbed = (c_0 -c_e)mole/liter] [0.200 liter] [60.0 g/mole]. From equation (1) log x/m = log k + 1/n logc_e c_0 c_e x x/m log(x/m) logc_e 0.503 0.434 0.828 0.209 -0.680 -0.362 0.252 0.202 0.600 0.152 -0.818 -0.695 0.126 0.0899 0.433 0.1083 -0.965 -1.046 0.0628 0.0347 0.337 0.0818 -1.087 -1.459 0.0314 0.0113 0.241 0.060 -1.222 -1.950 0.0157 0.00333 0.148 0.037 -1.430 -2.478 Plot log(x/m)vslogc_eto get a straight line. The intercept for c_e= 1(logc_e= 0) = log k. Therefore, log k = 9.448 - 10 = -0.552 and k = 0.28 , slope = 1/n = 0.355 and n = 2.82."}, "question": "task_1"}}, {"data": {"text": "Question:\nIn a reaction between sodiumthiosulfateand n-propyl bromide at 37\\textdegreeC, the amount ofunreactedthiosulfatewas measured by titration with I_2. Data for the I_2 titer in cm^3 of 0.02572 N iodine per 10.02 cm^3 sample of reaction mixture is given below. t(sec) 0 1110 2010 3192 5052 7380 11232 78840 I_2(titer) 37.63 35.20 33.63 31.90 29.80 28.04 26.01 22.24 Write a balanced equation for the reaction; show that the reaction is second order and determine the rate constant.\n\nOptions:\nA. 0.001657 l mole^-1 sec^-1\nB. 0.001643 l mole^-1 sec^-1\nC.             0.001618 l mole^-1 sec^-1\nD. 0.001640 l mole^-1 sec^-1\n\nAnswer: D\n\nReference Solution:\nThe reaction equation can be written as C_3H_7Br + S_2O^2-_3 \\rightarrow C_3H_7S_2O^-_3 + Br^- I_2 + 2S_2O^2-_3 \\rightarrow 2I^- + S_4O^2-_6 Let the initial concentrations at t = 0 be \"a\" mole cm^-3 of S_2O^2-_3 and \"b\" moles cm^-3 of C_3H_7Br Buta = [(I_2 consumed at t = 0) / (volume S_2O^2-_3)] = [{37.63 \u00d7 0.02572N \u00d7 (1 mole I_2 /eqtransferred)} / {10.02}] = 0.09659 M b = [(total S_2O^2-_3 consumed) / (Volume S_2O^2-_3)] = [{(37.63 - 22.24) 0.02572 M} / (10.02)] = 0.03950 M After a time t, x mole cm^-3 of S_2O^2-_3 and C_3H_7Br will have reacted forming x mole cm^-3 of C_3H_7S_2O^-_3 and of Br^-. Therefore, the concentration of S_2O^2-_3 at time t -(a - x) = [(0.02572 V_(I)2) / (10.02)] and the concentration of C_3H_7Br at time t -(b - x) = [{0.02572 (V_(I)2 - 22.24)} / (10.02)] and (a - b) = 0.05709 M The integrated second order rate law is [1 / (a - b)] In [{b(a - x)} / {a(b - x)}] = k_2t andk_2 = [1 / {t(a - b)}] In [{b(a - x)} / {a(b - x)}] = [1 / {(.05709M)t}] In [{(0.03950M)((.02572 V_(I)2 / (10.02))} / {(.09659M) ({0.2572(V_(I)2 - 22.24)} / (10.02))}] = [1 / {(.05709M)t}] In [{(0.03950) (V_(I)2)} / {(.09659M) (V_(I)2 - 22.24)}] The values of k_2 in liters mole^-1 sec^-1 evaluated at the different concentration levels are 0.001657, 0.001643, 0.001643, 0.001649, 0.001655, 0.001618 and 0.001618 respec-tively. This confirms that the reaction is second order because of the consistency of k values. The rate constant can be assumed to be an average of the above values of k_2. It is equal to .001640 l mole^-1 sec^-1.", "ref_id": 4456, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "In a reaction between sodiumthiosulfateand n-propyl bromide at 37\\textdegreeC, the amount ofunreactedthiosulfatewas measured by titration with I_2. Data for the I_2 titer in cm^3 of 0.02572 N iodine per 10.02 cm^3 sample of reaction mixture is given below. t(sec) 0 1110 2010 3192 5052 7380 11232 78840 I_2(titer) 37.63 35.20 33.63 31.90 29.80 28.04 26.01 22.24 Write a balanced equation for the reaction; show that the reaction is second order and determine the rate constant.", "options": ["0.001657 l mole^-1 sec^-1", "0.001643 l mole^-1 sec^-1", "0.001618 l mole^-1 sec^-1", "0.001640 l mole^-1 sec^-1"], "answer": "D", "solution": "The reaction equation can be written as C_3H_7Br + S_2O^2-_3 \\rightarrow C_3H_7S_2O^-_3 + Br^- I_2 + 2S_2O^2-_3 \\rightarrow 2I^- + S_4O^2-_6 Let the initial concentrations at t = 0 be \"a\" mole cm^-3 of S_2O^2-_3 and \"b\" moles cm^-3 of C_3H_7Br Buta = [(I_2 consumed at t = 0) / (volume S_2O^2-_3)] = [{37.63 \u00d7 0.02572N \u00d7 (1 mole I_2 /eqtransferred)} / {10.02}] = 0.09659 M b = [(total S_2O^2-_3 consumed) / (Volume S_2O^2-_3)] = [{(37.63 - 22.24) 0.02572 M} / (10.02)] = 0.03950 M After a time t, x mole cm^-3 of S_2O^2-_3 and C_3H_7Br will have reacted forming x mole cm^-3 of C_3H_7S_2O^-_3 and of Br^-. Therefore, the concentration of S_2O^2-_3 at time t -(a - x) = [(0.02572 V_(I)2) / (10.02)] and the concentration of C_3H_7Br at time t -(b - x) = [{0.02572 (V_(I)2 - 22.24)} / (10.02)] and (a - b) = 0.05709 M The integrated second order rate law is [1 / (a - b)] In [{b(a - x)} / {a(b - x)}] = k_2t andk_2 = [1 / {t(a - b)}] In [{b(a - x)} / {a(b - x)}] = [1 / {(.05709M)t}] In [{(0.03950M)((.02572 V_(I)2 / (10.02))} / {(.09659M) ({0.2572(V_(I)2 - 22.24)} / (10.02))}] = [1 / {(.05709M)t}] In [{(0.03950) (V_(I)2)} / {(.09659M) (V_(I)2 - 22.24)}] The values of k_2 in liters mole^-1 sec^-1 evaluated at the different concentration levels are 0.001657, 0.001643, 0.001643, 0.001649, 0.001655, 0.001618 and 0.001618 respec-tively. This confirms that the reaction is second order because of the consistency of k values. The rate constant can be assumed to be an average of the above values of k_2. It is equal to .001640 l mole^-1 sec^-1."}, "question": "task_1"}}, {"data": {"text": "Question:\nFor the following competing reactions NH_2 + N ^(k)a\\rightarrow H_2 + N_2; NH_2+N ^(k)b\\rightarrow 2NH; NH_2 + N ^(k)c\\rightarrow N_2H + H determine the products' ratio at time t by assuming that (k_a / k_b /k_c) = (.57 / .24 / .19).\n\nOptions:\nA. (.57 / .48 / .19)\nB. (.19 / .24 / .57)\nC.             (.57 / .24 / .48)\nD. (.57 / .24 / .19)\n\nAnswer: A\n\nReference Solution:\nThe respective rates of all the reactions are k_aC_N (H)2 C_N,k_bC_N_(H)2C_N andk_bC_N_(H)2C_N where k_a, k_b andk_c= rate constants C = concentration. The overall rate of the reactions is the sum of the three rates. Therefore, rate =k_aC_N_(H)2C_N +k_bC_N_(H)2C_N +k_cC_N_(H)2C_N = KC_N(H)2C_N K = k_a + k_b +k_c The given ratio of the rate constants implies that the products of the first reaction will be formed from 57% of the reactants. For the second reaction, 24% of the reactants will form the products of the second reaction and 19% of the reactants will form the products of the third reaction. Since the stoichiometry of the product of the second equa-tion is 2, the ratio of the products will be C_(N)2 = C_(H)2 / C_NH / C_N(H)2 =C_H (57% / 2) \u00d7 (24% / 19%) or(.57 / .48 / .19)", "ref_id": 4457, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "For the following competing reactions NH_2 + N ^(k)a\\rightarrow H_2 + N_2; NH_2+N ^(k)b\\rightarrow 2NH; NH_2 + N ^(k)c\\rightarrow N_2H + H determine the products' ratio at time t by assuming that (k_a / k_b /k_c) = (.57 / .24 / .19).", "options": ["(.57 / .48 / .19)", "(.19 / .24 / .57)", "(.57 / .24 / .48)", "(.57 / .24 / .19)"], "answer": "A", "solution": "The respective rates of all the reactions are k_aC_N (H)2 C_N,k_bC_N_(H)2C_N andk_bC_N_(H)2C_N where k_a, k_b andk_c= rate constants C = concentration. The overall rate of the reactions is the sum of the three rates. Therefore, rate =k_aC_N_(H)2C_N +k_bC_N_(H)2C_N +k_cC_N_(H)2C_N = KC_N(H)2C_N K = k_a + k_b +k_c The given ratio of the rate constants implies that the products of the first reaction will be formed from 57% of the reactants. For the second reaction, 24% of the reactants will form the products of the second reaction and 19% of the reactants will form the products of the third reaction. Since the stoichiometry of the product of the second equa-tion is 2, the ratio of the products will be C_(N)2 = C_(H)2 / C_NH / C_N(H)2 =C_H (57% / 2) \u00d7 (24% / 19%) or(.57 / .48 / .19)"}, "question": "task_1"}}, {"data": {"text": "Question:\nC_2H_6(Ethane) = H_2 + C_2H_4 (Ethylene) a) Derive the relationship between (dP/dt) and [(-dC_(C)2(H)6) / (dt)]. b) What are the units of k for a first-order reaction? c) Solve for the first-order integrated rate equation in terms of P(C)2 (H)6,0and P.\n\nOptions:\nA. length/time\nB. time\nC.             1/time\nD. 1/length\n\nAnswer: C\n\nReference Solution:\na) In a given reaction, the total pressure is the sum of the partial pressures. That is P = \\sumP_i whereP = total pressure P_i = partial pressure of componenti subscripti= the species, which are C_2H_6,H_2 and C_2H_4 in this problem. For this problem, P = P(C)2 (H)6+ P_(H)2 + P(C)2 (H)4 It is determined from the stoichiometry of the reaction that P_(H)2 = P(C)2 (H)4= P(C)2 (H)6,0- P(C)2 (H)6 where P_(C)2 (H)6,0 = partial pressure of C_2H_6 at time zero. \\thereforeP = P(C)2 (H)6+ 2(P_(C)2 (H)6,_0 - P(C)2 (H)6) Now P = P_(C)2 (H)6 + 2(P(C)2 (H)6,0- P(C)2 (H)6) = 2P_(C)2 (H)6,0 - P(C)2 (H)6(1) Therefore differentiating (1) yields (dP/dt) = - (dP(C)2 (H)6/dt) =kP(C)2 (H)6(2) butP(C)2 (H)6= k C(C)2 (H)6, so [dP_(C)2 (H)6 /dt] = k(dC(C)2 (H)6/dt), hence (dP/dt) = - (dP(C)2 (H)6/dt) = - k(dC(C)2 (H)6/dt) b) Observe that the units k are 1/time, where time is in sec-onds. c) From equation (2), (-dP(C)2 (H)6/dt) =kP(C)2 (H)6 \\therefore(dP/dt) =kP(C)2 (H)6= k(2P_(C)2 (H)6,0 - P) Rearranging and then integrating both sides, gives In [P_(C)2 (H)6,0 / (2P(C)2 (H)6,0- P)]=kt", "ref_id": 4458, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "C_2H_6(Ethane) = H_2 + C_2H_4 (Ethylene) a) Derive the relationship between (dP/dt) and [(-dC_(C)2(H)6) / (dt)]. b) What are the units of k for a first-order reaction? c) Solve for the first-order integrated rate equation in terms of P(C)2 (H)6,0and P.", "options": ["length/time", "time", "1/time", "1/length"], "answer": "C", "solution": "a) In a given reaction, the total pressure is the sum of the partial pressures. That is P = \\sumP_i whereP = total pressure P_i = partial pressure of componenti subscripti= the species, which are C_2H_6,H_2 and C_2H_4 in this problem. For this problem, P = P(C)2 (H)6+ P_(H)2 + P(C)2 (H)4 It is determined from the stoichiometry of the reaction that P_(H)2 = P(C)2 (H)4= P(C)2 (H)6,0- P(C)2 (H)6 where P_(C)2 (H)6,0 = partial pressure of C_2H_6 at time zero. \\thereforeP = P(C)2 (H)6+ 2(P_(C)2 (H)6,_0 - P(C)2 (H)6) Now P = P_(C)2 (H)6 + 2(P(C)2 (H)6,0- P(C)2 (H)6) = 2P_(C)2 (H)6,0 - P(C)2 (H)6(1) Therefore differentiating (1) yields (dP/dt) = - (dP(C)2 (H)6/dt) =kP(C)2 (H)6(2) butP(C)2 (H)6= k C(C)2 (H)6, so [dP_(C)2 (H)6 /dt] = k(dC(C)2 (H)6/dt), hence (dP/dt) = - (dP(C)2 (H)6/dt) = - k(dC(C)2 (H)6/dt) b) Observe that the units k are 1/time, where time is in sec-onds. c) From equation (2), (-dP(C)2 (H)6/dt) =kP(C)2 (H)6 \\therefore(dP/dt) =kP(C)2 (H)6= k(2P_(C)2 (H)6,0 - P) Rearranging and then integrating both sides, gives In [P_(C)2 (H)6,0 / (2P(C)2 (H)6,0- P)]=kt"}, "question": "task_1"}}, {"data": {"text": "Question:\nNH_4HS(s) = NH_3(g) + H_2S(g) 0.06 mole of solid NH_4HS are introduced into a 2.4 liter flask at 20\\textdegree C. (a) Calculate the per cent of the solid that will have decomposed into NH_3 and H_2S at equilibrium. (b)Calculate the number of moles of ammonia that would have to be added to the flask to reduce the decomposition of the solid to 1%.\n\nOptions:\nA. 35.6%, 0.777\nB. 38.5%, 0.867\nC.             40.5%, 0.895\nD. 37.33%, 0.833\n\nAnswer: D\n\nReference Solution:\na) From the reaction,K_p= P_(NH)3 P_(H)2(S)(1) where P_(NH)3 = partial pressure of NH_3 P_(H)2(s) = partial pressure of H_2S ButP_(NH)3 = P_(H)2(S) = P/2 at equilibrium. Therefore from (1) K_p= 0.05 = (P/2) (P/2) = (P^2/4) and P^2 = 0.20 from whichP = \\surd(0.20) = 0.447 atm. From PV =nRT, n = [(PV) / (RT)] = [{(0.447) (2.4)} / {(0.082) (293)}] = 0.0447 mole This represents the total moles. That is, n_(NH)3 + n_(H)2(S). Therefore, n_(NH)3 = n_(H)2(S) = [(0.0447) / 2] = 0.0224 Since we started with 0.06 mole of solid NH_4HS, we have (0.06 - 0.0224) mole of solid remaining. That is 0.06 - 0.0224 = 0.0376 mole The per cent of solid that will have decomposed is (0.0224 / 0.6) \u00d7 100 = 37.33% . b) If the decomposition is to be kept to 1%, the moles of H_2S present must be 0.0006, and P_(H)2(S) = 0.006. FromK_p, the pressure of NH_2 is then (0.05 / 0.006) or 8.33 atm. Therefore the moles of ammonia are n = [(PV) / (RT) = [{(8.33) (2.4)} / {(0.082) (293)}] = 0.833.", "ref_id": 4459, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "NH_4HS(s) = NH_3(g) + H_2S(g) 0.06 mole of solid NH_4HS are introduced into a 2.4 liter flask at 20\\textdegree C. (a) Calculate the per cent of the solid that will have decomposed into NH_3 and H_2S at equilibrium. (b)Calculate the number of moles of ammonia that would have to be added to the flask to reduce the decomposition of the solid to 1%.", "options": ["35.6%, 0.777", "38.5%, 0.867", "40.5%, 0.895", "37.33%, 0.833"], "answer": "D", "solution": "a) From the reaction,K_p= P_(NH)3 P_(H)2(S)(1) where P_(NH)3 = partial pressure of NH_3 P_(H)2(s) = partial pressure of H_2S ButP_(NH)3 = P_(H)2(S) = P/2 at equilibrium. Therefore from (1) K_p= 0.05 = (P/2) (P/2) = (P^2/4) and P^2 = 0.20 from whichP = \\surd(0.20) = 0.447 atm. From PV =nRT, n = [(PV) / (RT)] = [{(0.447) (2.4)} / {(0.082) (293)}] = 0.0447 mole This represents the total moles. That is, n_(NH)3 + n_(H)2(S). Therefore, n_(NH)3 = n_(H)2(S) = [(0.0447) / 2] = 0.0224 Since we started with 0.06 mole of solid NH_4HS, we have (0.06 - 0.0224) mole of solid remaining. That is 0.06 - 0.0224 = 0.0376 mole The per cent of solid that will have decomposed is (0.0224 / 0.6) \u00d7 100 = 37.33% . b) If the decomposition is to be kept to 1%, the moles of H_2S present must be 0.0006, and P_(H)2(S) = 0.006. FromK_p, the pressure of NH_2 is then (0.05 / 0.006) or 8.33 atm. Therefore the moles of ammonia are n = [(PV) / (RT) = [{(8.33) (2.4)} / {(0.082) (293)}] = 0.833."}, "question": "task_1"}}, {"data": {"text": "Question:\nGas a, liters^2-atm/mole b, liters/mole A 4.0 0.027 B 12.0 0.030 C 6.0 0.032 Which gas has (a) the highest critical temperature, (b) the largest molecular volume, and (c) most ideal general behavior around STP?\n\nOptions:\nA. (a) Gas C, (b) Gas A, (c) Gas B\nB. (a) Gas A, (b) Gas B, (c) Gas C\nC.             (a) Gas B, (b) Gas A, (c) Gas C\nD. (a) Gas B, (b) Gas C, (c) Gas A\n\nAnswer: D\n\nReference Solution:\nThe vanderWaals equation is [P + {(n^2a) / (V^2)}](V - nb nb ) =n ) =n RT whereP = pressure T = temperature V = volume n = number of moles. a and b are vanderWaals constants. (a) It is known thatT_c, the critical temperature is proportional to the ratio a/b. Computing the a/b ratios for the three gases yields: for gas A[(4.0) / (0.027)] = 148.15 for gas B[(12.0) / (0.030)] = 400 for gas C[(6.0) / (0.032) = 187.5 Since the ratio for gas B is the largest, gas B has the largestT_c. This question could have been answered by mere inspection. It can be seen that the constant b has almost the same value for the three gases. So, the larger a value means greater intermolecular forces. A largerT_cwould be needed to overcome them. Since gas B has the largest a value, itsT_cwill be the largest. (b) The constant b is proportional toV_c. Therefore gas C has the largest V_c . (c) The b values are almost the same. Therefore ideality will be determined by the a values. Looking at the original equation, it can be seen that it is near ideality for values of the constants close to zero. Since gas A has the smallest a value, it should be the most ideal in behavior. Remember that for ideality, the expression is PV =nRT.", "ref_id": 4460, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Gas a, liters^2-atm/mole b, liters/mole A 4.0 0.027 B 12.0 0.030 C 6.0 0.032 Which gas has (a) the highest critical temperature, (b) the largest molecular volume, and (c) most ideal general behavior around STP?", "options": ["(a) Gas C, (b) Gas A, (c) Gas B", "(a) Gas A, (b) Gas B, (c) Gas C", "(a) Gas B, (b) Gas A, (c) Gas C", "(a) Gas B, (b) Gas C, (c) Gas A"], "answer": "D", "solution": "The vanderWaals equation is [P + {(n^2a) / (V^2)}](V - nb nb ) =n ) =n RT whereP = pressure T = temperature V = volume n = number of moles. a and b are vanderWaals constants. (a) It is known thatT_c, the critical temperature is proportional to the ratio a/b. Computing the a/b ratios for the three gases yields: for gas A[(4.0) / (0.027)] = 148.15 for gas B[(12.0) / (0.030)] = 400 for gas C[(6.0) / (0.032) = 187.5 Since the ratio for gas B is the largest, gas B has the largestT_c. This question could have been answered by mere inspection. It can be seen that the constant b has almost the same value for the three gases. So, the larger a value means greater intermolecular forces. A largerT_cwould be needed to overcome them. Since gas B has the largest a value, itsT_cwill be the largest. (b) The constant b is proportional toV_c. Therefore gas C has the largest V_c . (c) The b values are almost the same. Therefore ideality will be determined by the a values. Looking at the original equation, it can be seen that it is near ideality for values of the constants close to zero. Since gas A has the smallest a value, it should be the most ideal in behavior. Remember that for ideality, the expression is PV =nRT."}, "question": "task_1"}}, {"data": {"text": "Question:\nDetermine the spacing of the planes (111) forCsBrwith CsBr with a = 7.28\\textdegreeA. a = 7.28\\textdegreeA.\n\nOptions:\nA. 1.732\\textdegreeA\nB. 4.20\\textdegreeA\nC.             7.28\\textdegreeA\nD. 53.00\\textdegreeA\n\nAnswer: B\n\nReference Solution:\nBy definition, (1 / d_hkl^2) = [(h^2 + k^2 + l^2) / a^2](1) where d = spacing hkl hkl = Miller indices (111 respectively in this case). Substituting the = Miller indices (111 respectively in this case). Substituting the respective values into (1), yields respective values into (1), yields (1 / d_111^2) = [(1^2 + 1^2 + 1^2) / (53.00\\textdegreeA)^2] = 93 / (53\\textdegreeA^2)] d_111^2 = [(53\\textdegreeA^2) / 3] d_111 = \\surd[(53\\textdegreeA^2) / 3] = [(7.28\\textdegreeA) / (1.732)] = 4.20\\textdegreeA Note that the general formula is Note that the general formula is (1 / d_hkl^2) = [(h^2 / a^2) + (k^2 / b^2) + (l^2 / c^2)] ; but in this problem, a = b = c.", "ref_id": 4461, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Determine the spacing of the planes (111) forCsBrwith CsBr with a = 7.28\\textdegreeA. a = 7.28\\textdegreeA.", "options": ["1.732\\textdegreeA", "4.20\\textdegreeA", "7.28\\textdegreeA", "53.00\\textdegreeA"], "answer": "B", "solution": "By definition, (1 / d_hkl^2) = [(h^2 + k^2 + l^2) / a^2](1) where d = spacing hkl hkl = Miller indices (111 respectively in this case). Substituting the = Miller indices (111 respectively in this case). Substituting the respective values into (1), yields respective values into (1), yields (1 / d_111^2) = [(1^2 + 1^2 + 1^2) / (53.00\\textdegreeA)^2] = 93 / (53\\textdegreeA^2)] d_111^2 = [(53\\textdegreeA^2) / 3] d_111 = \\surd[(53\\textdegreeA^2) / 3] = [(7.28\\textdegreeA) / (1.732)] = 4.20\\textdegreeA Note that the general formula is Note that the general formula is (1 / d_hkl^2) = [(h^2 / a^2) + (k^2 / b^2) + (l^2 / c^2)] ; but in this problem, a = b = c."}, "question": "task_1"}}, {"data": {"text": "Question:\nTwoequimolarsolutions A and B with equal volume of solutions are mixed together and the reaction A + B = C takes place. After 1 hr, A is 75% reacted. Calculate how much of A will not react after 2 hrs if a) the reaction is first order in A and zero order in B. b) the reaction is first order in both A and B and c) the reaction is zero order in both A and B.\n\nOptions:\nA. a) 5%, b) 15%, c) 25%\nB. a) 10%, b) 20%, c) 30%\nC.             a) 7.5%, b) 15%, c) 22.5%\nD. a) 6.26%, b) 14.3%, c) 0%\n\nAnswer: D\n\nReference Solution:\nFor a first order reaction the rate equation is written as - [{d(A)} /dt] = k(A) or- [{d(A)} / A] =kdt(1) Let (A)_1 = concentration of A at t = t_1 and (A)_2 = concentration of A at t = t_2 Integrating equation (1) using the above limits yields - ^(A)2\\int_(A)1 [{d(A)} / A] = k ^t(2)\\int_t(1)dt In [(A)_1 / (A)_2] = k(t_2 - t_1)(2) Assume that t_1 = 0 and that the initiated concentration of A = (A)_O, equation (2) becomes In [(A)_O / (A)] =kt. Taking exponents of both sides gives e^In[(A)O / (A)]=e^kt and [(A)_O / (A)] =e^kt Solving for (A) yields Taking In of both sides gives In(A) = In(A)_O e-kt = -kt+ In(A)_O or log(A) = [(-kt) / (2.303)] + log(A)_O(3) a)lnthis problem (A)_O = 100% and (A) = 25% when t = 1 hr. Therefore, solve equation (3) for k as follows Log 0.25 = [{- k(3600 sec)} / {2.303}] + log 1 - 0.602 = - 1563.18k sec + 0 and k = 3.85 \u00d7 10^-4 sec^-1 Now, use this value of k to solve equation (3) for (A) when t = 2 hrs. Therefore log A = [{(- 3.85 \u00d7 10-4sec^-1) (7200 sec)} / {2.303}] + 0 = - 1.2036 andA = 6.26 \u00d7 10^-2 = 6.26% b) Here use the second order equation to find k. The second order equation is written as kt= [1 / (A)] - [1 / (A)_O](4) k(3600 sec) = [1 / (0.25)] - 1 k = [3 / (3600 sec)] k = 8.33 \u00d7 10^-4sec^-1 Use this value of k to solve for A in equation (4). From equation (4), (8.33 \u00d7 10^-4sec^-1) (7200 sec) = [1 / (A)] - 1 (A) = 1.429 \u00d7 10^-1 = 14.3% c) The reaction continues at constant rate. Since 75% reacts in 1 hr., the reaction will be complete before 2 hrs. There-fore the answer to this section is 0%.", "ref_id": 4462, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Twoequimolarsolutions A and B with equal volume of solutions are mixed together and the reaction A + B = C takes place. After 1 hr, A is 75% reacted. Calculate how much of A will not react after 2 hrs if a) the reaction is first order in A and zero order in B. b) the reaction is first order in both A and B and c) the reaction is zero order in both A and B.", "options": ["a) 5%, b) 15%, c) 25%", "a) 10%, b) 20%, c) 30%", "a) 7.5%, b) 15%, c) 22.5%", "a) 6.26%, b) 14.3%, c) 0%"], "answer": "D", "solution": "For a first order reaction the rate equation is written as - [{d(A)} /dt] = k(A) or- [{d(A)} / A] =kdt(1) Let (A)_1 = concentration of A at t = t_1 and (A)_2 = concentration of A at t = t_2 Integrating equation (1) using the above limits yields - ^(A)2\\int_(A)1 [{d(A)} / A] = k ^t(2)\\int_t(1)dt In [(A)_1 / (A)_2] = k(t_2 - t_1)(2) Assume that t_1 = 0 and that the initiated concentration of A = (A)_O, equation (2) becomes In [(A)_O / (A)] =kt. Taking exponents of both sides gives e^In[(A)O / (A)]=e^kt and [(A)_O / (A)] =e^kt Solving for (A) yields Taking In of both sides gives In(A) = In(A)_O e-kt = -kt+ In(A)_O or log(A) = [(-kt) / (2.303)] + log(A)_O(3) a)lnthis problem (A)_O = 100% and (A) = 25% when t = 1 hr. Therefore, solve equation (3) for k as follows Log 0.25 = [{- k(3600 sec)} / {2.303}] + log 1 - 0.602 = - 1563.18k sec + 0 and k = 3.85 \u00d7 10^-4 sec^-1 Now, use this value of k to solve equation (3) for (A) when t = 2 hrs. Therefore log A = [{(- 3.85 \u00d7 10-4sec^-1) (7200 sec)} / {2.303}] + 0 = - 1.2036 andA = 6.26 \u00d7 10^-2 = 6.26% b) Here use the second order equation to find k. The second order equation is written as kt= [1 / (A)] - [1 / (A)_O](4) k(3600 sec) = [1 / (0.25)] - 1 k = [3 / (3600 sec)] k = 8.33 \u00d7 10^-4sec^-1 Use this value of k to solve for A in equation (4). From equation (4), (8.33 \u00d7 10^-4sec^-1) (7200 sec) = [1 / (A)] - 1 (A) = 1.429 \u00d7 10^-1 = 14.3% c) The reaction continues at constant rate. Since 75% reacts in 1 hr., the reaction will be complete before 2 hrs. There-fore the answer to this section is 0%."}, "question": "task_1"}}, {"data": {"text": "Question:\nWithout Catalyst(k), sec^-1 With Catalyst(k_c), sec^-1 T_1 = 473\\textdegreeK 1.76 \u00d7 10^-2 6.10 T_2 = 573\\textdegreeK 0.804 88.1 The reaction rate of a first-order reaction at a con-stant pressure of 1atmis shown in the table above. Cal-culate the value of H and S\\textdegree with and without catalyst, assuming that they do not change with temperature.\n\nOptions:\nA. H = 22.4 kcal/mole, 15.6 kcal/mole; S = 36.7eu, 35.2eu\nB. H = 19.6 kcal/mole, 13.4 kcal/mole; S = 34.9eu, 33.4eu\nC.             H = 18.2 kcal/mole, 12.8 kcal/mole; S = 33.3eu, 32.7eu\nD. H = 20.6 kcal/mole, 14.4 kcal/mole; S = 35.5eu, 34.0eu\n\nAnswer: D\n\nReference Solution:\nThe reaction rate theory as put forward by Arrhenius, gives the variation of the rate constant, k with temperature as represented by the expression [(d In k) /dt] = [H / RT^2](1) where H = the enthalpy increase per mole needed to raise the reactants to a state of activation. Integrating equa-tion (1) gives ^(k)2\\int_(k)1 d In k = (H/R) ^(T)2\\int_T(1) (dT/ T^2) Therefore, In (k_2 / k_1) = - (H/R) [(1 / T_2) - (1 / T_1)] orR In (k_2 / k_1) = - H [(1 / T_2) - (1 / T_1)](2) For theuncatalyzedreaction, equation (2) becomes 1.987 \u00d7 10^-3 (kcal/mole \\textdegreeK) In [(0.804) / (1.76 \u00d7 10^-2)] = - H[{1 / (573)} - {1 / (473)}] 1.987 \u00d7 10^-3 (kcal/mole \\textdegreeK) (3.82) = - H (- 3.689 \u00d7 10^-4 \\textdegreeK^-1) Hence, H = [{1.987 \u00d7 10^-3(kcal/mole \\textdegreeK) (3.82)} / {3.689 \u00d7 10^-4 \\textdegreeK^-1}] = 20.6 kcal/mole For the catalyzed reaction, equation (2) gives R In [(k_2)_c / (k_1)_c] = -H_c[(1 / T_2) - (1 / T_1)] The subscript c denotes catalyst. Thus1.987 \u00d7 10^-3 (kcal/mole\\textdegreeK) In [(88.1) / (6.10)] = - H (- 3.689 \u00d7 10^-4) 5.30 \u00d7 10^-3 (kcal/mole \\textdegreeK) = 3.689 \u00d7 10^-4 H. andH = [{5.30 \u00d7 10^-3 (kcal/mole \\textdegreeK)} / {3.689 \u00d7 10^-4 \\textdegreeK^-1}] = 14.4 kcal/mole The rate constant is given by k = e[{-(H-TS\\textdegree)} / RT] Taking theInof both sides gives In k = In e[{-(H-TS\\textdegree)} / RT]= [(- H + TS) / (RT)] orRT In k = - H + TS\\textdegree. Therefore S\\textdegree = R In k + (H/T)(3) For theuncatalysedreaction equation (3) becomes S\\textdegree = 1.987 In 1.76 \u00d7 10^-2 + [{20600 (cal/mole)} / {473 \\textdegreeK}] = - 8.027 + 43.551 = 35.5eu For thecatalysedreaction equation (3) gives S\\textdegree = 1.987 In 6.10 + [{14400 (cal/mole)} / {473 \\textdegreeK}] = 34.0eu", "ref_id": 4463, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Without Catalyst(k), sec^-1 With Catalyst(k_c), sec^-1 T_1 = 473\\textdegreeK 1.76 \u00d7 10^-2 6.10 T_2 = 573\\textdegreeK 0.804 88.1 The reaction rate of a first-order reaction at a con-stant pressure of 1atmis shown in the table above. Cal-culate the value of H and S\\textdegree with and without catalyst, assuming that they do not change with temperature.", "options": ["H = 22.4 kcal/mole, 15.6 kcal/mole; S = 36.7eu, 35.2eu", "H = 19.6 kcal/mole, 13.4 kcal/mole; S = 34.9eu, 33.4eu", "H = 18.2 kcal/mole, 12.8 kcal/mole; S = 33.3eu, 32.7eu", "H = 20.6 kcal/mole, 14.4 kcal/mole; S = 35.5eu, 34.0eu"], "answer": "D", "solution": "The reaction rate theory as put forward by Arrhenius, gives the variation of the rate constant, k with temperature as represented by the expression [(d In k) /dt] = [H / RT^2](1) where H = the enthalpy increase per mole needed to raise the reactants to a state of activation. Integrating equa-tion (1) gives ^(k)2\\int_(k)1 d In k = (H/R) ^(T)2\\int_T(1) (dT/ T^2) Therefore, In (k_2 / k_1) = - (H/R) [(1 / T_2) - (1 / T_1)] orR In (k_2 / k_1) = - H [(1 / T_2) - (1 / T_1)](2) For theuncatalyzedreaction, equation (2) becomes 1.987 \u00d7 10^-3 (kcal/mole \\textdegreeK) In [(0.804) / (1.76 \u00d7 10^-2)] = - H[{1 / (573)} - {1 / (473)}] 1.987 \u00d7 10^-3 (kcal/mole \\textdegreeK) (3.82) = - H (- 3.689 \u00d7 10^-4 \\textdegreeK^-1) Hence, H = [{1.987 \u00d7 10^-3(kcal/mole \\textdegreeK) (3.82)} / {3.689 \u00d7 10^-4 \\textdegreeK^-1}] = 20.6 kcal/mole For the catalyzed reaction, equation (2) gives R In [(k_2)_c / (k_1)_c] = -H_c[(1 / T_2) - (1 / T_1)] The subscript c denotes catalyst. Thus1.987 \u00d7 10^-3 (kcal/mole\\textdegreeK) In [(88.1) / (6.10)] = - H (- 3.689 \u00d7 10^-4) 5.30 \u00d7 10^-3 (kcal/mole \\textdegreeK) = 3.689 \u00d7 10^-4 H. andH = [{5.30 \u00d7 10^-3 (kcal/mole \\textdegreeK)} / {3.689 \u00d7 10^-4 \\textdegreeK^-1}] = 14.4 kcal/mole The rate constant is given by k = e[{-(H-TS\\textdegree)} / RT] Taking theInof both sides gives In k = In e[{-(H-TS\\textdegree)} / RT]= [(- H + TS) / (RT)] orRT In k = - H + TS\\textdegree. Therefore S\\textdegree = R In k + (H/T)(3) For theuncatalysedreaction equation (3) becomes S\\textdegree = 1.987 In 1.76 \u00d7 10^-2 + [{20600 (cal/mole)} / {473 \\textdegreeK}] = - 8.027 + 43.551 = 35.5eu For thecatalysedreaction equation (3) gives S\\textdegree = 1.987 In 6.10 + [{14400 (cal/mole)} / {473 \\textdegreeK}] = 34.0eu"}, "question": "task_1"}}, {"data": {"text": "Question:\nThe Gibbs adsorption coefficient \\cyrchar\\cyrpsi for anadsorbateon the surface of an adsorbent is related to the surface tension, \\gamma, and the activity of theadsorbate, a_2, the expression \\cyrchar\\cyrpsi = - (a_2 / RT) (d\\gamma/ da_2) = - (1 / RT) [d\\gamma/ {d(1n a_2)}] Will ammonium nitrate (NH_4NO_3) be positively or negatively adsorbed, as it raises the water's surface tension while it is added?\n\nOptions:\nA. adsorption is neutral\nB. positively adsorbed\nC.             negatively adsorbed\nD. no adsorption\n\nAnswer: C\n\nReference Solution:\nBe definition, if \\cyrchar\\cyrpsi is negative, then glycerol will be negatively adsorbed. Assuming that this is a dilute solution, the \\gamma term is essen-tially unity. Using the expression for the activity, a_i=\\gamma_ix_i, where \\gamma_i = activity coefficient for substancei. Then \\gamma_2 = 1, and a_2 = x_2. Thus the a_2 term can be approximated by x_2. Therefore, \\cyrchar\\cyrpsi = - (X_2 / RT) (d\\gamma/ dx_2)(1) wherea_2 = activity \\gamma = surface tension x_2 = mole fraction (or composition) R = universal gas constant T = temperature Since (d\\gamma/ dx_2) is positive, \\cyrchar\\cyrpsi will have a negative value. Conse-quently, ammonium nitrate will be negatively adsorbed.", "ref_id": 4464, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "The Gibbs adsorption coefficient \\cyrchar\\cyrpsi for anadsorbateon the surface of an adsorbent is related to the surface tension, \\gamma, and the activity of theadsorbate, a_2, the expression \\cyrchar\\cyrpsi = - (a_2 / RT) (d\\gamma/ da_2) = - (1 / RT) [d\\gamma/ {d(1n a_2)}] Will ammonium nitrate (NH_4NO_3) be positively or negatively adsorbed, as it raises the water's surface tension while it is added?", "options": ["adsorption is neutral", "positively adsorbed", "negatively adsorbed", "no adsorption"], "answer": "C", "solution": "Be definition, if \\cyrchar\\cyrpsi is negative, then glycerol will be negatively adsorbed. Assuming that this is a dilute solution, the \\gamma term is essen-tially unity. Using the expression for the activity, a_i=\\gamma_ix_i, where \\gamma_i = activity coefficient for substancei. Then \\gamma_2 = 1, and a_2 = x_2. Thus the a_2 term can be approximated by x_2. Therefore, \\cyrchar\\cyrpsi = - (X_2 / RT) (d\\gamma/ dx_2)(1) wherea_2 = activity \\gamma = surface tension x_2 = mole fraction (or composition) R = universal gas constant T = temperature Since (d\\gamma/ dx_2) is positive, \\cyrchar\\cyrpsi will have a negative value. Conse-quently, ammonium nitrate will be negatively adsorbed."}, "question": "task_1"}}, {"data": {"text": "Question:\n(a) Calculate the standard potential for the reaction Pb(s) + 2Ag^+ = 2Ag(s) + Pb^2+ given that the standard oxidation potential for the reactionPb= Pb^2+ + 2e^- is .126 and that for Ag = Ag^+ + e^- is -.7991. (b) The half reaction Fe = Fe^2+ + 2e^- has an oxidation potential of .440 and the half reaction Fe^2+ = Fe^3+ + e^- has an oxidation potential of - .771. Calculate the oxidation potential for the standard half cell Fe = Fe^3+ + 3e^- .\n\nOptions:\nA. .0713\nB. .0363\nC.             .0912\nD. .0564\n\nAnswer: B\n\nReference Solution:\n(a) The half reaction which has the greater oxidation potential gets oxidized while the half reaction with the smaller oxidation potential gets reduced. Hence, Pb(s) = Pb^2+ + 2e^-\\epsilon\\textdegree = .126 Ag^+ + e^- = Ag(s)\\epsilon\\textdegree = .7991 Note that the sign is reversed in the second reaction since it is now written as a reduction. Also the number of electrons transferred in the second reaction is not the same as the first reaction and so the second reaction must be multiplied by 2. Therefore, Pb(s) = Pb^2+ + 2e^-\\epsilon\\textdegree = .127 2Ag^+ + 2e^- = 2Ag(s)\\epsilon\\textdegree = .7991 Pb(s) + 2Ag^+ = Pb^2+ + 2Ag(s)\\epsilon\\textdegree = .9261 This is the desired equation. Note that the standard potential of the second reaction is not multiplied by 2. This occurs because the standard potentials are equivalent to a free energy change per equivalent of electrons transferred. Hence, all standard potentials are on the same basis and can simply be added. (b) This question is different from that in part (a). In part (a) there was an overall reaction (not a standard half reaction) which was simply the sum of the two standard half reactions. In this part, a standard half reaction is to be obtained from two other standard half reactions. Therefore, in this type of question the potentials must be weighted according to the number of electrons transferred. Hence, the net half cell will in effect be a weighted average. The following explanation should help clarify the above statements. First, the standard potentials can be changed to standard free energy changes by the equation \\DeltaG\\textdegree = -nF\\epsilon\\textdegree where n is the number of electrons transferred. Second, free energies are additive. Knowing this, the half reac-tions are written. Fe = Fe^2+ + 2e^-\\DeltaG_1\\textdegree = -2F (.440) Fe^2+ = Fe^3+ + e^-\\DeltaG_2\\textdegree = -1F (-.771) Fe = Fe^3+ + 3e^-\\DeltaG_1+2\\textdegree = -1F(-.771)-2F(.440) Now consider the standard half reaction Fe = Fe^3+ + 3e^- not as a sum of the two standard half reactions but by itself. Then its free energy change would be given by \\DeltaG\\textdegree = -3F\\epsilon\\textdegree. However, this is equivalent to \\DeltaG_1+2\\textdegree . Therefore, the equations are equated. This yields -3Fe\\textdegree = -(1) F(-.771) -2F(.440). Solving for \\epsilon\\textdegree gives \\epsilon\\textdegree = [{-(1) (F) (-.771) -2F(.440)} / (-3F)] = [{(-1) (-.771) -2(.440)} / (-3)] = [{- {(-. 771) (1) + 2(. 440)}} / (-3) ] = [{-.771(1) + 2(.440)} / (3)] = .0363", "ref_id": 4465, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "(a) Calculate the standard potential for the reaction Pb(s) + 2Ag^+ = 2Ag(s) + Pb^2+ given that the standard oxidation potential for the reactionPb= Pb^2+ + 2e^- is .126 and that for Ag = Ag^+ + e^- is -.7991. (b) The half reaction Fe = Fe^2+ + 2e^- has an oxidation potential of .440 and the half reaction Fe^2+ = Fe^3+ + e^- has an oxidation potential of - .771. Calculate the oxidation potential for the standard half cell Fe = Fe^3+ + 3e^- .", "options": [".0713", ".0363", ".0912", ".0564"], "answer": "B", "solution": "(a) The half reaction which has the greater oxidation potential gets oxidized while the half reaction with the smaller oxidation potential gets reduced. Hence, Pb(s) = Pb^2+ + 2e^-\\epsilon\\textdegree = .126 Ag^+ + e^- = Ag(s)\\epsilon\\textdegree = .7991 Note that the sign is reversed in the second reaction since it is now written as a reduction. Also the number of electrons transferred in the second reaction is not the same as the first reaction and so the second reaction must be multiplied by 2. Therefore, Pb(s) = Pb^2+ + 2e^-\\epsilon\\textdegree = .127 2Ag^+ + 2e^- = 2Ag(s)\\epsilon\\textdegree = .7991 Pb(s) + 2Ag^+ = Pb^2+ + 2Ag(s)\\epsilon\\textdegree = .9261 This is the desired equation. Note that the standard potential of the second reaction is not multiplied by 2. This occurs because the standard potentials are equivalent to a free energy change per equivalent of electrons transferred. Hence, all standard potentials are on the same basis and can simply be added. (b) This question is different from that in part (a). In part (a) there was an overall reaction (not a standard half reaction) which was simply the sum of the two standard half reactions. In this part, a standard half reaction is to be obtained from two other standard half reactions. Therefore, in this type of question the potentials must be weighted according to the number of electrons transferred. Hence, the net half cell will in effect be a weighted average. The following explanation should help clarify the above statements. First, the standard potentials can be changed to standard free energy changes by the equation \\DeltaG\\textdegree = -nF\\epsilon\\textdegree where n is the number of electrons transferred. Second, free energies are additive. Knowing this, the half reac-tions are written. Fe = Fe^2+ + 2e^-\\DeltaG_1\\textdegree = -2F (.440) Fe^2+ = Fe^3+ + e^-\\DeltaG_2\\textdegree = -1F (-.771) Fe = Fe^3+ + 3e^-\\DeltaG_1+2\\textdegree = -1F(-.771)-2F(.440) Now consider the standard half reaction Fe = Fe^3+ + 3e^- not as a sum of the two standard half reactions but by itself. Then its free energy change would be given by \\DeltaG\\textdegree = -3F\\epsilon\\textdegree. However, this is equivalent to \\DeltaG_1+2\\textdegree . Therefore, the equations are equated. This yields -3Fe\\textdegree = -(1) F(-.771) -2F(.440). Solving for \\epsilon\\textdegree gives \\epsilon\\textdegree = [{-(1) (F) (-.771) -2F(.440)} / (-3F)] = [{(-1) (-.771) -2(.440)} / (-3)] = [{- {(-. 771) (1) + 2(. 440)}} / (-3) ] = [{-.771(1) + 2(.440)} / (3)] = .0363"}, "question": "task_1"}}, {"data": {"text": "Question:\nThe acidic ionization constant of HF is 3.5 \u00d7 10^-4. The basic ionization constant of novacaine is 7 \u00d7 10^-6. A solution was prepared by dissolving 0.100 mole HF and 0.200 mole novocaine in 1000 g H_2O. (a) Write six equations in which the unknowns are the molalities of HF, novocaine (B), F^-, novocainium ion (BH^+), H^+, and OH^-. Assume that activities are equal to molalities. (b) By making suitable approximations (state what they are) solve these equations for the molalities of HF and H^+.\n\nOptions:\nA. m_HF = 2.45 \u00d7 10^5 mol kg^-1, m_H+ = 2.45 \u00d7 10^5 mol kg^-1\nB. m_HF = 4.1 \u00d7 10^-7 mol kg^-1, m_H+ = 1.4 \u00d7 10^-9 mol kg^-1\nC.             m_HF = 1.4 \u00d7 10^-9 mol kg^-1, m_H+ = 4.1 \u00d7 10^-7 mol kg^-1\nD. m_HF = 0.100 mol kg^-1, m_H+ = 0.100 mol kg^-1\n\nAnswer: B\n\nReference Solution:\na) The ions present are H^+, F^-, BH^+, OH^-. Their molalities can be obtained by first looking at the equilibrium processes, the charge balance and the material balance. These are: (i) Equilibrium: HF \\rightleftarrows H^+ + F^- for which K = 3.5 \u00d7 10^-4 = (m_H+ m_F-) / (m_HF)](1) B + H_2O \\rightleftarrows BH^+ + OH^- for which K = 7 \u00d7 10^-6 = [(m_BH+ m_OH-) / (m_B)](2) H_2O \\rightleftarrows H^+ + OH^- for which K = 1.00 \u00d7 10^-14 = m_H^+ m_OH-(3) (ii)Charge balance: m_H+ + m_BH+ = m_OH- + m_F-(4) (iii)Material balance: m_HF + m_F- = 0.100(5) m_B + m_BH+ = 0.200(6) In all of the above, m = molality, b) If it is assumed that m_H+ << m_BH+ and m_OH- << m_F-, then m_BH+ = m_F- . Let the value be x. Therefore, m_HF = 0.100 - x. Also m_B = 0.200 - x. Multiplying equation (1) by equation (2) gives [(m_BH+ m_F-) / (m_HFm_B)] = 2.45 \u00d7 10^5. (Note that the m_H+ m_OH- term was replaced by K = 1.00 \u00d7 10^-14.) or[(x^2) / {(0.100 - x) ( 0.200 - x)}] = 2.45 \u00d7 10^5(7) Since it's tedious to solve equation (7) directly, let y = 0.100 - x \\therefore x = 0.100 - y and 0.200 - x = 0.100 + y from which 2.45 \u00d7 10^5 = [(0.100 - y)^2 / {y(0.100 + y)}] Further approximations can be made if y is assumed to be much less than 0.100. That is, assume y << 0.100; then 2.45 \u00d7 10^5 = [(0.100) / (0.0100V)](8) Solving equation (8) for y gives y =[(0.100) / (2.45 \u00d7 10^5 \u00d7 0.100)] = 4.1 \u00d7 10^-7 mol kg^-1 But m_HF = 0.100 - x = y = 4.1 \u00d7 10^-7 mol kg^-1 Therefore m_F- = 0.100 - y = 0.100 mol kg^-1 and m_H+ = 3.5 \u00d7 10^-4 \u00d7 [(m_HF) / (m_F-)] = [(3.5 \u00d7 10^-4 \u00d7 4.1 \u00d7 10^-7) / (0.100)] = 1.4 \u00d7 10^-9 mol kg^-1", "ref_id": 4466, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "The acidic ionization constant of HF is 3.5 \u00d7 10^-4. The basic ionization constant of novacaine is 7 \u00d7 10^-6. A solution was prepared by dissolving 0.100 mole HF and 0.200 mole novocaine in 1000 g H_2O. (a) Write six equations in which the unknowns are the molalities of HF, novocaine (B), F^-, novocainium ion (BH^+), H^+, and OH^-. Assume that activities are equal to molalities. (b) By making suitable approximations (state what they are) solve these equations for the molalities of HF and H^+.", "options": ["m_HF = 2.45 \u00d7 10^5 mol kg^-1, m_H+ = 2.45 \u00d7 10^5 mol kg^-1", "m_HF = 4.1 \u00d7 10^-7 mol kg^-1, m_H+ = 1.4 \u00d7 10^-9 mol kg^-1", "m_HF = 1.4 \u00d7 10^-9 mol kg^-1, m_H+ = 4.1 \u00d7 10^-7 mol kg^-1", "m_HF = 0.100 mol kg^-1, m_H+ = 0.100 mol kg^-1"], "answer": "B", "solution": "a) The ions present are H^+, F^-, BH^+, OH^-. Their molalities can be obtained by first looking at the equilibrium processes, the charge balance and the material balance. These are: (i) Equilibrium: HF \\rightleftarrows H^+ + F^- for which K = 3.5 \u00d7 10^-4 = (m_H+ m_F-) / (m_HF)](1) B + H_2O \\rightleftarrows BH^+ + OH^- for which K = 7 \u00d7 10^-6 = [(m_BH+ m_OH-) / (m_B)](2) H_2O \\rightleftarrows H^+ + OH^- for which K = 1.00 \u00d7 10^-14 = m_H^+ m_OH-(3) (ii)Charge balance: m_H+ + m_BH+ = m_OH- + m_F-(4) (iii)Material balance: m_HF + m_F- = 0.100(5) m_B + m_BH+ = 0.200(6) In all of the above, m = molality, b) If it is assumed that m_H+ << m_BH+ and m_OH- << m_F-, then m_BH+ = m_F- . Let the value be x. Therefore, m_HF = 0.100 - x. Also m_B = 0.200 - x. Multiplying equation (1) by equation (2) gives [(m_BH+ m_F-) / (m_HFm_B)] = 2.45 \u00d7 10^5. (Note that the m_H+ m_OH- term was replaced by K = 1.00 \u00d7 10^-14.) or[(x^2) / {(0.100 - x) ( 0.200 - x)}] = 2.45 \u00d7 10^5(7) Since it's tedious to solve equation (7) directly, let y = 0.100 - x \\therefore x = 0.100 - y and 0.200 - x = 0.100 + y from which 2.45 \u00d7 10^5 = [(0.100 - y)^2 / {y(0.100 + y)}] Further approximations can be made if y is assumed to be much less than 0.100. That is, assume y << 0.100; then 2.45 \u00d7 10^5 = [(0.100) / (0.0100V)](8) Solving equation (8) for y gives y =[(0.100) / (2.45 \u00d7 10^5 \u00d7 0.100)] = 4.1 \u00d7 10^-7 mol kg^-1 But m_HF = 0.100 - x = y = 4.1 \u00d7 10^-7 mol kg^-1 Therefore m_F- = 0.100 - y = 0.100 mol kg^-1 and m_H+ = 3.5 \u00d7 10^-4 \u00d7 [(m_HF) / (m_F-)] = [(3.5 \u00d7 10^-4 \u00d7 4.1 \u00d7 10^-7) / (0.100)] = 1.4 \u00d7 10^-9 mol kg^-1"}, "question": "task_1"}}, {"data": {"text": "Question:\nCarbon dioxide is assumed to follow the equation of state [P + {(n) / (V^2T^(1/2))}] (v - m) = RT(1) where n and m are constants for any gas. Given that the critical pressure and temperature of carbon dioxide are 72.9 atmand 304.2\\textdegreeK respectively, determine the compressibility factor of the gas at 100\\textdegreeC and at a volume of 6.948 cubic decimeters per kilogram.\n\nOptions:\nA. 0.915\nB. 0.815\nC.             0.715\nD. 0.8155\n\nAnswer: B\n\nReference Solution:\n[P + {(n) / (V^2T^(1/2))}] (V - m) = RT solving for P gives P = [(RT) / (V - m)] - [(n) / (V^2T^(1/2))](2) Differentiate equation (2) twice with respect to V at constant T and set them equal to zero because at the critical point [(\\partialP) / (\\partialV)]_T = [(\\partial^2P) / (\\partialV^2)]_T = 0 Therefore at the critical point [(\\partialP) / (\\partialV)]_T = [(RT_c) / (V_c- m)^2] + 2[(n) / (V^3_c T^(1/2)_c)] = 0(3) [(\\partial^2P) / (\\partialV^2)]_T = [(2RT_c) / (V_c- m)^3] - 6 [(n) / (V^4_c T^(1/2)_c)] = 0(4) Equation (3) can also be written as [(RT_c) / (V_c- m)^2] = [(n) / (T^(1/2)_c)] [(2) / (V^3_c)](5) and equation (4) as [(RT_c) / (V_c- m)^3] = [(n) / (T^(1/2)_c)] [(3) / (V^4_c)](6) Divide equation (5) by equation (6) to get V_c- m = (2/3)V_c from whichm = (1/3)V_c whereV_cis the critical volume. Substitute the value of m into equation (5) and solve for n [(RT_c) / (V^2_c - 2mV_c + m^2)] = [(n) / (T^(1/2)_c)] [(2) / V^3_c)] or n = [(RT^3/2_c V^3_c) / {2V^2_c - (4/3)V^2 + (2/9)V^2}] = [(RT^3/2_c V^3_c) / {V^2_c (2 - (4/3) + (2/9))}] = [(RT^3/2_c V^3_c) / {V^2_c (8/9)}] = [(9RT^3/2_cV_c) / (8)](7) Equation (2) becomes at the critical point P_c = [(RT_c) / (V_c- m)] - [(n) / (V^2_c T^(1/2)_c)] where P_c is the critical pressure P_c = [(RT_c) / (V_c- m)] - [(9/8 RT^3/2V_c) / (V^2_c T^(1/2)_c)] = (3/2) [(RT_c) / (V_c)] - (9/8) [(RT_c) / (V_c)] = (3/8) [(RT_c) / (V_c)] or [(P_cV_c) / (RT_c)] = (3/8)(8) CO_2 has a molecular weight of 44 g mol^-1 V = [6.948 {(dm)^3 / (kg)}] [(10^3cm^3) / (dm^3)] [(0.044 kg) / (mol)] = 3.057 \u00d7 10^2 cm^3/mol. From equation (8) V_c= (3/8) [(RT_c) / (P_c)] = (3/8) \u00d7 [{(82.05cm^3atm/\\textdegreeK^-1 mol^-1)(304.2\\textdegreeK)} / (72.9atm)] = 128.3 cm^3 mol^-1 Remember thatm =V_c/ 3 = [(128.3 cm^3 mol^-1) / (3)] = 42.79 cm^3 mol^-1. From equation (7) n = [{(9)(82.05 cm^3 atm\\textdegreeK^-1 mol^-1) (304.2\\textdegreeK)^3/2 (128.3 cm^3 mol^-1)} / 8] = 6.28 \u00d7 10^7 [(cm^6atmK^(1/2)) / (mol^2)] Solving for P using equation (2) gives P = [{(82.05 cm^3atm K^-1mol^-1) (373\\textdegreeK)} / {(3.057 \u00d7 10^2cm^3/mol) - (42.79 cm^3/mol)}] - [(6.28 \u00d7 10^7cm^6atm K^1/2/mol^2) / {(3.057 \u00d7 10^2cm^3/mol)^2 (373\\textdegreeK)^(1/2)}] = 81.57atm. By definition the compressibility factor Z is given as Z = [(PV) / (RT)] = [{(81.57atm) (3.057 \u00d7 10^2 cm^3/mol)} / {(82.05 cm^3 atm\\textdegreeK^-1mol^-1)(373\\textdegreeK)}] = 0.815.", "ref_id": 4467, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Carbon dioxide is assumed to follow the equation of state [P + {(n) / (V^2T^(1/2))}] (v - m) = RT(1) where n and m are constants for any gas. Given that the critical pressure and temperature of carbon dioxide are 72.9 atmand 304.2\\textdegreeK respectively, determine the compressibility factor of the gas at 100\\textdegreeC and at a volume of 6.948 cubic decimeters per kilogram.", "options": ["0.915", "0.815", "0.715", "0.8155"], "answer": "B", "solution": "[P + {(n) / (V^2T^(1/2))}] (V - m) = RT solving for P gives P = [(RT) / (V - m)] - [(n) / (V^2T^(1/2))](2) Differentiate equation (2) twice with respect to V at constant T and set them equal to zero because at the critical point [(\\partialP) / (\\partialV)]_T = [(\\partial^2P) / (\\partialV^2)]_T = 0 Therefore at the critical point [(\\partialP) / (\\partialV)]_T = [(RT_c) / (V_c- m)^2] + 2[(n) / (V^3_c T^(1/2)_c)] = 0(3) [(\\partial^2P) / (\\partialV^2)]_T = [(2RT_c) / (V_c- m)^3] - 6 [(n) / (V^4_c T^(1/2)_c)] = 0(4) Equation (3) can also be written as [(RT_c) / (V_c- m)^2] = [(n) / (T^(1/2)_c)] [(2) / (V^3_c)](5) and equation (4) as [(RT_c) / (V_c- m)^3] = [(n) / (T^(1/2)_c)] [(3) / (V^4_c)](6) Divide equation (5) by equation (6) to get V_c- m = (2/3)V_c from whichm = (1/3)V_c whereV_cis the critical volume. Substitute the value of m into equation (5) and solve for n [(RT_c) / (V^2_c - 2mV_c + m^2)] = [(n) / (T^(1/2)_c)] [(2) / V^3_c)] or n = [(RT^3/2_c V^3_c) / {2V^2_c - (4/3)V^2 + (2/9)V^2}] = [(RT^3/2_c V^3_c) / {V^2_c (2 - (4/3) + (2/9))}] = [(RT^3/2_c V^3_c) / {V^2_c (8/9)}] = [(9RT^3/2_cV_c) / (8)](7) Equation (2) becomes at the critical point P_c = [(RT_c) / (V_c- m)] - [(n) / (V^2_c T^(1/2)_c)] where P_c is the critical pressure P_c = [(RT_c) / (V_c- m)] - [(9/8 RT^3/2V_c) / (V^2_c T^(1/2)_c)] = (3/2) [(RT_c) / (V_c)] - (9/8) [(RT_c) / (V_c)] = (3/8) [(RT_c) / (V_c)] or [(P_cV_c) / (RT_c)] = (3/8)(8) CO_2 has a molecular weight of 44 g mol^-1 V = [6.948 {(dm)^3 / (kg)}] [(10^3cm^3) / (dm^3)] [(0.044 kg) / (mol)] = 3.057 \u00d7 10^2 cm^3/mol. From equation (8) V_c= (3/8) [(RT_c) / (P_c)] = (3/8) \u00d7 [{(82.05cm^3atm/\\textdegreeK^-1 mol^-1)(304.2\\textdegreeK)} / (72.9atm)] = 128.3 cm^3 mol^-1 Remember thatm =V_c/ 3 = [(128.3 cm^3 mol^-1) / (3)] = 42.79 cm^3 mol^-1. From equation (7) n = [{(9)(82.05 cm^3 atm\\textdegreeK^-1 mol^-1) (304.2\\textdegreeK)^3/2 (128.3 cm^3 mol^-1)} / 8] = 6.28 \u00d7 10^7 [(cm^6atmK^(1/2)) / (mol^2)] Solving for P using equation (2) gives P = [{(82.05 cm^3atm K^-1mol^-1) (373\\textdegreeK)} / {(3.057 \u00d7 10^2cm^3/mol) - (42.79 cm^3/mol)}] - [(6.28 \u00d7 10^7cm^6atm K^1/2/mol^2) / {(3.057 \u00d7 10^2cm^3/mol)^2 (373\\textdegreeK)^(1/2)}] = 81.57atm. By definition the compressibility factor Z is given as Z = [(PV) / (RT)] = [{(81.57atm) (3.057 \u00d7 10^2 cm^3/mol)} / {(82.05 cm^3 atm\\textdegreeK^-1mol^-1)(373\\textdegreeK)}] = 0.815."}, "question": "task_1"}}, {"data": {"text": "Question:\nAtoms of argon gas are being adsorbed onto a uniform surface of a certain crystal and the adsorbed atoms are freely mobile. Calcu-late a) the adsorption coefficient using the Langmuir adsorption isotherm by treating the adsorbed phase as a two-dimensional gas. b) \\texttheta (P, T) for P = 1atm, T = 200\\textdegreeK, and \\mu\\textdegree = 0.35eV.\n\nOptions:\nA. 8.51 \u00d7 10^6A\nB. 8.51 \u00d7 10^5A\nC.             8.51 \u00d7 10^4A\nD. 8.51 \u00d7 10^3A\n\nAnswer: B\n\nReference Solution:\nAdsorption equilibrium is treated as a dynamic state in which the rate of adsorption is equal to the rate of desorption. The rate of adsorption is proportional to the surface collision frequency of gaseousadsorbateon bare sites. This is also propor-tional to the pressure P. The rate of adsorption = k_2 P S_0 = k_2 P(S - S_1) where S = the total number of sites available, S_1 = the number of sites occupied by adsorption and S_0 = S - S_1 = the number of sites available. The rate of desorption = k_1 S_1 The two rates are set equal, k_1 s_1 = k_2 P (S - S_1) Solving for (S_1/S) we obtain: S_1 = [{k_2P(S - S_1)} / k_1} = (k_2 / k_1)PS - (k_2 / k_1)PS_1 S_1 + (k_2 / k_1)PS_1 = (k_2 / k_1)PS S_1 {1 + (k_2 / k_1)P} = (k_2 / k_1)PS to simplify let b = (k_2 / k_1) S_1 (1 +bP) =bPS (S_1 / S)(1 +bP) =bP (S_1 / S) = { (bP) / (1 +bP)} let the ratio (S_1 / S) = Q. This equals the fraction of the surface sites covered by adsorbed molecules. P is the pressure. b(T) is the adsorption coefficient. \\texttheta = [{b(T)p } / {1 + b(T)P}] This equation relates the amount of gas adsorbed on a surface to the pressure of the gas at constant temperature and is called the adsorption isotherm. b(T) can be written in statistical mechanic terms as follows: b(T) = Q(T)e\\mu\\textdegree/kT Q = the partition function. \\mu = the heat of adsorption. (This is the energy that theadsorbatemust gain if it is todesorb.) From its nature \\mu must be a positive number and so pressure will in-crease with temperature. For a mobile two-dimensional gas, there is free translational motion in thexyplane of the crystal surface and with a vibration of magnitude of 5 \u00d7 10^12 sec^-1 perpendicular to the surface. The partition function of the argon gas is given by Q(T) = (Q_x,transQ_y,transQ_z.vib)e\\mu\\textdegree/kT whereQ_x,trans,Q_y,trans= the translational partition function in the x- and y- plane respectively.Q_z,vibisvibrationalparti-tion function in the z-plane. Q_x,trans_. =Q_y,trans_. = [{(2\\pimkT)^1/2a} / h](4) where h = Planck's constant. For two degrees of translational freedom, equation (4) is squared, and since a^2 = area, A, equation (4) changes to Q_x,trans_.Q_y,trans_. = [(2\\pimkTA) / h^2]. A is in m^2. \\thereforeQ_trans_. = [{2\\pi(40 \u00d7 10^-3kg) (1.3805 \u00d7 10^-23J\\textdegreeK^-1) (200\\textdegreeK) (A)} / {(6.022 \u00d7 10^23 mole^-1) (6.62 \u00d7 10^-34J-sec)^2}] = 2.629 \u00d7 10^21A . Q_z,vib_. = [(e-h\u0475/2Kt) / (1 - e-h\u0475/kT)] = [(e^h\u0475^/2Kt) / (e^h\u0475/kT- 1)] h\u0475/2kT= [{(6.62 \u00d7 10^-34J-sec)(5 \u00d7 10^12 sec^-1)} / {2(1.3805 \u00d7 10^-23J\\textdegreeK^-1) (200\\textdegreeK)}] = 0.60. Therefore Q_z,vib_. = [(e^0.60) / (e^1.20 - 1)] = 0.785 (\\Delta\\epsilon_0 /kT) = [{(0.35eV) (1.602 \u00d7 10^-19J/eV)} / {(1.3805 \u00d7 10^-23J\\textdegreeK^-1) (200\\textdegreeK)}] = 20.31. Thuse[(-\\Delta\\epsilon)0 /kT]= e^-20.31 = 1.515 \u00d7 10^-9 . From equation (3), Q(T) = (2.629 \u00d7 10^21A) (0.785) (1.515 \u00d7 10^-9) = 3.13 \u00d7 10^12 A (\\mu^0/kT) = [{-kTln[{(2\\pimkT) / (h^2)}^3/2 (RT / LP)]} /kT] where L = Avogadro's number and P is the pressure. Simplification of the above equation yields (\\mu^0/kT) = -ln[{(2\\pimkT) / (h^2)}^3/2 (RT / LP)] = -ln{ [{2\\pi(40 \u00d7 10^-3kg mole^-1)(1.3805 \u00d7 10^-23 J\\textdegreeK^-1)(200\\textdegreeK)} / {(6.022 \u00d7 10^23 mole^-1)(6.62 \u00d7 10^-34 J-s)^2}]^3/2 [{(0.082 \u00d7 10^-3 m^3 atm\\textdegreeK^-1 mol^-1)(200\\textdegreeK)} / {(6.022 \u00d7 10^23 mol^-1)(1atm)}] } = -ln[(1.35 \u00d7 10^32) (2.72 \u00d7 10^-26)] = -ln(3.672 \u00d7 10^6) = -15.12 E[(\\mu)0/kT]= e^-15.12 = 2.72 \u00d7 10^-7. From equation (2) the adsorption coefficient is b(T)= Q(T)e[(\\mu)0/kT] = (3.13 \u00d7 10^12A) (2.72 \u00d7 10^-7) = 8.51 \u00d7 10^5A where A = the area of the surface in m^2 . b) The fraction of occupied sites on the surface of the crystal, \\texttheta, is given by equation (1). Therefore, \\texttheta = [{(8.51 \u00d7 10^5A)(1atm)} / {1 + 8.51 \u00d7 10^5A}].", "ref_id": 4468, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Atoms of argon gas are being adsorbed onto a uniform surface of a certain crystal and the adsorbed atoms are freely mobile. Calcu-late a) the adsorption coefficient using the Langmuir adsorption isotherm by treating the adsorbed phase as a two-dimensional gas. b) \\texttheta (P, T) for P = 1atm, T = 200\\textdegreeK, and \\mu\\textdegree = 0.35eV.", "options": ["8.51 \u00d7 10^6A", "8.51 \u00d7 10^5A", "8.51 \u00d7 10^4A", "8.51 \u00d7 10^3A"], "answer": "B", "solution": "Adsorption equilibrium is treated as a dynamic state in which the rate of adsorption is equal to the rate of desorption. The rate of adsorption is proportional to the surface collision frequency of gaseousadsorbateon bare sites. This is also propor-tional to the pressure P. The rate of adsorption = k_2 P S_0 = k_2 P(S - S_1) where S = the total number of sites available, S_1 = the number of sites occupied by adsorption and S_0 = S - S_1 = the number of sites available. The rate of desorption = k_1 S_1 The two rates are set equal, k_1 s_1 = k_2 P (S - S_1) Solving for (S_1/S) we obtain: S_1 = [{k_2P(S - S_1)} / k_1} = (k_2 / k_1)PS - (k_2 / k_1)PS_1 S_1 + (k_2 / k_1)PS_1 = (k_2 / k_1)PS S_1 {1 + (k_2 / k_1)P} = (k_2 / k_1)PS to simplify let b = (k_2 / k_1) S_1 (1 +bP) =bPS (S_1 / S)(1 +bP) =bP (S_1 / S) = { (bP) / (1 +bP)} let the ratio (S_1 / S) = Q. This equals the fraction of the surface sites covered by adsorbed molecules. P is the pressure. b(T) is the adsorption coefficient. \\texttheta = [{b(T)p } / {1 + b(T)P}] This equation relates the amount of gas adsorbed on a surface to the pressure of the gas at constant temperature and is called the adsorption isotherm. b(T) can be written in statistical mechanic terms as follows: b(T) = Q(T)e\\mu\\textdegree/kT Q = the partition function. \\mu = the heat of adsorption. (This is the energy that theadsorbatemust gain if it is todesorb.) From its nature \\mu must be a positive number and so pressure will in-crease with temperature. For a mobile two-dimensional gas, there is free translational motion in thexyplane of the crystal surface and with a vibration of magnitude of 5 \u00d7 10^12 sec^-1 perpendicular to the surface. The partition function of the argon gas is given by Q(T) = (Q_x,transQ_y,transQ_z.vib)e\\mu\\textdegree/kT whereQ_x,trans,Q_y,trans= the translational partition function in the x- and y- plane respectively.Q_z,vibisvibrationalparti-tion function in the z-plane. Q_x,trans_. =Q_y,trans_. = [{(2\\pimkT)^1/2a} / h](4) where h = Planck's constant. For two degrees of translational freedom, equation (4) is squared, and since a^2 = area, A, equation (4) changes to Q_x,trans_.Q_y,trans_. = [(2\\pimkTA) / h^2]. A is in m^2. \\thereforeQ_trans_. = [{2\\pi(40 \u00d7 10^-3kg) (1.3805 \u00d7 10^-23J\\textdegreeK^-1) (200\\textdegreeK) (A)} / {(6.022 \u00d7 10^23 mole^-1) (6.62 \u00d7 10^-34J-sec)^2}] = 2.629 \u00d7 10^21A . Q_z,vib_. = [(e-h\u0475/2Kt) / (1 - e-h\u0475/kT)] = [(e^h\u0475^/2Kt) / (e^h\u0475/kT- 1)] h\u0475/2kT= [{(6.62 \u00d7 10^-34J-sec)(5 \u00d7 10^12 sec^-1)} / {2(1.3805 \u00d7 10^-23J\\textdegreeK^-1) (200\\textdegreeK)}] = 0.60. Therefore Q_z,vib_. = [(e^0.60) / (e^1.20 - 1)] = 0.785 (\\Delta\\epsilon_0 /kT) = [{(0.35eV) (1.602 \u00d7 10^-19J/eV)} / {(1.3805 \u00d7 10^-23J\\textdegreeK^-1) (200\\textdegreeK)}] = 20.31. Thuse[(-\\Delta\\epsilon)0 /kT]= e^-20.31 = 1.515 \u00d7 10^-9 . From equation (3), Q(T) = (2.629 \u00d7 10^21A) (0.785) (1.515 \u00d7 10^-9) = 3.13 \u00d7 10^12 A (\\mu^0/kT) = [{-kTln[{(2\\pimkT) / (h^2)}^3/2 (RT / LP)]} /kT] where L = Avogadro's number and P is the pressure. Simplification of the above equation yields (\\mu^0/kT) = -ln[{(2\\pimkT) / (h^2)}^3/2 (RT / LP)] = -ln{ [{2\\pi(40 \u00d7 10^-3kg mole^-1)(1.3805 \u00d7 10^-23 J\\textdegreeK^-1)(200\\textdegreeK)} / {(6.022 \u00d7 10^23 mole^-1)(6.62 \u00d7 10^-34 J-s)^2}]^3/2 [{(0.082 \u00d7 10^-3 m^3 atm\\textdegreeK^-1 mol^-1)(200\\textdegreeK)} / {(6.022 \u00d7 10^23 mol^-1)(1atm)}] } = -ln[(1.35 \u00d7 10^32) (2.72 \u00d7 10^-26)] = -ln(3.672 \u00d7 10^6) = -15.12 E[(\\mu)0/kT]= e^-15.12 = 2.72 \u00d7 10^-7. From equation (2) the adsorption coefficient is b(T)= Q(T)e[(\\mu)0/kT] = (3.13 \u00d7 10^12A) (2.72 \u00d7 10^-7) = 8.51 \u00d7 10^5A where A = the area of the surface in m^2 . b) The fraction of occupied sites on the surface of the crystal, \\texttheta, is given by equation (1). Therefore, \\texttheta = [{(8.51 \u00d7 10^5A)(1atm)} / {1 + 8.51 \u00d7 10^5A}]."}, "question": "task_1"}}, {"data": {"text": "Question:\nA_2\\rightleftarrows2A In the above reaction, A_2, which is an ideal gas, undergoes partial dissociation to the ideal gas A and the equilibrium constant, given in terms of partial pressures, is K. a) show that the degree of dissociation of A_2, \\alpha, is given by \\alpha = [1 + (4P/K)]^-(1/2), where P = the total pressure of A_2 and A.b) Derive the equation of state for this gas mixture in terms of P, V, T, K and R, assumingi) that the gas mixture has a molecular weight of A_2, ii) that the gas mixture has a molecular weight of A.\n\nOptions:\nA. \u0007lpha = [1 + (2P/K)]^-1/2\nB. \u0007lpha = [1 - (4P/K)]^-1/2\nC.             \u0007lpha = [2 + (4P/K)]^-1/2\nD. \u0007lpha = [1 + (4P/K)]^-1/2\n\nAnswer: D\n\nReference Solution:\na) A_2\\rightleftarrows2A number of moles present initially: n_0 0 number of moles present at equilibrium (1 - \\alpha)n_0 2 \\alpha n_0 Therefore,n_total_- = n_0 (1 - \\alpha) + 2 \\alpha n_0 orn_total= (1 + \\alpha) n_-0. The expression forK_pis K_p= [{P_A^2} / {P_(A)2}](1) But,P_A = [2\\alpha / (1 + \\alpha)] P andP_(A)2 = [(1 - \\alpha) / (1 + \\alpha)] P Substitute the above expressions of P_A and P_(A)2 into equation (1) to obtain: K_p= [{(2 \\alpha P)^2 / {(1 + \\alpha) (1 + \\alpha)}} / {{(1 - \\alpha) / (1 + \\alpha)} P}] K_p= [{4\\alpha^2P} / {(1 + \\alpha) (1 - \\alpha)}] orK_p= [(4\\alpha^2 P) / (1 - \\alpha^2)] Solving for \\alpha gives K_p-K_p\\alpha^2 = 4\\alpha^2 P 4\\alpha^2P +K_p\\alpha^2 =K_p \\alpha^2 (4P +K_p) =K_p \\alpha^2 = [K_p/ (4P +K_p)] Dividing both the numerator and thedenominaterof the right hand side by K_p yields \\alpha^2 = [1 / {(4P /K_p) + 1}]. Taking the square root of both sides gives \\alpha = [1 / {(4P / K_P) + 1}]^1/2 . or\\alpha = [1 + (4P / K)]^-1/2 where K =K_p. b) From the ideal gas law PV =nRTor V =nRT/P V = n_0 (1 + \\alpha) RT/P. Assumption (i): There are n_0- moles of gas \\thereforeV= (V/n_0) = (1 + \\alpha) (RT / P) V= [1 + {(1 + 4P) / K}^-1/2] (RT / P) Assumption (ii): There are 2n_0 moles of gas \\thereforeV= [V / (2n_0)] = (1 + \\alpha) (RT / 2P) V= [1 + {(1 + 4P) / K}^-1/2] (RT / 2P).", "ref_id": 4469, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "A_2\\rightleftarrows2A In the above reaction, A_2, which is an ideal gas, undergoes partial dissociation to the ideal gas A and the equilibrium constant, given in terms of partial pressures, is K. a) show that the degree of dissociation of A_2, \\alpha, is given by \\alpha = [1 + (4P/K)]^-(1/2), where P = the total pressure of A_2 and A.b) Derive the equation of state for this gas mixture in terms of P, V, T, K and R, assumingi) that the gas mixture has a molecular weight of A_2, ii) that the gas mixture has a molecular weight of A.", "options": ["\u0007lpha = [1 + (2P/K)]^-1/2", "\u0007lpha = [1 - (4P/K)]^-1/2", "\u0007lpha = [2 + (4P/K)]^-1/2", "\u0007lpha = [1 + (4P/K)]^-1/2"], "answer": "D", "solution": "a) A_2\\rightleftarrows2A number of moles present initially: n_0 0 number of moles present at equilibrium (1 - \\alpha)n_0 2 \\alpha n_0 Therefore,n_total_- = n_0 (1 - \\alpha) + 2 \\alpha n_0 orn_total= (1 + \\alpha) n_-0. The expression forK_pis K_p= [{P_A^2} / {P_(A)2}](1) But,P_A = [2\\alpha / (1 + \\alpha)] P andP_(A)2 = [(1 - \\alpha) / (1 + \\alpha)] P Substitute the above expressions of P_A and P_(A)2 into equation (1) to obtain: K_p= [{(2 \\alpha P)^2 / {(1 + \\alpha) (1 + \\alpha)}} / {{(1 - \\alpha) / (1 + \\alpha)} P}] K_p= [{4\\alpha^2P} / {(1 + \\alpha) (1 - \\alpha)}] orK_p= [(4\\alpha^2 P) / (1 - \\alpha^2)] Solving for \\alpha gives K_p-K_p\\alpha^2 = 4\\alpha^2 P 4\\alpha^2P +K_p\\alpha^2 =K_p \\alpha^2 (4P +K_p) =K_p \\alpha^2 = [K_p/ (4P +K_p)] Dividing both the numerator and thedenominaterof the right hand side by K_p yields \\alpha^2 = [1 / {(4P /K_p) + 1}]. Taking the square root of both sides gives \\alpha = [1 / {(4P / K_P) + 1}]^1/2 . or\\alpha = [1 + (4P / K)]^-1/2 where K =K_p. b) From the ideal gas law PV =nRTor V =nRT/P V = n_0 (1 + \\alpha) RT/P. Assumption (i): There are n_0- moles of gas \\thereforeV= (V/n_0) = (1 + \\alpha) (RT / P) V= [1 + {(1 + 4P) / K}^-1/2] (RT / P) Assumption (ii): There are 2n_0 moles of gas \\thereforeV= [V / (2n_0)] = (1 + \\alpha) (RT / 2P) V= [1 + {(1 + 4P) / K}^-1/2] (RT / 2P)."}, "question": "task_1"}}, {"data": {"text": "Question:\nChloroform reacts according to the following equation in the presence of sodiummethoxidein methanol solution. CHCl_3 +OMe^- \\rightleftarrowsCCl_(3)- +MeOH(fast) CCl (3)- \\rightarrow CCl_2 +Cl(slow) andCCl_2 \\rightarrow products (fast) An experiment was done to measure the order of the slow step with respect toCCl_(3)- and to determine the amount ofCl^- produced in time, t at 59.7\\textdegreeC by titration with 0.0100 N AgNO_3, V, ml being required. The following results were obtained. t(min) V, ml 0 1.71 4 3.03 9 4.49 15 5.97 22 7.39 30 8.87 41 10.48 50 11.7 \\infty 15.98 Show that the reaction is first order and determine the rate constant.\n\nOptions:\nA. First order, 0.0237 min^-1\nB. Zero order, 0.0237 min^-1\nC.             First order, 0.0243 min^-1\nD. Second order, 0.0237 min^-1\n\nAnswer: A\n\nReference Solution:\nOne way to determine the order of the reaction is to plot log (V_\\infty - V)vst. A straight line would be obtained if the reaction is first order. From the slope of the plot, the value of k can be calculated. Another method is to use the equation k = [(2.303) / t] log [(V_\\infty - V_O) / (V_\\infty - V)] Fort = 4 min k = [(2.303) / (4 min)] log [(15.98 - 1.71) / (15.98 - 3.03)] = 0.0243 min^-1 Fort = 4 min to 5 = 50 min k = 0.0243, 0.0241, 0.0236, 0.0231, 0.0232, 0.0233 and 0.0241 Since k shows constancy then it can be said that the reaction is first order. And the value for k, taken as an average of all the values, is approximately 0.0237.", "ref_id": 4470, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Chloroform reacts according to the following equation in the presence of sodiummethoxidein methanol solution. CHCl_3 +OMe^- \\rightleftarrowsCCl_(3)- +MeOH(fast) CCl (3)- \\rightarrow CCl_2 +Cl(slow) andCCl_2 \\rightarrow products (fast) An experiment was done to measure the order of the slow step with respect toCCl_(3)- and to determine the amount ofCl^- produced in time, t at 59.7\\textdegreeC by titration with 0.0100 N AgNO_3, V, ml being required. The following results were obtained. t(min) V, ml 0 1.71 4 3.03 9 4.49 15 5.97 22 7.39 30 8.87 41 10.48 50 11.7 \\infty 15.98 Show that the reaction is first order and determine the rate constant.", "options": ["First order, 0.0237 min^-1", "Zero order, 0.0237 min^-1", "First order, 0.0243 min^-1", "Second order, 0.0237 min^-1"], "answer": "A", "solution": "One way to determine the order of the reaction is to plot log (V_\\infty - V)vst. A straight line would be obtained if the reaction is first order. From the slope of the plot, the value of k can be calculated. Another method is to use the equation k = [(2.303) / t] log [(V_\\infty - V_O) / (V_\\infty - V)] Fort = 4 min k = [(2.303) / (4 min)] log [(15.98 - 1.71) / (15.98 - 3.03)] = 0.0243 min^-1 Fort = 4 min to 5 = 50 min k = 0.0243, 0.0241, 0.0236, 0.0231, 0.0232, 0.0233 and 0.0241 Since k shows constancy then it can be said that the reaction is first order. And the value for k, taken as an average of all the values, is approximately 0.0237."}, "question": "task_1"}}, {"data": {"text": "Question:\nWhat is the distance between two Cs atoms in a unit cell, if a = 4.5\\textdegreeA?\n\nOptions:\nA. 4.5A\nB. 7.790A\nC.             9.5A\nD. 6.5A\n\nAnswer: B\n\nReference Solution:\nCs atoms form a cubic unit cell. The distance, L, between two atoms in a cubic unit cell is L = \\surd[a^2(x_2 - x_1)^2 + a^2(y_2 - y_1)^2 + a^2(z_2 - z_1)^2](1) where (x_1y_1z_1) and (x_2y_2z_2) are their respective coordinates. In this case (x_1y_1z_1) = (000) and (x_2y_2z_2) = (111). Substituting these values into equation (1) gives L = \\surd[(4.5)^2 {(1 - 0)^2 + (1 - 0)^2 + (1 - 0)^2}] = 4.5\\textdegreeA \\surd3 = (4.5\\textdegreeA)(1.732) = 7.7942\\textdegreeA = 7.790\\textdegreeA", "ref_id": 4471, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "What is the distance between two Cs atoms in a unit cell, if a = 4.5\\textdegreeA?", "options": ["4.5A", "7.790A", "9.5A", "6.5A"], "answer": "B", "solution": "Cs atoms form a cubic unit cell. The distance, L, between two atoms in a cubic unit cell is L = \\surd[a^2(x_2 - x_1)^2 + a^2(y_2 - y_1)^2 + a^2(z_2 - z_1)^2](1) where (x_1y_1z_1) and (x_2y_2z_2) are their respective coordinates. In this case (x_1y_1z_1) = (000) and (x_2y_2z_2) = (111). Substituting these values into equation (1) gives L = \\surd[(4.5)^2 {(1 - 0)^2 + (1 - 0)^2 + (1 - 0)^2}] = 4.5\\textdegreeA \\surd3 = (4.5\\textdegreeA)(1.732) = 7.7942\\textdegreeA = 7.790\\textdegreeA"}, "question": "task_1"}}, {"data": {"text": "Question:\nWhat is the angle of maximum reflection by the (111) plane ofNaCl, where a = 5.6402\\textdegreeA and \\lambda = 2.2910\\textdegreeA for the C_rK_\\alpha line ?\n\nOptions:\nA. 50 degrees\nB. 45 degrees\nC.             60 degrees\nD. 56.66 degrees\n\nAnswer: D\n\nReference Solution:\nA beam of X-rays will be reflected if sin \\texttheta = [n\\lambda/ 2d] = [\\lambda / 2d_hkl](1) where \\texttheta = angle of reflection from thehklplane. n = order of reflection (an integer). \\lambda = wavelength of the radiation. d_hkl= distance, Looking at equation (1), n = 1 and \\lambda = 2.2910\\textdegreeA; butd_hklis not given. This can be calculated using [1 / (d_hkl^2)] = [(h^2 + k^2 + l^2) / a^2] wherehkl= (111). Therefore [1 / (d_111^2)] = [(1^2 + 1^2 + 1^2) / (5.6402\\textdegreeA)^2] = .5319\\textdegreeA^-2 and[1 / (d_111)] = .7293\\textdegreeA^-1 Thusd_111 = [1 / (.7293\\textdegreeA^-1)] = 1.3711\\textdegreeA Now thatd_hklis known, substitute its value into equation (1) and solve for \\texttheta. Hence sin \\texttheta = [(2.2910\\textdegreeA) / {2(1.3711\\textdegreeA)}] = [(2.2910) / (2.7423)] = .835 and\\texttheta = sin^-1(.835) \\texttheta = 56.66\\textdegree", "ref_id": 4472, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "What is the angle of maximum reflection by the (111) plane ofNaCl, where a = 5.6402\\textdegreeA and \\lambda = 2.2910\\textdegreeA for the C_rK_\\alpha line ?", "options": ["50 degrees", "45 degrees", "60 degrees", "56.66 degrees"], "answer": "D", "solution": "A beam of X-rays will be reflected if sin \\texttheta = [n\\lambda/ 2d] = [\\lambda / 2d_hkl](1) where \\texttheta = angle of reflection from thehklplane. n = order of reflection (an integer). \\lambda = wavelength of the radiation. d_hkl= distance, Looking at equation (1), n = 1 and \\lambda = 2.2910\\textdegreeA; butd_hklis not given. This can be calculated using [1 / (d_hkl^2)] = [(h^2 + k^2 + l^2) / a^2] wherehkl= (111). Therefore [1 / (d_111^2)] = [(1^2 + 1^2 + 1^2) / (5.6402\\textdegreeA)^2] = .5319\\textdegreeA^-2 and[1 / (d_111)] = .7293\\textdegreeA^-1 Thusd_111 = [1 / (.7293\\textdegreeA^-1)] = 1.3711\\textdegreeA Now thatd_hklis known, substitute its value into equation (1) and solve for \\texttheta. Hence sin \\texttheta = [(2.2910\\textdegreeA) / {2(1.3711\\textdegreeA)}] = [(2.2910) / (2.7423)] = .835 and\\texttheta = sin^-1(.835) \\texttheta = 56.66\\textdegree"}, "question": "task_1"}}, {"data": {"text": "Question:\n2NO_2 = N_2O_4 (a) CalculateK_pfor this reaction at 40\\textdegreeC. (b) The density of an equilibrium mixture of NO_2 and N_2O_4 gases is found to be 5.85 g/liter at 40\\textdegreeC and a certain pressure. Using the value in (a) forK_p, calculate the degree of dissociation of the N_2O_4 the average molecular weight of the mixture, and the total pressure of the mixture.\n\nOptions:\nA. K_p= 0.55, \u0007lpha = 0.35, M = 70, P = 2.15 atm\nB. K_p= 0.48, \u0007lpha = 0.28, M = 80, P = 2.50 atm\nC.             K_p= 0.70, \u0007lpha = 0.44, M = 60, P = 2.00 atm\nD. K_p= 0.62, \u0007lpha = 0.39, M = 66, P = 2.27 atm\n\nAnswer: D\n\nReference Solution:\na) Looking at the data given in the problem, the best formula for calculatingK_pis \\DeltaG\\textdegree = - RT InK_por InK_p= - [(\\DeltaG\\textdegree) / (RT)](1) where \\DeltaG\\textdegree = free energy change, R = gas constant and T = temperature. Here,\\DeltaG\\textdegree = 300 cal R = 1.98 cal mole^-1 degree^-1 T = 40\\textdegreeC = (40 + 273) \\textdegreeK = 313\\textdegreeK Substituting these values into equation (1), gives InK_p= - [{300} / {(1.98) (313)}] = -0.484 \\thereforeK_p= e^-0.484 = 0.62 or 2.303 logK_p= - [{300} / {(1.98) (313)}] logK_p= - [{300} / {(1.98) (313) (2.303)}] = -0.21 orK_p= 0.62. b) From the ideal gas law, PM = \\rho RT(2) orP = Pressure M = Average molecular weight \\rho = Density = 5.85 g/liter R = Gas constant = 0.082 T = Temperature = 313 Therefore PM = (5.85) (0.082) (313) = 150 gatm/mole . Let n\\textdegree denote the number of moles if the N_2O_4 were completelyundissociatedand \\alpha, the degree of dissociation. Then n_(N)2(O)4 = (1 - \\alpha)n\\textdegree, n_(NO)2 = 2\\alpham\\textdegree and N = (1 + \\alpha)n\\textdegree. The average molecular weight M is: M = 46N_(NO)2 + 92N_(N)2(O)4 where N_(NO)2 = mole fraction ofNO_2 = [(2\\alpham\\textdegree) / {(1 + \\alpha)n\\textdegree}] or N_(N)2(O)4 = mole fraction of N_2O_4 = [{(1 - \\alpha)n\\textdegree} / {(1 + \\alpha)n\\textdegree}] M = 46 [2\\alpha / (1 + \\alpha)] + 92 [(1 - \\alpha) / (1 + \\alpha)] = [92 / (1 + \\alpha)]. Since P = 150/M, we find P = (1 + \\alpha) (150 / 92). Finally, the equilibrium constant is K_p= [{n_(N)2(O)4} / {n_(NO)2^2}] (N/P) = [{(1 - \\alpha) (1 + \\alpha)} / 4\\alpha^2P] or 0.62 = [{92(1 - \\alpha)} / (150 \u00d7 4\\alpha^2)] Then [(1 - \\alpha) / \\alpha^2] = 4.04. Use the formula \\alpha = [{- b \\pm \\surd(b^2 - 4ac)} / 2a] to solve for \\alpha \\therefore\\alpha = [{-1 \\pm \\surd(1 + 16.16)} / {8.08}] Picking the positive value for \\alpha gives \\alpha = 0.39. M is then (92 / 1.39) = 66, and P = (150 / 66) = 2.27 atm.", "ref_id": 4473, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "2NO_2 = N_2O_4 (a) CalculateK_pfor this reaction at 40\\textdegreeC. (b) The density of an equilibrium mixture of NO_2 and N_2O_4 gases is found to be 5.85 g/liter at 40\\textdegreeC and a certain pressure. Using the value in (a) forK_p, calculate the degree of dissociation of the N_2O_4 the average molecular weight of the mixture, and the total pressure of the mixture.", "options": ["K_p= 0.55, \u0007lpha = 0.35, M = 70, P = 2.15 atm", "K_p= 0.48, \u0007lpha = 0.28, M = 80, P = 2.50 atm", "K_p= 0.70, \u0007lpha = 0.44, M = 60, P = 2.00 atm", "K_p= 0.62, \u0007lpha = 0.39, M = 66, P = 2.27 atm"], "answer": "D", "solution": "a) Looking at the data given in the problem, the best formula for calculatingK_pis \\DeltaG\\textdegree = - RT InK_por InK_p= - [(\\DeltaG\\textdegree) / (RT)](1) where \\DeltaG\\textdegree = free energy change, R = gas constant and T = temperature. Here,\\DeltaG\\textdegree = 300 cal R = 1.98 cal mole^-1 degree^-1 T = 40\\textdegreeC = (40 + 273) \\textdegreeK = 313\\textdegreeK Substituting these values into equation (1), gives InK_p= - [{300} / {(1.98) (313)}] = -0.484 \\thereforeK_p= e^-0.484 = 0.62 or 2.303 logK_p= - [{300} / {(1.98) (313)}] logK_p= - [{300} / {(1.98) (313) (2.303)}] = -0.21 orK_p= 0.62. b) From the ideal gas law, PM = \\rho RT(2) orP = Pressure M = Average molecular weight \\rho = Density = 5.85 g/liter R = Gas constant = 0.082 T = Temperature = 313 Therefore PM = (5.85) (0.082) (313) = 150 gatm/mole . Let n\\textdegree denote the number of moles if the N_2O_4 were completelyundissociatedand \\alpha, the degree of dissociation. Then n_(N)2(O)4 = (1 - \\alpha)n\\textdegree, n_(NO)2 = 2\\alpham\\textdegree and N = (1 + \\alpha)n\\textdegree. The average molecular weight M is: M = 46N_(NO)2 + 92N_(N)2(O)4 where N_(NO)2 = mole fraction ofNO_2 = [(2\\alpham\\textdegree) / {(1 + \\alpha)n\\textdegree}] or N_(N)2(O)4 = mole fraction of N_2O_4 = [{(1 - \\alpha)n\\textdegree} / {(1 + \\alpha)n\\textdegree}] M = 46 [2\\alpha / (1 + \\alpha)] + 92 [(1 - \\alpha) / (1 + \\alpha)] = [92 / (1 + \\alpha)]. Since P = 150/M, we find P = (1 + \\alpha) (150 / 92). Finally, the equilibrium constant is K_p= [{n_(N)2(O)4} / {n_(NO)2^2}] (N/P) = [{(1 - \\alpha) (1 + \\alpha)} / 4\\alpha^2P] or 0.62 = [{92(1 - \\alpha)} / (150 \u00d7 4\\alpha^2)] Then [(1 - \\alpha) / \\alpha^2] = 4.04. Use the formula \\alpha = [{- b \\pm \\surd(b^2 - 4ac)} / 2a] to solve for \\alpha \\therefore\\alpha = [{-1 \\pm \\surd(1 + 16.16)} / {8.08}] Picking the positive value for \\alpha gives \\alpha = 0.39. M is then (92 / 1.39) = 66, and P = (150 / 66) = 2.27 atm."}, "question": "task_1"}}, {"data": {"text": "Question:\nThe vapor pressures of C_2H_5OH and H_2O over solutions of these two at 20\\textdegreeC are as follows: Weight percent C_2H_5OH P_(C)2(H)5OH,torr P_(H)2O,torr 0 20.0 40.0 60.0 80.0 100 0 12.6 20.7 25.6 31.2 43.6 17.5 15.9 14.7 14.1 11.3 0 Find the activity and the activity coefficient of each component in a solution of 40 percent C_2H_5OH by weight. Take the pure substance as the standard state for each component.\n\nOptions:\nA. a_(C)2(H)5OH = 0.840, a_(H)2O = 0.475, \\gamma_(C)2(H)5OH = 1.06, \\gamma_(H)2O = 2.30\nB. a_(C)2(H)5OH = 0.207, a_(H)2O = 0.793, \\gamma_(C)2(H)5OH = 1.06, \\gamma_(H)2O = 2.30\nC.             a_(C)2(H)5OH = 0.475, a_(H)2O = 0.840, \\gamma_(C)2(H)5OH = 2.30, \\gamma_(H)2O = 1.06\nD. a_(C)2(H)5OH = 0.793, a_(H)2O = 0.207, \\gamma_(C)2(H)5OH = 2.30, \\gamma_(H)2O = 1.06\n\nAnswer: C\n\nReference Solution:\nIf the basis for the calculation is chosen to be 100 g of solution, then weight of C_2H_5OH = 40 g and weight of H_2O = 60 g This is because the problem indicates that the solution is 40 percent C_2H_5OH by weight. By definition, the activity a, is given by a_(C)2(H)5OH = [(P_(C)2(H)5OH) / (P\\textdegree_(C)2(H)5OH)](1) a_(H)2O = [(P_(H)2O) / (P\\textdegree_(H)2O)](2) and the activity coefficient, \\gamma, given by \\gamma_(C)2(H)5OH = [(a_(C)2(H)5OH) / (X_(C)2(H)5OH)](3) and\\gamma_(H)2O = [(a_(H)2O) / (X_(H)2O)](4) whereP = vapor pressure of the component for the mixture at that composition P\\textdegree = vapor pressure of the pure component X = composition (or mole fraction) The vapor pressure of the pure components C_2H_5OH and H_2O at 20\\textdegreeC are 43.6torrand 17.5torrrespectively. P\\textdegree_(C)2(H)5OH is found from the table when the weight percent of C_2H_5OH is 100, and that of P\\textdegree_(H)2O is found when the weight percent of H_2O is 100 (when the weight percent of C_2H_5OH is 0). From the given data, P_(C)2(H)5OH at 40 weight percent = 20.7 torrand P_(H)2O = 14.7torr. Substituting these values into equations (1) and (2) yields a_(C)2(H)5OH = [(P_(C)2(H)5OH) / (P\\textdegree_(C)2(H)5OH)] = (20.7 / 43.6) = 0.475 anda_(H)2O = [(P_(H)2O) / (P\\textdegree_(H)2O)] = (14.7 / 17.5) = 0.840 Before equations (3) and (4) can be used, the composi-tions need to be known. By definition, X_(C)2(H)5OH = [(n_(C)2(H)5OH) / (n_(C)2(H)5OH + n_(H)2O)](5) andX_(H)2O = [(n_(H)2O) / (n_(H)2O + n_(C)2(H)5OH)](6) where n = number of moles = [weight / molecular weights] . The molecular weights of C_2H_5OH and H_2O are 46 and 18 respec-tively. Therefore,n_(C)2(H)5OH = (40 / 46) = 0.8696 n_(H)2O = (60 / 18) = 3.3333. Using these values in equations (5) and (6) gives X_(C)2(H)5OH = [0.8696 / (0.8696 + 3.3333)] = (0.8696 / 4.2029) = 0.207 X_(H)2O = [3.3333 / (3.3333 + 0.8696)] = (3.3333 / 4.2029) = 0.793 Therefore, equations (3) and (4) becomes \\gamma_(C)2(H)5OH = [(a_(C)2(H)5OH) / (X_(C)2(H)5OH)] = (0.475 / 0.207) = 2.30 and\\gamma_(H)2O = [(a_(H)2O) / X_(H)2O)] = (0.840 / 0.793) = 1.06", "ref_id": 4474, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "The vapor pressures of C_2H_5OH and H_2O over solutions of these two at 20\\textdegreeC are as follows: Weight percent C_2H_5OH P_(C)2(H)5OH,torr P_(H)2O,torr 0 20.0 40.0 60.0 80.0 100 0 12.6 20.7 25.6 31.2 43.6 17.5 15.9 14.7 14.1 11.3 0 Find the activity and the activity coefficient of each component in a solution of 40 percent C_2H_5OH by weight. Take the pure substance as the standard state for each component.", "options": ["a_(C)2(H)5OH = 0.840, a_(H)2O = 0.475, \\gamma_(C)2(H)5OH = 1.06, \\gamma_(H)2O = 2.30", "a_(C)2(H)5OH = 0.207, a_(H)2O = 0.793, \\gamma_(C)2(H)5OH = 1.06, \\gamma_(H)2O = 2.30", "a_(C)2(H)5OH = 0.475, a_(H)2O = 0.840, \\gamma_(C)2(H)5OH = 2.30, \\gamma_(H)2O = 1.06", "a_(C)2(H)5OH = 0.793, a_(H)2O = 0.207, \\gamma_(C)2(H)5OH = 2.30, \\gamma_(H)2O = 1.06"], "answer": "C", "solution": "If the basis for the calculation is chosen to be 100 g of solution, then weight of C_2H_5OH = 40 g and weight of H_2O = 60 g This is because the problem indicates that the solution is 40 percent C_2H_5OH by weight. By definition, the activity a, is given by a_(C)2(H)5OH = [(P_(C)2(H)5OH) / (P\\textdegree_(C)2(H)5OH)](1) a_(H)2O = [(P_(H)2O) / (P\\textdegree_(H)2O)](2) and the activity coefficient, \\gamma, given by \\gamma_(C)2(H)5OH = [(a_(C)2(H)5OH) / (X_(C)2(H)5OH)](3) and\\gamma_(H)2O = [(a_(H)2O) / (X_(H)2O)](4) whereP = vapor pressure of the component for the mixture at that composition P\\textdegree = vapor pressure of the pure component X = composition (or mole fraction) The vapor pressure of the pure components C_2H_5OH and H_2O at 20\\textdegreeC are 43.6torrand 17.5torrrespectively. P\\textdegree_(C)2(H)5OH is found from the table when the weight percent of C_2H_5OH is 100, and that of P\\textdegree_(H)2O is found when the weight percent of H_2O is 100 (when the weight percent of C_2H_5OH is 0). From the given data, P_(C)2(H)5OH at 40 weight percent = 20.7 torrand P_(H)2O = 14.7torr. Substituting these values into equations (1) and (2) yields a_(C)2(H)5OH = [(P_(C)2(H)5OH) / (P\\textdegree_(C)2(H)5OH)] = (20.7 / 43.6) = 0.475 anda_(H)2O = [(P_(H)2O) / (P\\textdegree_(H)2O)] = (14.7 / 17.5) = 0.840 Before equations (3) and (4) can be used, the composi-tions need to be known. By definition, X_(C)2(H)5OH = [(n_(C)2(H)5OH) / (n_(C)2(H)5OH + n_(H)2O)](5) andX_(H)2O = [(n_(H)2O) / (n_(H)2O + n_(C)2(H)5OH)](6) where n = number of moles = [weight / molecular weights] . The molecular weights of C_2H_5OH and H_2O are 46 and 18 respec-tively. Therefore,n_(C)2(H)5OH = (40 / 46) = 0.8696 n_(H)2O = (60 / 18) = 3.3333. Using these values in equations (5) and (6) gives X_(C)2(H)5OH = [0.8696 / (0.8696 + 3.3333)] = (0.8696 / 4.2029) = 0.207 X_(H)2O = [3.3333 / (3.3333 + 0.8696)] = (3.3333 / 4.2029) = 0.793 Therefore, equations (3) and (4) becomes \\gamma_(C)2(H)5OH = [(a_(C)2(H)5OH) / (X_(C)2(H)5OH)] = (0.475 / 0.207) = 2.30 and\\gamma_(H)2O = [(a_(H)2O) / X_(H)2O)] = (0.840 / 0.793) = 1.06"}, "question": "task_1"}}, {"data": {"text": "Question:\nConsider the water dissociation reaction H_2O \\rightleftarrows H^+ + 0H^- in which the equilibrium is disturbed. It is found that the relaxation time for the return to equilibrium at 25\\textdegreeC is 37 \\mus. Calculate the rate coefficients for the forward and backward reactions.\n\nOptions:\nA. k_1 = 2.5 \u00d7 10^-5 s^-1, k_2 = 1.4 \u00d7 10^11 M^-1s^-1\nB. k_1 = 1.4 \u00d7 10^11 M^-1s^-1, k_2 = 2.5 \u00d7 10^-5 s^-1\nC.             k_1 = 3.5 \u00d7 10^-5 s^-1, k_2 = 1.2 \u00d7 10^11 M^-1s^-1\nD. k_1 = 2.5 \u00d7 10^-6 s^-1, k_2 = 1.4 \u00d7 10^10 M^-1s^-1\n\nAnswer: A\n\nReference Solution:\nWhen a reaction is displaced slightly from equilib-rium, the return to equilibrium is first order in the dis-placement from equilibrium. The rate of approach to equilib-rium is proportional to the displacement from equilibrium, and the relaxation time, \\tau is used to characterize the rate of return to equilibrium. The forward rate is k_1[H_2O]. The backward rate is k_2 [H^+] [OH^-]. Therefore, the rate equation becomes [(d[H_2O]) / dt] = k_2(H^+) (OH^-) - k_1(H_2O)(1) At equilibrium equation (1) changes to 0 = k_2(H^+)_eq (OH^-)_eq - k_1(H_2O)_eq In terms of the displacement, \u2206 (H_2O) from equilibrium, equation (1) can be written by introducing (H^+) = (H^+)_eq - \u2206(H_2O)(2) (OH^-) = (OH^-)_eq - \u2206(H_2O)(3) (H_2O) = (H_2O)_eq + \u2206(H_2O)(4) Substituting equations (2) , (3) and (4) into equation (1) gives [{d\u2206(H_2O)} / dt] = k_2[(H^+)_eq - \u2206(H_2O)] [(OH^-)_eq - \u2206(H_2O)] - k_1[(H_2O_)eq + \u2206(H_2O)] Now, make the assumption that (H^+)_eq (OH^-)_eq displace-ment from equilibrium is small \\therefore[{d[\u2206(H_2O)]} / dt] = k_2[(H^+)_eq(OH^-)_eq - (H^+)_eq (+ \u2206(H_2O)) - \u2206(H_2O) (OH^-)_eq + \u2206(H_2O)^2] - k_1[(H_2O)_eq + \u2206(H_2O)] = -k_2[+ (H^+)_eq(+ \u2206(H_2O)) + \u2206(H_2O) (OH^-)_eq - \u2206(H_2O^2)] - k_1\u2206(H_2O) + [k_2(H^+)_eq(OH^-)_eq] - [k_1(H_2O)_eq] or [{d[\u2206(H_2O)]} / dt] = - \u2206(H_2O){k_2[(H^+)_eq + (OH^-)_eq] + k_1} = [{- \u2206(H_2O)} / \\tau] where \\tau = the relaxation time. Observe that the term [\u2206 (H_2O)]^2 has been neglected. Therefore (1 / \\tau) = k_1 + k_2[(H^+)_eq + (OH^-)_eq](5) The equilibrium constant for the reaction is K = [{(H^+) (OH^-)} / (H_2O)] = (k_1 / k_2) = [k_w / (H_2O)] where K_w = the dissociation constant for water. Thus, K = [(1.0 \u00d7 10^-14) / (55.5)] = 1.8 \u00d7 10^-16 At equilibrium k_1(H_2O)_eq = k_2(H^+)_eq(OH^-)_eq ork_1 = k_2K(6) From equation (5) (1 / \\tau) = k_2 + k_2[(H^+)_eq + (OH^-)_eq] Therefore, since (H^+)_eq(OH^-)_eq = K_w and (H^+)_eq = (OH^-)_eq (1 / \\tau) = k_2[K + \\surdK_W + \\surdK_W] = k_2[1.8 \u00d7 10^-16 + (2 \u00d7 10^-7)] \\cong 2 \u00d7 10^-7 k_2 and k_2 = [1 / {(37 \u00d7 10^-6 s) (2 \u00d7 10^-7)}] = 1.4 \u00d7 10^11M^-1s^-1 Substitute k_2 into equation (6) to obtain k_1 = (1.4 \u00d7 10^11) (1.8 \u00d7 10^-16) = 2.5 \u00d7 10^-5 s^-1.", "ref_id": 4475, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Consider the water dissociation reaction H_2O \\rightleftarrows H^+ + 0H^- in which the equilibrium is disturbed. It is found that the relaxation time for the return to equilibrium at 25\\textdegreeC is 37 \\mus. Calculate the rate coefficients for the forward and backward reactions.", "options": ["k_1 = 2.5 \u00d7 10^-5 s^-1, k_2 = 1.4 \u00d7 10^11 M^-1s^-1", "k_1 = 1.4 \u00d7 10^11 M^-1s^-1, k_2 = 2.5 \u00d7 10^-5 s^-1", "k_1 = 3.5 \u00d7 10^-5 s^-1, k_2 = 1.2 \u00d7 10^11 M^-1s^-1", "k_1 = 2.5 \u00d7 10^-6 s^-1, k_2 = 1.4 \u00d7 10^10 M^-1s^-1"], "answer": "A", "solution": "When a reaction is displaced slightly from equilib-rium, the return to equilibrium is first order in the dis-placement from equilibrium. The rate of approach to equilib-rium is proportional to the displacement from equilibrium, and the relaxation time, \\tau is used to characterize the rate of return to equilibrium. The forward rate is k_1[H_2O]. The backward rate is k_2 [H^+] [OH^-]. Therefore, the rate equation becomes [(d[H_2O]) / dt] = k_2(H^+) (OH^-) - k_1(H_2O)(1) At equilibrium equation (1) changes to 0 = k_2(H^+)_eq (OH^-)_eq - k_1(H_2O)_eq In terms of the displacement, \u2206 (H_2O) from equilibrium, equation (1) can be written by introducing (H^+) = (H^+)_eq - \u2206(H_2O)(2) (OH^-) = (OH^-)_eq - \u2206(H_2O)(3) (H_2O) = (H_2O)_eq + \u2206(H_2O)(4) Substituting equations (2) , (3) and (4) into equation (1) gives [{d\u2206(H_2O)} / dt] = k_2[(H^+)_eq - \u2206(H_2O)] [(OH^-)_eq - \u2206(H_2O)] - k_1[(H_2O_)eq + \u2206(H_2O)] Now, make the assumption that (H^+)_eq (OH^-)_eq displace-ment from equilibrium is small \\therefore[{d[\u2206(H_2O)]} / dt] = k_2[(H^+)_eq(OH^-)_eq - (H^+)_eq (+ \u2206(H_2O)) - \u2206(H_2O) (OH^-)_eq + \u2206(H_2O)^2] - k_1[(H_2O)_eq + \u2206(H_2O)] = -k_2[+ (H^+)_eq(+ \u2206(H_2O)) + \u2206(H_2O) (OH^-)_eq - \u2206(H_2O^2)] - k_1\u2206(H_2O) + [k_2(H^+)_eq(OH^-)_eq] - [k_1(H_2O)_eq] or [{d[\u2206(H_2O)]} / dt] = - \u2206(H_2O){k_2[(H^+)_eq + (OH^-)_eq] + k_1} = [{- \u2206(H_2O)} / \\tau] where \\tau = the relaxation time. Observe that the term [\u2206 (H_2O)]^2 has been neglected. Therefore (1 / \\tau) = k_1 + k_2[(H^+)_eq + (OH^-)_eq](5) The equilibrium constant for the reaction is K = [{(H^+) (OH^-)} / (H_2O)] = (k_1 / k_2) = [k_w / (H_2O)] where K_w = the dissociation constant for water. Thus, K = [(1.0 \u00d7 10^-14) / (55.5)] = 1.8 \u00d7 10^-16 At equilibrium k_1(H_2O)_eq = k_2(H^+)_eq(OH^-)_eq ork_1 = k_2K(6) From equation (5) (1 / \\tau) = k_2 + k_2[(H^+)_eq + (OH^-)_eq] Therefore, since (H^+)_eq(OH^-)_eq = K_w and (H^+)_eq = (OH^-)_eq (1 / \\tau) = k_2[K + \\surdK_W + \\surdK_W] = k_2[1.8 \u00d7 10^-16 + (2 \u00d7 10^-7)] \\cong 2 \u00d7 10^-7 k_2 and k_2 = [1 / {(37 \u00d7 10^-6 s) (2 \u00d7 10^-7)}] = 1.4 \u00d7 10^11M^-1s^-1 Substitute k_2 into equation (6) to obtain k_1 = (1.4 \u00d7 10^11) (1.8 \u00d7 10^-16) = 2.5 \u00d7 10^-5 s^-1."}, "question": "task_1"}}, {"data": {"text": "Question:\nConsider the reaction 2SO_2(g) + O_2(g) \\rightleftarrows 2SO_3(g) : Initially 0.100 moles of SO_2 and 0.100 moles of SO_3 are present in a 2.00 liter flask at a temperature of 27\\textdegreeC. Equilibrium is attained at a pressure of 2.78 atm. Calculate a) the mole fraction of O_2 at equilibrium; b)K_p; c) the percent dissociation of SO_3 if 0.100 mole of SO_3 and no (zero) O_2 and no (zero) SO_2 were present initially in the flask.\n\nOptions:\nA. a) 0.113, b) 0.32, c) 75%\nB. a) 0.115, b) 0.31, c) 73%\nC.             a) 0.105, b) 0.35, c) 65%\nD. a) 0.125, b) 0.28, c) 77%\n\nAnswer: B\n\nReference Solution:\n2SO_2(g) + O_2(g) \\rightleftarrows 2SO_3(g). Define y as the number of moles of each species that react 2SO_2(g)+O_2(g) \\rightleftarrows 2SO_3(g) number of moles present initially .1 0 .100 number of moles present at equilibrium (0.100 + 2y) y (0.100 - 2y) Total number of moles,n_total= 0.100 + 2y + y + 0.100 - 2y orn_total= 0.200 + y(1) From the ideal gas law, n = [(PV) / (RT)] \\thereforen_total= [{(2.78atm)(2.00 liters)} / {(0.08206liter atm\\textdegreeK^-1 mole^-1)(300\\textdegreeK)}] n_total= 0.226 mole From equation (1), n_total= 0.200 + y or0.226= 0.200 + y Solving for y yields y = 0.026 mole Mole fraction ofO_2, X_(O)2 = [(mole of O_2) / (total moles)] = [(0.026) / (0.226)] orX_(O)2 = 0.115 b)K_pfor the reaction is given in terms of partial pressures. That is, K_p= [{P_(SO)3^2} / {P_(SO)2^2 P_(O)2}] = [{X_(SO)3P_total}^2 / {(X_(SO)2P_total)^2 (X_(O)2P_total)}] n_(SO)3 = 0.100 - 2y = 0.100 - 2 (0.026) n_(SO)3 = 0.048 n_(SO)2 = 0.100 + 2y = 0.100 + 2 (0.026) n_(SO)2 = 0.152 X_(SO)3 = [(0.048) / (0.226)] = 0.212 X_(SO)2 = [(0.152) / (0.226)] = 0.673 \\thereforeK_p= [{(0.212) (2.78)}^2 / {{(0.673) (2.78)}^2 {(0.115) (2.78)}}] = 0.31. c) 2SO_2+O_2\\rightleftarrows2SO_3 number of moles present at equilibrium 2y y (0.100 - 2y) The equilibrium constant expression is K_p= [{P_(SO)3^2} / {P_(SO)2^2 P_(O)2}] = [{n_(SO)3^2} / {n_(SO)2^2 n_(O)2}] \\bullet [V / (RT)] \\therefore[{n_(SO)3^2} / {n_(SO)2^2 n_(O)2}] = [(K_pRT) / V] = [{0.31(0.08206 literatm\\textdegreeK^-1 mole^-1) (300\\textdegreeK)} / (2.00 liter)] = 3.82 In terms of the number of moles present at equilibrium, [(0.100 - 2y)^2 / {(2y)^2y}] = 3.82 or[(0.100 - 2y)^2 / y^3] = 15.28 A trial and error analysis is best used in solving this problem. y [(0.100 - 2y)^2 / y^3] Remark 0.025 160 yis too small 0.040 6.3 y is too large 0.036 16.79 0.0365 14.99 interpolate 0.0363 15.70 Obviously y must lie between 0 and 0.050, so first try the midpoint of this interval and other values as shown above. Consequently, fraction of SO_3 dissociated is approximately [2y / (0.100)] = 0.73 = 73%. Observe that the value for y used is 0.0365.", "ref_id": 4476, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "Consider the reaction 2SO_2(g) + O_2(g) \\rightleftarrows 2SO_3(g) : Initially 0.100 moles of SO_2 and 0.100 moles of SO_3 are present in a 2.00 liter flask at a temperature of 27\\textdegreeC. Equilibrium is attained at a pressure of 2.78 atm. Calculate a) the mole fraction of O_2 at equilibrium; b)K_p; c) the percent dissociation of SO_3 if 0.100 mole of SO_3 and no (zero) O_2 and no (zero) SO_2 were present initially in the flask.", "options": ["a) 0.113, b) 0.32, c) 75%", "a) 0.115, b) 0.31, c) 73%", "a) 0.105, b) 0.35, c) 65%", "a) 0.125, b) 0.28, c) 77%"], "answer": "B", "solution": "2SO_2(g) + O_2(g) \\rightleftarrows 2SO_3(g). Define y as the number of moles of each species that react 2SO_2(g)+O_2(g) \\rightleftarrows 2SO_3(g) number of moles present initially .1 0 .100 number of moles present at equilibrium (0.100 + 2y) y (0.100 - 2y) Total number of moles,n_total= 0.100 + 2y + y + 0.100 - 2y orn_total= 0.200 + y(1) From the ideal gas law, n = [(PV) / (RT)] \\thereforen_total= [{(2.78atm)(2.00 liters)} / {(0.08206liter atm\\textdegreeK^-1 mole^-1)(300\\textdegreeK)}] n_total= 0.226 mole From equation (1), n_total= 0.200 + y or0.226= 0.200 + y Solving for y yields y = 0.026 mole Mole fraction ofO_2, X_(O)2 = [(mole of O_2) / (total moles)] = [(0.026) / (0.226)] orX_(O)2 = 0.115 b)K_pfor the reaction is given in terms of partial pressures. That is, K_p= [{P_(SO)3^2} / {P_(SO)2^2 P_(O)2}] = [{X_(SO)3P_total}^2 / {(X_(SO)2P_total)^2 (X_(O)2P_total)}] n_(SO)3 = 0.100 - 2y = 0.100 - 2 (0.026) n_(SO)3 = 0.048 n_(SO)2 = 0.100 + 2y = 0.100 + 2 (0.026) n_(SO)2 = 0.152 X_(SO)3 = [(0.048) / (0.226)] = 0.212 X_(SO)2 = [(0.152) / (0.226)] = 0.673 \\thereforeK_p= [{(0.212) (2.78)}^2 / {{(0.673) (2.78)}^2 {(0.115) (2.78)}}] = 0.31. c) 2SO_2+O_2\\rightleftarrows2SO_3 number of moles present at equilibrium 2y y (0.100 - 2y) The equilibrium constant expression is K_p= [{P_(SO)3^2} / {P_(SO)2^2 P_(O)2}] = [{n_(SO)3^2} / {n_(SO)2^2 n_(O)2}] \\bullet [V / (RT)] \\therefore[{n_(SO)3^2} / {n_(SO)2^2 n_(O)2}] = [(K_pRT) / V] = [{0.31(0.08206 literatm\\textdegreeK^-1 mole^-1) (300\\textdegreeK)} / (2.00 liter)] = 3.82 In terms of the number of moles present at equilibrium, [(0.100 - 2y)^2 / {(2y)^2y}] = 3.82 or[(0.100 - 2y)^2 / y^3] = 15.28 A trial and error analysis is best used in solving this problem. y [(0.100 - 2y)^2 / y^3] Remark 0.025 160 yis too small 0.040 6.3 y is too large 0.036 16.79 0.0365 14.99 interpolate 0.0363 15.70 Obviously y must lie between 0 and 0.050, so first try the midpoint of this interval and other values as shown above. Consequently, fraction of SO_3 dissociated is approximately [2y / (0.100)] = 0.73 = 73%. Observe that the value for y used is 0.0365."}, "question": "task_1"}}, {"data": {"text": "Question:\nThe ionization constant of 2-thiophenecarboxylic acid (C_4H_3SCOOH or HA) is K_a = 3.3 \u00d7 10^-4 at 25\\textdegreeC. (a) Find the standard electrode potential E\\textdegree for the half reaction HA(aq) + e^- \\rightarrow A^-(aq) + (1/2) H_2 (g) (b) Calculate the fraction of HA ionized in a 0.200 m aqueous solution of HA that is also 1.00 m with respect to MgCl_2. Make reasonable approximations in calculating activity coefficients but do not assume that they are equal to one.\n\nOptions:\nA. E1 = -0.59 V, alpha = 7.3 x 10^-3\nB. E1 = 0.206 V, alpha = 8.5 x 10^-2\nC.             E1 = -0.206 V, alpha = 8.2 x 10^-2\nD. E1 = -0.206 V, alpha = 1.46 x 10^-3\n\nAnswer: C\n\nReference Solution:\na) The two electrode reactions are given as HA + e^- \\rightarrow (1/2)H_2(g) + A^-(1) and(1/2)H_2(g) \\rightarrow H^+ + e^- (2) OVERALL:HA \\rightleftarrows H^+ + A^- Note that the second equation is introduced so as to eliminate the (1/2)H_2(g) in the first equation and also to provide the H^+ that is needed. If the standard potential of reaction (1) is designated by E_1\\textdegree and that of reaction (2) by E_2\\textdegree, thenE_cell\\textdegree = E_1\\textdegree + E_2\\textdegree But E_2\\textdegree = 0, \\thereforeE_cell\\textdegree = E_1\\textdegree The Nernst equation is given by E_cell = E_cell\\textdegree - [(RT) / (nF)] ln K_a Here, n = Here, n = 1 and at 25\\textdegreeC, [(RT) / (F)] ln K_a = 0.05916 log K_a Since the reaction is in equilibrium state, E_cell = 0. ThereforeE_cell\\textdegree = 0.05916 log K_a = E_1\\textdegree orE_1\\textdegree = 0.05916 (log 3.3 \u00d7 10^-4) = 0.05916 (-3.481486) = -0.206 V b) From the Debye-Huckel theory, log \\gamma_\\pm \\approx [(-0.509 (\\surdI) Z_i^2) / (1 + \\surd(I))](3) where \\gamma = activity coefficients Z_i = any ion with a charge +z, or -z I = ionic strength = (1/2) ^ions\\sum_i m_iZ_i ^2 m = molality Z = absolute value of the ionic valence. Note the Z_i here \\not = Z_i in equation (3). Here Z_+ = 2 and Z_- = 1. From the given data, I = (1/2) [1.00 \u00d7 2^2 + 2.0 \u00d7 1^2] = 3.0 So \\surd(I) = \\surd(3.0) = 1.732 Consequently, log \\gamma_H+ = log\\gamma_A- \\approx [{(-0.509) (1.732) (1)^2} / (1 + 1.732)] = [(- .8816) / (2.732)] = - .3227 \\therefore\\gamma = + .476 The relationship between a, \\gamma and K_a is K_a = [(a_H+ a_A-) / (a_HA)] = [(\\gamma_(m)H+^2 m_A-) / (m_HA)] Therefore,[(K_a) / (\\gamma^2)] = [(m_H+ m_A-) / (m_HA)] = [(3.3 \u00d7 10^-4) / (.476)^2] = 14.6 \u00d7 10^-4 = 1.46 \u00d7 10^-3 Recall that the overall reaction is HA \\rightleftarrows H^+ + A^- If the ionized fraction at equilibrium of H^+ and A^- is taken to be \\alpha, then the above reaction gives 0.200(\\alpha) for H^+, 0.200(\\alpha) for A^- and 0.200(1 - \\alpha) for HA. From these, 1.46 \u00d7 10^-3 = [(0.200\\alpha^2) / (1 - \\alpha)] or 0.200\\alpha^2 = 1.46 \u00d7 10^-3 - 1.46 \u00d7 10^-3\\alpha This is a quadratic equation, from which \\alpha^2 - 7.3 \u00d7 10^-3 + 7.3 \u00d7 10^-3\\alpha = 0 using the quadratic formula \\alpha = [{- b \\pm\\surd(b^2 - 4ac)} / (2a)] The value for \\alpha can be found. \\alpha = [{-7.3 \u00d7 10^-3 \\pm \\surd{(7.3 \u00d7 10^-3)^2 - 4(-7.3 \u00d7 10^-3)}} / (2)] = [{- .0073 \\pm \\surd(0.0000533 + 0.0292)} / (2)] = [(- .0073 \\pm 0.17104) / (2)] This equation will give two values for \\alpha. But the negative answer for \\alpha is impossible. Therefore, \\alpha = + 0.081868 \\approx 8.2 \u00d7 10^-2 Note: An easier way of doing this is to assume that \\alpha << 1. Therefore, \\alpha^2 = 7.3 \u00d7 10^-3 and\\alpha = \\surd(7.3 \u00d7 10^-3) = 8.5 \u00d7 10^-2 The first method is more accurate; but either way is acceptable.", "ref_id": 4477, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "The ionization constant of 2-thiophenecarboxylic acid (C_4H_3SCOOH or HA) is K_a = 3.3 \u00d7 10^-4 at 25\\textdegreeC. (a) Find the standard electrode potential E\\textdegree for the half reaction HA(aq) + e^- \\rightarrow A^-(aq) + (1/2) H_2 (g) (b) Calculate the fraction of HA ionized in a 0.200 m aqueous solution of HA that is also 1.00 m with respect to MgCl_2. Make reasonable approximations in calculating activity coefficients but do not assume that they are equal to one.", "options": ["E1 = -0.59 V, alpha = 7.3 x 10^-3", "E1 = 0.206 V, alpha = 8.5 x 10^-2", "E1 = -0.206 V, alpha = 8.2 x 10^-2", "E1 = -0.206 V, alpha = 1.46 x 10^-3"], "answer": "C", "solution": "a) The two electrode reactions are given as HA + e^- \\rightarrow (1/2)H_2(g) + A^-(1) and(1/2)H_2(g) \\rightarrow H^+ + e^- (2) OVERALL:HA \\rightleftarrows H^+ + A^- Note that the second equation is introduced so as to eliminate the (1/2)H_2(g) in the first equation and also to provide the H^+ that is needed. If the standard potential of reaction (1) is designated by E_1\\textdegree and that of reaction (2) by E_2\\textdegree, thenE_cell\\textdegree = E_1\\textdegree + E_2\\textdegree But E_2\\textdegree = 0, \\thereforeE_cell\\textdegree = E_1\\textdegree The Nernst equation is given by E_cell = E_cell\\textdegree - [(RT) / (nF)] ln K_a Here, n = Here, n = 1 and at 25\\textdegreeC, [(RT) / (F)] ln K_a = 0.05916 log K_a Since the reaction is in equilibrium state, E_cell = 0. ThereforeE_cell\\textdegree = 0.05916 log K_a = E_1\\textdegree orE_1\\textdegree = 0.05916 (log 3.3 \u00d7 10^-4) = 0.05916 (-3.481486) = -0.206 V b) From the Debye-Huckel theory, log \\gamma_\\pm \\approx [(-0.509 (\\surdI) Z_i^2) / (1 + \\surd(I))](3) where \\gamma = activity coefficients Z_i = any ion with a charge +z, or -z I = ionic strength = (1/2) ^ions\\sum_i m_iZ_i ^2 m = molality Z = absolute value of the ionic valence. Note the Z_i here \\not = Z_i in equation (3). Here Z_+ = 2 and Z_- = 1. From the given data, I = (1/2) [1.00 \u00d7 2^2 + 2.0 \u00d7 1^2] = 3.0 So \\surd(I) = \\surd(3.0) = 1.732 Consequently, log \\gamma_H+ = log\\gamma_A- \\approx [{(-0.509) (1.732) (1)^2} / (1 + 1.732)] = [(- .8816) / (2.732)] = - .3227 \\therefore\\gamma = + .476 The relationship between a, \\gamma and K_a is K_a = [(a_H+ a_A-) / (a_HA)] = [(\\gamma_(m)H+^2 m_A-) / (m_HA)] Therefore,[(K_a) / (\\gamma^2)] = [(m_H+ m_A-) / (m_HA)] = [(3.3 \u00d7 10^-4) / (.476)^2] = 14.6 \u00d7 10^-4 = 1.46 \u00d7 10^-3 Recall that the overall reaction is HA \\rightleftarrows H^+ + A^- If the ionized fraction at equilibrium of H^+ and A^- is taken to be \\alpha, then the above reaction gives 0.200(\\alpha) for H^+, 0.200(\\alpha) for A^- and 0.200(1 - \\alpha) for HA. From these, 1.46 \u00d7 10^-3 = [(0.200\\alpha^2) / (1 - \\alpha)] or 0.200\\alpha^2 = 1.46 \u00d7 10^-3 - 1.46 \u00d7 10^-3\\alpha This is a quadratic equation, from which \\alpha^2 - 7.3 \u00d7 10^-3 + 7.3 \u00d7 10^-3\\alpha = 0 using the quadratic formula \\alpha = [{- b \\pm\\surd(b^2 - 4ac)} / (2a)] The value for \\alpha can be found. \\alpha = [{-7.3 \u00d7 10^-3 \\pm \\surd{(7.3 \u00d7 10^-3)^2 - 4(-7.3 \u00d7 10^-3)}} / (2)] = [{- .0073 \\pm \\surd(0.0000533 + 0.0292)} / (2)] = [(- .0073 \\pm 0.17104) / (2)] This equation will give two values for \\alpha. But the negative answer for \\alpha is impossible. Therefore, \\alpha = + 0.081868 \\approx 8.2 \u00d7 10^-2 Note: An easier way of doing this is to assume that \\alpha << 1. Therefore, \\alpha^2 = 7.3 \u00d7 10^-3 and\\alpha = \\surd(7.3 \u00d7 10^-3) = 8.5 \u00d7 10^-2 The first method is more accurate; but either way is acceptable."}, "question": "task_1"}}, {"data": {"text": "Question:\nFor the reaction N_2O_4 (g) \\rightleftarrows 2NO_2 (g) at 300\\textdegreeK, K_pis 0.174. Calculate the apparent molecular weight of an equilibrium mixture of N_2O_4 and NO_2 formed by the dissociated of 1 mole of pure N_2O_4 at a total pressure of 1 atm and a temperature of 300\\textdegreeK.\n\nOptions:\nA. 80.2 g mole^-1\nB. 72.3 g mole^-1\nC.             76.4 g mole^-1\nD. 78.6 g mole^-1\n\nAnswer: C\n\nReference Solution:\nN_2O_4\\rightleftarrows2NO_2 number of moles present initially: 1 0 number of moles present at a equilibrium: (1 - \\alpha) 2\\alpha Observe that \\alpha is the degree of dissociation. The total number of moles at equilibrium is n_total= (1 - \\alpha) + 2 \\alpha orn_total= (1 + \\alpha) The equilibrium constant expression is K_p= [{P_(NO)2^2} / {P_(N)2(O)4}] = [{X_(NO)2P_total}^2 / {X_(N)2(O)4P_total}] = [{(2\\alpha / (1 + \\alpha))^2 P_total^2} / {((1 - \\alpha) / (1 + \\alpha))P_total}] = 0.174 = [{4\\alpha^2 / {(1 + \\alpha) (1 + \\alpha)}} / {(1 - \\alpha) / (1 + \\alpha)}]P_total = 0.174 = [{4\\alpha^2 (1)} / {(1 + \\alpha) (1 - \\alpha)}] = 0.174 K_p= [4\\alpha^2 / (1 - \\alpha^2)] = 0.174 4\\alpha^2 = 0.174 - 0.174\\alpha^2 4.174\\alpha^2 = 0.174 \\alpha = \\surd{(0.174) / (4.174)} \\alpha = 0.204 Mole Fraction NO_2, X_(NO)2 = [(moles NO_2) / (total moles)] = [2\\alpha / (1 + \\alpha)] = [{2 (0.204)} / {1 + (0.204)}] X_(NO)2 = 0.339 Moles fraction N_2O_4, N_2O_4 = [(1 - \\alpha) / (1 + \\alpha)] = [{1 - (0.204)} / {1 + (0.204)}] X_(N)2(O)4 = 0.661 \\thereforeThe apparent molecular weight is = [M_(NO)2] [X_(NO)2] + [M_(N)2(O)4] (X_(N)2(O)4] = (46.0) (0.339) + (92.0) (0.661) = 76.4 g mole^-1", "ref_id": 4478, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "For the reaction N_2O_4 (g) \\rightleftarrows 2NO_2 (g) at 300\\textdegreeK, K_pis 0.174. Calculate the apparent molecular weight of an equilibrium mixture of N_2O_4 and NO_2 formed by the dissociated of 1 mole of pure N_2O_4 at a total pressure of 1 atm and a temperature of 300\\textdegreeK.", "options": ["80.2 g mole^-1", "72.3 g mole^-1", "76.4 g mole^-1", "78.6 g mole^-1"], "answer": "C", "solution": "N_2O_4\\rightleftarrows2NO_2 number of moles present initially: 1 0 number of moles present at a equilibrium: (1 - \\alpha) 2\\alpha Observe that \\alpha is the degree of dissociation. The total number of moles at equilibrium is n_total= (1 - \\alpha) + 2 \\alpha orn_total= (1 + \\alpha) The equilibrium constant expression is K_p= [{P_(NO)2^2} / {P_(N)2(O)4}] = [{X_(NO)2P_total}^2 / {X_(N)2(O)4P_total}] = [{(2\\alpha / (1 + \\alpha))^2 P_total^2} / {((1 - \\alpha) / (1 + \\alpha))P_total}] = 0.174 = [{4\\alpha^2 / {(1 + \\alpha) (1 + \\alpha)}} / {(1 - \\alpha) / (1 + \\alpha)}]P_total = 0.174 = [{4\\alpha^2 (1)} / {(1 + \\alpha) (1 - \\alpha)}] = 0.174 K_p= [4\\alpha^2 / (1 - \\alpha^2)] = 0.174 4\\alpha^2 = 0.174 - 0.174\\alpha^2 4.174\\alpha^2 = 0.174 \\alpha = \\surd{(0.174) / (4.174)} \\alpha = 0.204 Mole Fraction NO_2, X_(NO)2 = [(moles NO_2) / (total moles)] = [2\\alpha / (1 + \\alpha)] = [{2 (0.204)} / {1 + (0.204)}] X_(NO)2 = 0.339 Moles fraction N_2O_4, N_2O_4 = [(1 - \\alpha) / (1 + \\alpha)] = [{1 - (0.204)} / {1 + (0.204)}] X_(N)2(O)4 = 0.661 \\thereforeThe apparent molecular weight is = [M_(NO)2] [X_(NO)2] + [M_(N)2(O)4] (X_(N)2(O)4] = (46.0) (0.339) + (92.0) (0.661) = 76.4 g mole^-1"}, "question": "task_1"}}, {"data": {"text": "Question:\nFor the reaction AB^+ + B-^(k)1\\rightleftarrows_(k)-1 AB_2 The following data was obtained: C_AB(2),(mol/liter) 0.0015 0.008 0.04 0.08 0.12 0.20 0.30 \\tau \u00d7 10^3, s 4.57 2.62 1.36 1.00 0.83 0.65 0.54 Solve for the values of k, k_-1 and K. \\tau is the relaxation time.\n\nOptions:\nA. k_1 = 2.7 \u00d7 10^4(mol/liter)^-1 s^-1, k_-1 = 95 s^-1, K = 284\nB. k_1 = 1.8 \u00d7 10^4(mol/liter)^-1 s^-1, k_-1 = 80 s^-1, K = 250\nC.             k_1 = 2.2 \u00d7 10^4(mol/liter)^-1 s^-1, k_-1 = 100 s^-1, K = 270\nD. k_1 = 3.5 \u00d7 10^4(mol/liter)^-1 s^-1, k_-1 = 120 s^-1, K = 300\n\nAnswer: A\n\nReference Solution:\nThe rate equation for this system is (dC_A(B)2 / dt) = k_1C_AB + C_B- - k_-1C_A(B)2 At equilibrium, k_1C_AB+, eC_B-,e - k_-1 C_A(B)2,e = 0 For a small increase in C_A(B)2, \u2206C_A(B)2' what is written is C_A(B)2 = C_A(B)2,e+ \u2206C_A(B)2 C_B- = C_B-,e- \u2206C_A(B)2 C_AB+ = C_AB+,e- \u2206C_A(B)2 The rate equation for the decay of \u2206C_A(B)2 is (d\u2206C_A(B)2 / dt) = k_1(C_AB+,e - \u2206C_A(B)2)(C_B-,e - \u2206C_A(B)2) - k_-1(\u2206C_A(B)2,e + \u2206C_A(B)2) = k_1(C_AB+,e C_B-,e - C_B-,e \u2206CA(B)2- C_AB+,e \u2206C_A(B)2 + \u2206C^2_A(B)2) - k_-1(C_A(B)2,e + \u2206C_A(B)2) \\therefore (d\u2206C_A(B)2 / dt) = - (k_1C_AB+,e - k_1C_B-,e + k_-1) \u00d7 \u2206C_A(B)2(1) It is known that the displacement from equilibrium at time t is \u2206C_i = \u2206C_i,_0 e^-t/\\tau(2) where \u2206C_i,_0 = initial displacement from equilibrium. If equation (2) is differentiated then [{d(\u2206C_i)} / dt] = - \u2206C_i (1 / \\tau)(3) Comparing equation (3) to equation (1) gives (1 / \\tau) = k_-1 + k_1(C_AB+,e + C_B-,e) with (C_AB+,e = C_B-,e) and C_A(B)2,e = C_A(B)2[1 - (\\alpha / 100)] where C_A(B)2 = the total (associated and dissociated) concentration \\alpha = the percent dissociation when k is assumed to be large, \\alpha is small. K = (k_1 / k_-1) = [(C_A(B)2,e) / (C_AB+,e)^2] = [C_A(B)2 / (C_AB+)^2] The equation for the relaxation time is changed to the equa-tion (1 / \\tau) = k_-1 + 2(k_1k_-1)^1/2 C_A(B)2^1/2 In the figure shown before, (1 / \\tau) was plotted as a function of C^1/2_A(B)2 and a linear plot was obtained with a slope equal to 3200(mol/liter)^-1/2 s^-1 and an intercept equal to 95 s^-1. The intercept is equal to k_-1. k_1 = [slope / {2(k_-1)^1/2}] = [(3200) / {2(95)^1/2}]^2 = 2.7 \u00d7 10^4(mol/liter)^-1 s^-1 K = [(2.7 \u00d7 10^4) / 95] = 284", "ref_id": 4479, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "For the reaction AB^+ + B-^(k)1\\rightleftarrows_(k)-1 AB_2 The following data was obtained: C_AB(2),(mol/liter) 0.0015 0.008 0.04 0.08 0.12 0.20 0.30 \\tau \u00d7 10^3, s 4.57 2.62 1.36 1.00 0.83 0.65 0.54 Solve for the values of k, k_-1 and K. \\tau is the relaxation time.", "options": ["k_1 = 2.7 \u00d7 10^4(mol/liter)^-1 s^-1, k_-1 = 95 s^-1, K = 284", "k_1 = 1.8 \u00d7 10^4(mol/liter)^-1 s^-1, k_-1 = 80 s^-1, K = 250", "k_1 = 2.2 \u00d7 10^4(mol/liter)^-1 s^-1, k_-1 = 100 s^-1, K = 270", "k_1 = 3.5 \u00d7 10^4(mol/liter)^-1 s^-1, k_-1 = 120 s^-1, K = 300"], "answer": "A", "solution": "The rate equation for this system is (dC_A(B)2 / dt) = k_1C_AB + C_B- - k_-1C_A(B)2 At equilibrium, k_1C_AB+, eC_B-,e - k_-1 C_A(B)2,e = 0 For a small increase in C_A(B)2, \u2206C_A(B)2' what is written is C_A(B)2 = C_A(B)2,e+ \u2206C_A(B)2 C_B- = C_B-,e- \u2206C_A(B)2 C_AB+ = C_AB+,e- \u2206C_A(B)2 The rate equation for the decay of \u2206C_A(B)2 is (d\u2206C_A(B)2 / dt) = k_1(C_AB+,e - \u2206C_A(B)2)(C_B-,e - \u2206C_A(B)2) - k_-1(\u2206C_A(B)2,e + \u2206C_A(B)2) = k_1(C_AB+,e C_B-,e - C_B-,e \u2206CA(B)2- C_AB+,e \u2206C_A(B)2 + \u2206C^2_A(B)2) - k_-1(C_A(B)2,e + \u2206C_A(B)2) \\therefore (d\u2206C_A(B)2 / dt) = - (k_1C_AB+,e - k_1C_B-,e + k_-1) \u00d7 \u2206C_A(B)2(1) It is known that the displacement from equilibrium at time t is \u2206C_i = \u2206C_i,_0 e^-t/\\tau(2) where \u2206C_i,_0 = initial displacement from equilibrium. If equation (2) is differentiated then [{d(\u2206C_i)} / dt] = - \u2206C_i (1 / \\tau)(3) Comparing equation (3) to equation (1) gives (1 / \\tau) = k_-1 + k_1(C_AB+,e + C_B-,e) with (C_AB+,e = C_B-,e) and C_A(B)2,e = C_A(B)2[1 - (\\alpha / 100)] where C_A(B)2 = the total (associated and dissociated) concentration \\alpha = the percent dissociation when k is assumed to be large, \\alpha is small. K = (k_1 / k_-1) = [(C_A(B)2,e) / (C_AB+,e)^2] = [C_A(B)2 / (C_AB+)^2] The equation for the relaxation time is changed to the equa-tion (1 / \\tau) = k_-1 + 2(k_1k_-1)^1/2 C_A(B)2^1/2 In the figure shown before, (1 / \\tau) was plotted as a function of C^1/2_A(B)2 and a linear plot was obtained with a slope equal to 3200(mol/liter)^-1/2 s^-1 and an intercept equal to 95 s^-1. The intercept is equal to k_-1. k_1 = [slope / {2(k_-1)^1/2}] = [(3200) / {2(95)^1/2}]^2 = 2.7 \u00d7 10^4(mol/liter)^-1 s^-1 K = [(2.7 \u00d7 10^4) / 95] = 284"}, "question": "task_1"}}, {"data": {"text": "Question:\nFor anacetone(1)-methanol(2) system, the following boil-ing pointand equilibrium composition of the liquid and vapor phasewere measured at a pressure of 760 mm Hg: x_1y_1t / (\\textdegreeC)P_1\\textdegree/mm HgP_2\\textdegree/mm Hg 0.2800.42058.3819579 Calculate the activity coefficients of both components in a solutionof x_1 = 0.676. The boiling point of this solution is 55.70\\textdegreeC at 760 mm Hg.\n\nOptions:\nA. \\gamma_1 = 0.720 and \\gamma_2 = 0.280\nB. \\gamma_1 = 1.063 and \\gamma_2 = 1.352\nC.             \\gamma_1 = 0.676 and \\gamma_2 = 0.324\nD. \\gamma_1 = 1.3920 and \\gamma_2 = 1.0574\n\nAnswer: B\n\nReference Solution:\nThe activity coefficients as functions of the mole fraction are given by ln\\gamma_1 = (B_1 / RT) x_2^2 + (C_1 / RT) x_2^2(a) andln\\gamma_2 = [{B_1 + (3/2)C_1} / RT] x_1^2 - (C_1 / RT) x_1^3(b) The equations (a) and (b) would be a matter of direct substitution if theconstants B_1 and C_1 were known. So, this is not only a problem of computingthe activity coef-ficients but the constants also. The constants can be determined by using the given experimental dataand the equation \\gamma_i= [y_iP/ (x_iP_i\\textdegree)](1) where\\gamma_i= activity coefficient of componenti \\gamma_i= composition of the vapor phase of componenti x_i= composition of the liquid phase of componenti P = total pressure =760 mm Hg P_i\\textdegree = vapor pressure of componenti \\gamma_1 = [y_1P / (x_1P_1\\textdegree)] = [{(0.420) (760)} / {(0.280) (819)}] = [(319.2) / (229.32)] \\therefore\\gamma_1 = 1.3920 \\gamma_2 = [y_2P / (x_2P_2\\textdegree)] = [{(1 - y_1)P} / {(1 - x_1)P_2\\textdegree}] = [{(0.580) (760)} / {(0.720) (579)}] = [(440.8) / (416.88)] \\therefore\\gamma_2 = 1.0574 Note that these are not the required activity coeffi-cients. Now from equations(a) and (b) ln1.3920 = (B_1 / RT) (0.720)^2 + (C_1 / RT) (0.720)^3 andln1.0574 = [{B_1 + (3/2)C_1} / RT] (0.280)^2 - (C_1 / RT) (0.280)^3 whichbecomes 0.3307 = [{B_1(0.5184)} / {(R)(331.3)}] + [{C_1 (0.3732)} / {(R)(331/3)}](2) and0.0558 =[{B_1 + (3/2)C_1} / {R (331.3)}] (0.0784) - [{C_1 (0.02195)} / {R (331.3)}](3) In this case, R = 1.987. Solving equations (2) and (3) simultaneously, gives B_1 = 349.9 andC_1 = 97.6 Using these constants in equations (a) and (b) together with x_1 = 0.676 andx_2 = 1 - x_1 = 1 - 0.676 = 0.324 gives \\gamma_1 = 1.063and\\gamma_2 = 1.352", "ref_id": 4480, "meta_info": {"subject": "chemistry.csv", "src": "stemez-PhysicalChemistry", "question": "For anacetone(1)-methanol(2) system, the following boil-ing pointand equilibrium composition of the liquid and vapor phasewere measured at a pressure of 760 mm Hg: x_1y_1t / (\\textdegreeC)P_1\\textdegree/mm HgP_2\\textdegree/mm Hg 0.2800.42058.3819579 Calculate the activity coefficients of both components in a solutionof x_1 = 0.676. The boiling point of this solution is 55.70\\textdegreeC at 760 mm Hg.", "options": ["\\gamma_1 = 0.720 and \\gamma_2 = 0.280", "\\gamma_1 = 1.063 and \\gamma_2 = 1.352", "\\gamma_1 = 0.676 and \\gamma_2 = 0.324", "\\gamma_1 = 1.3920 and \\gamma_2 = 1.0574"], "answer": "B", "solution": "The activity coefficients as functions of the mole fraction are given by ln\\gamma_1 = (B_1 / RT) x_2^2 + (C_1 / RT) x_2^2(a) andln\\gamma_2 = [{B_1 + (3/2)C_1} / RT] x_1^2 - (C_1 / RT) x_1^3(b) The equations (a) and (b) would be a matter of direct substitution if theconstants B_1 and C_1 were known. So, this is not only a problem of computingthe activity coef-ficients but the constants also. The constants can be determined by using the given experimental dataand the equation \\gamma_i= [y_iP/ (x_iP_i\\textdegree)](1) where\\gamma_i= activity coefficient of componenti \\gamma_i= composition of the vapor phase of componenti x_i= composition of the liquid phase of componenti P = total pressure =760 mm Hg P_i\\textdegree = vapor pressure of componenti \\gamma_1 = [y_1P / (x_1P_1\\textdegree)] = [{(0.420) (760)} / {(0.280) (819)}] = [(319.2) / (229.32)] \\therefore\\gamma_1 = 1.3920 \\gamma_2 = [y_2P / (x_2P_2\\textdegree)] = [{(1 - y_1)P} / {(1 - x_1)P_2\\textdegree}] = [{(0.580) (760)} / {(0.720) (579)}] = [(440.8) / (416.88)] \\therefore\\gamma_2 = 1.0574 Note that these are not the required activity coeffi-cients. Now from equations(a) and (b) ln1.3920 = (B_1 / RT) (0.720)^2 + (C_1 / RT) (0.720)^3 andln1.0574 = [{B_1 + (3/2)C_1} / RT] (0.280)^2 - (C_1 / RT) (0.280)^3 whichbecomes 0.3307 = [{B_1(0.5184)} / {(R)(331.3)}] + [{C_1 (0.3732)} / {(R)(331/3)}](2) and0.0558 =[{B_1 + (3/2)C_1} / {R (331.3)}] (0.0784) - [{C_1 (0.02195)} / {R (331.3)}](3) In this case, R = 1.987. Solving equations (2) and (3) simultaneously, gives B_1 = 349.9 andC_1 = 97.6 Using these constants in equations (a) and (b) together with x_1 = 0.676 andx_2 = 1 - x_1 = 1 - 0.676 = 0.324 gives \\gamma_1 = 1.063and\\gamma_2 = 1.352"}, "question": "task_1"}}, {"data": {"text": "Question:\nCompute and print out a table of the function Y = 1/(4 - X^2) inthe range 0 \\leq X < 2 using a variable step interval. Start out witha step width of 0.1 (i.e. X = 0,0.1, 0.2...1.9). Reduce the stepwidth by a factor of 10 whenever X would reach 2 duringnext iteration, or whenever two successive values differby more than 10. Stop the tabulation when Y reaches 100. Details of printout: The x and Y values are to be printedin two parallel columns, in the 2nd and 4th field. Headings are to be printed as shown below. An extra blank lineis to be inserted whenever the step interval is changed. FUNCTION TABLE OF F (X) = 1/(4 - X\\textasteriskcentered\\textasteriskcentered2) 2 blank lines \\rightarrow { VALUE OF XVALUE OF F(X) 2 blank lines{ 0\\textbullet00000E + 002\\textbullet50000E - 01 \\textbullet\\textbullet \\textbullet\\textbullet \\textbullet\\textbullet \\textbullet\\textbullet\n\nOptions:\nA. Y = 1/(4 + X^2)\nB. Y = 1/(4 - X^2)\nC.             Y = 1/(4 - X^3)\nD. Y = 1/(4 - X)\n\nAnswer: B\n\nReference Solution:\nThis problem deals with two aspects. (1) Formatting the output in desired form; Using LIST-directed input-outputmethods, assuming that at this point we are unaware of the EDIT form of input output. (2) Computation of Y. 1) Formatting: The first heading FUNCTION TABLE OF F (X) = 1/(4 - X\\textasteriskcentered\\textasteriskcentered2) has to be placed in the center of page. We can have 132 letters printed in a single line. 132 characters are dividedin five or six fields. Assuming a division of five fields each field has 26 characters; the center of the page would be at the 132/2 = 66th character. Now, the heading is to be centered and it has 37 characters includingblanks. Hence the 19th character i.e. letter F of F (x) must be at thecenter. The heading will be between the 2nd and 3rd fields. Leaving thefirst field, we are left with 40 characters to the center i.e. 66 - 26 = 40. Out of 40, 18 characters are towards the left i.e. the se-cond field as used bythe heading. So we have to insert 40 - 28 = 22 blanks in the PUT statement. UsingSKIP(0) and the same number of blanks followed by (37) - will underline the heading. As two blanks are required between heading & subheading, useSKIP(2) statement. The value of X and value of F(X) areto be in the 2nd and 4th fields. Hence, in the PUT statement we SKIP the1st & 3rd field by using the null string i.e. '' 2) To compute Y, we are given Y = 1/(4 - X\\textasteriskcentered\\textasteriskcentered2). Use the DO loop to havedifferent values of X between 0 \\leq X < 2. First we increment X in steps of 0.1. At every step we store the calculatedvalue of Y in Y_OLD. Increment X and compute Y. Take the differenceof (Y-Y_OLD). If this difference is \\leq10 we store this Y as computedY in Y_OLD, increment X and proceed. At the same time we checkfor X<2. When X = 2 or (Y-Y_OLD) >10, reduce the step width by a factorof 10. Also we check if Y<100. When this fails we exit the loop and endthe program. The program is as follows. TABLE:PROCEDUREOPTIONS(MAIN); DCL( (X,Y,XINT,Y_OLD) INIT (0) , (X1,XFIN,S)) FIXED(9,5); PUTLIST('' , 'FUNCTION TABLE OF F(X) = 1/(4 - X\\textasteriskcentered\\textasteriskcentered2) ') ; PUT LIST ('' ,')-----------------------') SKIP (0); PUTSKIP(2); PUTLIST('' , 'VALUE OF X' , '', ' VALUE OF F (X) ') ; PUT LIST ('' , '-------' , '', ' ----- ----' ); SKIP(0); PUT SKIP (2);/\\textasteriskcentered WITH ABOVE STATEMENTS WE FORM THE TABLE \\textasteriskcentered/ XFIN = 2; S = 0.1;/\\textasteriskcentered S IS INCREMENT STEP OF X \\textasteriskcentered/ LOOP1:DO WHILE (Y<100); LOOP2:DO X=XINT TO (XFIN-S) BY SWHILE((Y-Y_OLD)\\leq10) ; Y_OLD =Y ;/\\textasteriskcentered STORE PREVIOUS VALUE OF Y \\textasteriskcentered/ Y = 1/(4-X\\textasteriskcenteredX); /\\textasteriskcentered COMPUTE Y \\textasteriskcentered/ IF Y>100 THEN STOP; PUTLIST(' ' , X,' ',Y) SKIP; X1 = X; END LOOP2; S = S/10;/\\textasteriskcentered REDUCE S BY FACTOR OF 10) XINT = X1 + S /\\textasteriskcentered REINITIALIZE XINT \\textasteriskcentered/ Y_OLD=Y; PUT SKIP;/\\textasteriskcentered EXTRA BLANK INSERTED WHEN STEP INTERVAL IS CHANGED \\textasteriskcentered/ END LOOP1; END TABLE; During the first run XINT = 0, S = 0.1/ XFIN-S = 1.9 there-fore LOOP2: DO X = 0 TO 1.9 BY 0.1 WHILE ((Y-Y_OLD)>10). We go out of this loop either when X = 2 or Y-Y_OLD) >10. Now X1 holds the value of X, when we exit from the loop. Say for the first runX1 = 1.9, X became = 2 & we exit out of LOOP2. Now S = S/10 = .01. XINT = X1 + S = 1.91 ENTER LOOP2 again whence LOOP2: DO X = 1.91 TO 2 BY .01 WHILE ((Y-Y_OLD)<10); andgo on until Y becomes \\geq100. We go out of LOOP1 and proceed to END;", "ref_id": 4481, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Compute and print out a table of the function Y = 1/(4 - X^2) inthe range 0 \\leq X < 2 using a variable step interval. Start out witha step width of 0.1 (i.e. X = 0,0.1, 0.2...1.9). Reduce the stepwidth by a factor of 10 whenever X would reach 2 duringnext iteration, or whenever two successive values differby more than 10. Stop the tabulation when Y reaches 100. Details of printout: The x and Y values are to be printedin two parallel columns, in the 2nd and 4th field. Headings are to be printed as shown below. An extra blank lineis to be inserted whenever the step interval is changed. FUNCTION TABLE OF F (X) = 1/(4 - X\\textasteriskcentered\\textasteriskcentered2) 2 blank lines \\rightarrow { VALUE OF XVALUE OF F(X) 2 blank lines{ 0\\textbullet00000E + 002\\textbullet50000E - 01 \\textbullet\\textbullet \\textbullet\\textbullet \\textbullet\\textbullet \\textbullet\\textbullet", "options": ["Y = 1/(4 + X^2)", "Y = 1/(4 - X^2)", "Y = 1/(4 - X^3)", "Y = 1/(4 - X)"], "answer": "B", "solution": "This problem deals with two aspects. (1) Formatting the output in desired form; Using LIST-directed input-outputmethods, assuming that at this point we are unaware of the EDIT form of input output. (2) Computation of Y. 1) Formatting: The first heading FUNCTION TABLE OF F (X) = 1/(4 - X\\textasteriskcentered\\textasteriskcentered2) has to be placed in the center of page. We can have 132 letters printed in a single line. 132 characters are dividedin five or six fields. Assuming a division of five fields each field has 26 characters; the center of the page would be at the 132/2 = 66th character. Now, the heading is to be centered and it has 37 characters includingblanks. Hence the 19th character i.e. letter F of F (x) must be at thecenter. The heading will be between the 2nd and 3rd fields. Leaving thefirst field, we are left with 40 characters to the center i.e. 66 - 26 = 40. Out of 40, 18 characters are towards the left i.e. the se-cond field as used bythe heading. So we have to insert 40 - 28 = 22 blanks in the PUT statement. UsingSKIP(0) and the same number of blanks followed by (37) - will underline the heading. As two blanks are required between heading & subheading, useSKIP(2) statement. The value of X and value of F(X) areto be in the 2nd and 4th fields. Hence, in the PUT statement we SKIP the1st & 3rd field by using the null string i.e. '' 2) To compute Y, we are given Y = 1/(4 - X\\textasteriskcentered\\textasteriskcentered2). Use the DO loop to havedifferent values of X between 0 \\leq X < 2. First we increment X in steps of 0.1. At every step we store the calculatedvalue of Y in Y_OLD. Increment X and compute Y. Take the differenceof (Y-Y_OLD). If this difference is \\leq10 we store this Y as computedY in Y_OLD, increment X and proceed. At the same time we checkfor X<2. When X = 2 or (Y-Y_OLD) >10, reduce the step width by a factorof 10. Also we check if Y<100. When this fails we exit the loop and endthe program. The program is as follows. TABLE:PROCEDUREOPTIONS(MAIN); DCL( (X,Y,XINT,Y_OLD) INIT (0) , (X1,XFIN,S)) FIXED(9,5); PUTLIST('' , 'FUNCTION TABLE OF F(X) = 1/(4 - X\\textasteriskcentered\\textasteriskcentered2) ') ; PUT LIST ('' ,')-----------------------') SKIP (0); PUTSKIP(2); PUTLIST('' , 'VALUE OF X' , '', ' VALUE OF F (X) ') ; PUT LIST ('' , '-------' , '', ' ----- ----' ); SKIP(0); PUT SKIP (2);/\\textasteriskcentered WITH ABOVE STATEMENTS WE FORM THE TABLE \\textasteriskcentered/ XFIN = 2; S = 0.1;/\\textasteriskcentered S IS INCREMENT STEP OF X \\textasteriskcentered/ LOOP1:DO WHILE (Y<100); LOOP2:DO X=XINT TO (XFIN-S) BY SWHILE((Y-Y_OLD)\\leq10) ; Y_OLD =Y ;/\\textasteriskcentered STORE PREVIOUS VALUE OF Y \\textasteriskcentered/ Y = 1/(4-X\\textasteriskcenteredX); /\\textasteriskcentered COMPUTE Y \\textasteriskcentered/ IF Y>100 THEN STOP; PUTLIST(' ' , X,' ',Y) SKIP; X1 = X; END LOOP2; S = S/10;/\\textasteriskcentered REDUCE S BY FACTOR OF 10) XINT = X1 + S /\\textasteriskcentered REINITIALIZE XINT \\textasteriskcentered/ Y_OLD=Y; PUT SKIP;/\\textasteriskcentered EXTRA BLANK INSERTED WHEN STEP INTERVAL IS CHANGED \\textasteriskcentered/ END LOOP1; END TABLE; During the first run XINT = 0, S = 0.1/ XFIN-S = 1.9 there-fore LOOP2: DO X = 0 TO 1.9 BY 0.1 WHILE ((Y-Y_OLD)>10). We go out of this loop either when X = 2 or Y-Y_OLD) >10. Now X1 holds the value of X, when we exit from the loop. Say for the first runX1 = 1.9, X became = 2 & we exit out of LOOP2. Now S = S/10 = .01. XINT = X1 + S = 1.91 ENTER LOOP2 again whence LOOP2: DO X = 1.91 TO 2 BY .01 WHILE ((Y-Y_OLD)<10); andgo on until Y becomes \\geq100. We go out of LOOP1 and proceed to END;"}, "question": "task_1"}}, {"data": {"text": "Question:\nWhat is the structure of a Pascal program?\n\nOptions:\nA. A Pascal program is comprised of only Subroutine Declarations and Main body.\nB. A Pascal program is made up of only Constant definitions and Variable Declarations.\nC.             A Pascal program consist of sections such as outputfiles, Label Declarations, Constant definitions, TYPE Definitions, Variable Declarations, Subroutine Declarations, and Main body of the program.\nD. A Pascal program consists only of Variable Declarations and Main body.\n\nAnswer: C\n\nReference Solution:\nA Pascal program consist of the following sections outputfiles. Programexample (input, output): (All underlined words are reserved words and are required in a given situation .) 2.Label Declarations (optional) Specifies labels used in the program. Label 5 , 20; 3.Constant definitions (optional) Defines constants used in the program. CONSTmax = 80, tax = 0.0825; 4.TYPE Definitions (optional) Defines data structures used in the program TYPE fixed= integer ; string= PACKED ARRAY [1 . .MAX ]of CHAR 5.Variable Declarations Declares variables used in the program and their type. VAR X :integer ; TEST :BOOLEAN ; NAME :STRING ; 6.Subroutine Declarations (optional) Declares function and procedures internal to the mainprogram . Each subroutine may contain including othersubroutines . PROCEDURESexample 1 (varparam1: real); FUNCTIONEXAMPLES 2 (param1: integer): integer; 7.Main body of the program always has the following form: BEGIN \\bullet \\bullet \\bullet \\bullet \\bullet Some Other Statements \\bullet \\bullet \\bullet END .", "ref_id": 4482, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "What is the structure of a Pascal program?", "options": ["A Pascal program is comprised of only Subroutine Declarations and Main body.", "A Pascal program is made up of only Constant definitions and Variable Declarations.", "A Pascal program consist of sections such as outputfiles, Label Declarations, Constant definitions, TYPE Definitions, Variable Declarations, Subroutine Declarations, and Main body of the program.", "A Pascal program consists only of Variable Declarations and Main body."], "answer": "C", "solution": "A Pascal program consist of the following sections outputfiles. Programexample (input, output): (All underlined words are reserved words and are required in a given situation .) 2.Label Declarations (optional) Specifies labels used in the program. Label 5 , 20; 3.Constant definitions (optional) Defines constants used in the program. CONSTmax = 80, tax = 0.0825; 4.TYPE Definitions (optional) Defines data structures used in the program TYPE fixed= integer ; string= PACKED ARRAY [1 . .MAX ]of CHAR 5.Variable Declarations Declares variables used in the program and their type. VAR X :integer ; TEST :BOOLEAN ; NAME :STRING ; 6.Subroutine Declarations (optional) Declares function and procedures internal to the mainprogram . Each subroutine may contain including othersubroutines . PROCEDURESexample 1 (varparam1: real); FUNCTIONEXAMPLES 2 (param1: integer): integer; 7.Main body of the program always has the following form: BEGIN \\bullet \\bullet \\bullet \\bullet \\bullet Some Other Statements \\bullet \\bullet \\bullet END ."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program which reads an input text and prints out the number of occurences of each adjacent letter pair which appears within the text.\n\nOptions:\nA. PROGRAM NUMBEROFOCCURENCESOFADJACENTPAIRS\nB. PROGRAM LETTERCOUNT\nC.             PROGRAM ADJACENTLETTERANALYSIS\nD. PROGRAM TEXTANALYSIS\n\nAnswer: A\n\nReference Solution:\nPROGRAM NUMBEROFOCCURENCESOFADJACENTPAIRS (INPUT, OUTPUT ) ; (\\textasteriskcentered This program, reads an input text and \\textasteriskcentered) (\\textasteriskcentered prints out the number of occurences of \\textasteriskcentered) (\\textasteriskcentered each adjacent letter pair which appears within \\textasteriskcentered) (\\textasteriskcentered the text. This program assumes that the \\textasteriskcentered) (\\textasteriskcentered letters A to Z are 26 consecutive values \\textasteriskcentered) (\\textasteriskcentered of the type char.\\textasteriskcentered) TYPE letter = 'A'. . 'Z'; VAR COUNT: Array [Letter, Letter] of o. . Maxint; FIRST, SECOND ; LETTER ; Thisch, Lastch : char; Last was letter : Boolean; BEGIN \\textasciigraveFor First: ='A' To 'Z' DO For second: ='A' To 'Z' DO COUNT [First, second]:= o; While not EOF (input) DO BEGIN Last was letter : = False; (\\textasteriskcentered At the start of a line \\textasteriskcentered) While not EOLN (Input) DO BEGIN Read (Thisch); write (Thisch) If (Thisch>='A') and (Thisch<='Z') Then if last was letter Then count[Lastch, Thisch]:=count[Lastch, Thisch] + 1 Else lastwasletter: = True Else lastwasletter:=False; lastch:=Thisch End; Read1n; write1n End; write1n; write1n; write1n ('occurences of letter pairs......'); For First: ='A' to 'Z' DO For second : = 'A' to ' Z ' DO IF COUNT [First, second]<>o Then write1n (First, second, , count[First, second]:4) End.", "ref_id": 4483, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program which reads an input text and prints out the number of occurences of each adjacent letter pair which appears within the text.", "options": ["PROGRAM NUMBEROFOCCURENCESOFADJACENTPAIRS", "PROGRAM LETTERCOUNT", "PROGRAM ADJACENTLETTERANALYSIS", "PROGRAM TEXTANALYSIS"], "answer": "A", "solution": "PROGRAM NUMBEROFOCCURENCESOFADJACENTPAIRS (INPUT, OUTPUT ) ; (\\textasteriskcentered This program, reads an input text and \\textasteriskcentered) (\\textasteriskcentered prints out the number of occurences of \\textasteriskcentered) (\\textasteriskcentered each adjacent letter pair which appears within \\textasteriskcentered) (\\textasteriskcentered the text. This program assumes that the \\textasteriskcentered) (\\textasteriskcentered letters A to Z are 26 consecutive values \\textasteriskcentered) (\\textasteriskcentered of the type char.\\textasteriskcentered) TYPE letter = 'A'. . 'Z'; VAR COUNT: Array [Letter, Letter] of o. . Maxint; FIRST, SECOND ; LETTER ; Thisch, Lastch : char; Last was letter : Boolean; BEGIN \\textasciigraveFor First: ='A' To 'Z' DO For second: ='A' To 'Z' DO COUNT [First, second]:= o; While not EOF (input) DO BEGIN Last was letter : = False; (\\textasteriskcentered At the start of a line \\textasteriskcentered) While not EOLN (Input) DO BEGIN Read (Thisch); write (Thisch) If (Thisch>='A') and (Thisch<='Z') Then if last was letter Then count[Lastch, Thisch]:=count[Lastch, Thisch] + 1 Else lastwasletter: = True Else lastwasletter:=False; lastch:=Thisch End; Read1n; write1n End; write1n; write1n; write1n ('occurences of letter pairs......'); For First: ='A' to 'Z' DO For second : = 'A' to ' Z ' DO IF COUNT [First, second]<>o Then write1n (First, second, , count[First, second]:4) End."}, "question": "task_1"}}, {"data": {"text": "Question:\nWhat is the output of the following program? main ( ) { intx = 5; inty = 5; printf(\"%d%d\\textbackslashn\", x++, x); printf(\"%d%d\\textbackslashn\", ++y, y); }\n\nOptions:\nA. 56, 65\nB. 65, 56\nC.             55, 66\nD. 66, 55\n\nAnswer: A\n\nReference Solution:\nHere it is important to distinguish between the two styles of increment operations. 1) x++: Use variable x first and then increment afterwards,eg. Let z = x++; means z = x; x = x + 1; 2) ++y: Increment the variable y first and then use it afterwards.eg. Let z = ++y; means y = y + 1; z = y; Therefore the output is as follows: 56/\\textasteriskcentered 1stprintf\\textasteriskcentered/ 65/\\textasteriskcentered 2ndprintf\\textasteriskcentered/", "ref_id": 4484, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "What is the output of the following program? main ( ) { intx = 5; inty = 5; printf(\"%d%d\\textbackslashn\", x++, x); printf(\"%d%d\\textbackslashn\", ++y, y); }", "options": ["56, 65", "65, 56", "55, 66", "66, 55"], "answer": "A", "solution": "Here it is important to distinguish between the two styles of increment operations. 1) x++: Use variable x first and then increment afterwards,eg. Let z = x++; means z = x; x = x + 1; 2) ++y: Increment the variable y first and then use it afterwards.eg. Let z = ++y; means y = y + 1; z = y; Therefore the output is as follows: 56/\\textasteriskcentered 1stprintf\\textasteriskcentered/ 65/\\textasteriskcentered 2ndprintf\\textasteriskcentered/"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program that usesforloop to output the square of numbers 1 through 100.\n\nOptions:\nA. main ( ) { int number; int square _ of _ number; for (number = 1; number < = 50; number++) square _ of _ number = number * number; printf (\"The square of %d is %d\textbackslashn\", number, square _ of _ number); }\nB. main ( ) { int number; int square _ of _ number; for (number = 1; number < = 100; number++) square _ of _ number = number + number; printf (\"The square of %d is %d\textbackslashn\", number, square _ of _ number); }\nC.             main ( ) { int number; int square _ of _ number; while (number = 1; number < = 100; number++) square _ of _ number = number * number; printf (\"The square of %d is %d\textbackslashn\", number, square _ of _ number); }\nD. main ( ) { int number; int square _ of _ number; for (number = 1; number < = 100; number++) square _ of _ number = number * number; printf (\"The square of %d is %d\textbackslashn\", number, square _ of _ number); }\n\nAnswer: D\n\nReference Solution:\nmain ( ) { int number; /\\textasteriskcenteredinteger whose square is calculate\\textasteriskcentered/ int square _ of _ number; /\\textasteriskcenteredstorage for square of number\\textasteriskcentered/ for (number = 1; number < = 100; number++) /\\textasteriskcenteredfor number 1 till 100 do the following\\textasteriskcentered/. /\\textasteriskcenteredincrement number only after executing following state-ments \\textasteriskcentered/ square _ of _ number = number \\textasteriskcentered number; printf (\"The square of %d is %d\\textbackslashn\", number, square _ of _ number); }", "ref_id": 4485, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program that usesforloop to output the square of numbers 1 through 100.", "options": ["main ( ) { int number; int square _ of _ number; for (number = 1; number < = 50; number++) square _ of _ number = number * number; printf (\"The square of %d is %d\textbackslashn\", number, square _ of _ number); }", "main ( ) { int number; int square _ of _ number; for (number = 1; number < = 100; number++) square _ of _ number = number + number; printf (\"The square of %d is %d\textbackslashn\", number, square _ of _ number); }", "main ( ) { int number; int square _ of _ number; while (number = 1; number < = 100; number++) square _ of _ number = number * number; printf (\"The square of %d is %d\textbackslashn\", number, square _ of _ number); }", "main ( ) { int number; int square _ of _ number; for (number = 1; number < = 100; number++) square _ of _ number = number * number; printf (\"The square of %d is %d\textbackslashn\", number, square _ of _ number); }"], "answer": "D", "solution": "main ( ) { int number; /\\textasteriskcenteredinteger whose square is calculate\\textasteriskcentered/ int square _ of _ number; /\\textasteriskcenteredstorage for square of number\\textasteriskcentered/ for (number = 1; number < = 100; number++) /\\textasteriskcenteredfor number 1 till 100 do the following\\textasteriskcentered/. /\\textasteriskcenteredincrement number only after executing following state-ments \\textasteriskcentered/ square _ of _ number = number \\textasteriskcentered number; printf (\"The square of %d is %d\\textbackslashn\", number, square _ of _ number); }"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program that finds, for integers m and n, the quotient and remainder when m is divided by n.\n\nOptions:\nA. The program reads two integers m and n, computes the multiplication and division of m/n, and outputs the results\nB. The program reads two integers m and n, computes the sum and difference of m/n, and outputs the results\nC.             The program reads two integers m and n, computes the quotient and remainder of m/n, and outputs the results\nD. The program reads two integers m and n, computes the square and cube of m/n, and outputs the results\n\nAnswer: C\n\nReference Solution:\nThe Fundamental Theorem of Arithmetic states that if m and n are any integers with n \\not = 0, then there exist unique integers q and r, 0 \\leq r < \u2502n\u2502 such that m =qn+ r. As examples: 1) m = 43 n = 5; using the division algorithm q = 8 r = 3 and m =nq+ r, or 43 = 8(5) + 3. 2) m = -43 n = -5 q=9 r = 2 m =nq+ r, or -43 = 9(-5) + 2 Here r = 2 < \u2502n\u2502 = \u2502-5\u2502 = 5 . 3) m = 8 n = 32; 8 = 0(32) + 8 . The following computer program accepts any integers m, n (n \\not = 0) and computes the quotient and remainder of m/n. CINPUT INTEGERS M AND N. IF N IS CZERO, READ ANOTHER PAIR. 5READ (5,10) M,N IF (N.EQ.0) GO TO 5 10FORMAT (2I6) CFIND THE QUOTIENT IQ = INT (M/N) CFIND THE REMAINDER IR = M - IQ\\textasteriskcenteredN COUTPUT RESULTS WRITE (6,60) M,N 60FORMAT (1HO, 10HDIVIDEND =, I6, 10H DIVISOR =, I8) 70WRITE (6,80) IQ, IR 80FORMAT (1H, 10HQU0TIENT =, I6, 12H REMAINDER =, I6) 90STOP END", "ref_id": 4486, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program that finds, for integers m and n, the quotient and remainder when m is divided by n.", "options": ["The program reads two integers m and n, computes the multiplication and division of m/n, and outputs the results", "The program reads two integers m and n, computes the sum and difference of m/n, and outputs the results", "The program reads two integers m and n, computes the quotient and remainder of m/n, and outputs the results", "The program reads two integers m and n, computes the square and cube of m/n, and outputs the results"], "answer": "C", "solution": "The Fundamental Theorem of Arithmetic states that if m and n are any integers with n \\not = 0, then there exist unique integers q and r, 0 \\leq r < \u2502n\u2502 such that m =qn+ r. As examples: 1) m = 43 n = 5; using the division algorithm q = 8 r = 3 and m =nq+ r, or 43 = 8(5) + 3. 2) m = -43 n = -5 q=9 r = 2 m =nq+ r, or -43 = 9(-5) + 2 Here r = 2 < \u2502n\u2502 = \u2502-5\u2502 = 5 . 3) m = 8 n = 32; 8 = 0(32) + 8 . The following computer program accepts any integers m, n (n \\not = 0) and computes the quotient and remainder of m/n. CINPUT INTEGERS M AND N. IF N IS CZERO, READ ANOTHER PAIR. 5READ (5,10) M,N IF (N.EQ.0) GO TO 5 10FORMAT (2I6) CFIND THE QUOTIENT IQ = INT (M/N) CFIND THE REMAINDER IR = M - IQ\\textasteriskcenteredN COUTPUT RESULTS WRITE (6,60) M,N 60FORMAT (1HO, 10HDIVIDEND =, I6, 10H DIVISOR =, I8) 70WRITE (6,80) IQ, IR 80FORMAT (1H, 10HQU0TIENT =, I6, 12H REMAINDER =, I6) 90STOP END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a FORTRAN program to solve linear congruences of the form ax = b (mod m).\n\nOptions:\nA. FORTRAN program provided in the solution\nB. C++ program to solve linear congruences\nC.             Python program to solve linear congruences\nD. Java program to solve linear congruences\n\nAnswer: A\n\nReference Solution:\nTwo integers are said to be congruent modulo an integer m if their difference is divisible by m. Thus a \\equiv b (mod a) means (a-b)/m is an integer. For example, 3 \\equiv 8 (mod 5) since [(3 - 8) / 5] = (-5/5) = -1 (an integer). Congruences are similar to equations and linear congruences are similar to linear equations. The linear congruence ax \\equiv b(mod m) has a solution if and only if (a, m) (the greatest common divider of a and m) divides b,i.e., (a, m)/b. Furthermore if x0 is such a solution, then x \\equiv x0 (mod m/(a, m)) is also a solution. For example, solve the linear congruence 8x \\equiv 4 (mod 6).(1) By definition, (1) means (8x - 4) / 6 = 3 integer When x = 2, 8x - 4 = 12, and six divides twelve. Now, (8,6) = 2. Hence any x satisfying x \\equiv 2 (mod 6/(8,6)), or x \\equiv 2 (mod 3) is also a solution of 8x \\equiv 4 (mod 6). Thus, 5,8,-1,-4,.. .etc. are solutions. To prove the above (first part) note that ax \\equiv b (mod m) means (ax - b) / m = r (an integer), or ax - b = rm or ax - rm = b.(2) Equation (2) is a linear Diophantine equation and is solvable for r and x if and only if (a, m) divides b. The strategy in the presented computer program is as follows: 1) Read in values of a, b and m (< 10000). 2) Call a subroutine that solves the linear Diophantine equation described above. 3) Return to main program. The program terminates when the value of M read in is less than, or equal to 0 . 5BEAD (5,10) IA,M, IB 10FORMAT (3I4) IF (M.LE.O) GO TO 99 20CALL GLDE(IA,M,IB,M1,N1,NA,INDEX) IF (INDEX) 30,30,22 22WRITE (6,25) 25FORMAT (1HO,45HNO VALUE OF X SATISFIES 1THE LINEAR CONGRUENCE) GO TO 40 30WRITE (6,35) IX 35FORMAT (1HO.3HX =, I6, 32H SATISFIES THE LINEAR CONGRUENCE) 40WRITE (6,44), IA,IB,M 44FORMAT (1H , I6, 5HX (=),I16, 4H(MOD,I6,1H)) GO TO 5 99STOP END SUBROUTINE GLDE(M,N,K,M1,N1,NA,INDEX) CTHIS SUBROUTINE RECEIVES INTEGERS FROM CMAIN PROGRAM. FIRST, ANOTHER SUBROUTINE LDE IS CALLED, THAT FINDS THE GCD NA OF (N,M), CAND DETERMINES VALUES M1 AND N1 THAT SATISFY THE LINEAD CDIOPHANTINE EQUATION M\\textasteriskcenteredM1 + N \\textasteriskcentered N1 = K. CTHE VALUE OF M1 RETURNED HAS THE LEAST CPOSSIBLE ABSOLUTE VALUE. INDEX IS SET CTO 0 IF A SOLUTION EXISTS, TO / IF NOT, CAND TO -1 IF THE VALUE RECEIVED FOR CK IS, SAY, 30000. USE K = 30000 IF A CSOLUTION TO THE EQUATION CM\\textasteriskcenteredM1 + N\\textasteriskcenteredN1 = NA (GCD OF M AND N) CIS DESIRED. NOTE: THE NUMBER 30000 CIS SOMEWHAT ARBITRARILY CHOSEN. IT IS CASSUMED THAT ONE WOULD NEVER WISH CTO SOLVE THE EQUATION MX + NY = 30000. CALL LDE (M,N,M1,N1,NA) IF (K - 30000) 22,21,22 21INDEX = -1 K = NA GO TO 27 22MULT = K/NA IF (K - MULT \\textasteriskcentered NA) 23,25,23 23INDEX = 1 RETURN 25Ml = M1 \\textasteriskcentered MULT N1 = N1 \\textasteriskcentered MULT 27MTEST = M1 ND = N/NA MD = M/NA MX = M1 30MX = MX + ND IF (IABS(MX) - LABS (M1)) 35,40,40 35M1 = MX N1 = N1 - MD GO TO 30 40IF (MTEST - M1) 65,45,65 45MX = M1 50MX = MX - ND IF (IABS(MX) - IABS(M1)) 55,65,65 55M1 = MX N1 = N1 + MD GO TO 50 65INDEX = 0 RETURN END SUBROUTINE LDE(M,N,M1,N1,NA) MO = 1 NO = 0 M1 = 0 N1 = 1 MA = IABS(M) NA = IABS(N) MS = M/MA NS = N/NA 25IQUOT = MA/NA IREM = MA - NA \\textasteriskcentered IQUOT IF (IREM) 35,35,30 30M2 = MO - IQUOT \\textasteriskcentered M1 N2 = NO - IQUOT \\textasteriskcentered N1 MO = M1 NO = N1 M1 = M2 N1 = N2 MA = NA NA = IREM GO TO 25 35M1 = MS \\textasteriskcentered M1 N1 = NS \\textasteriskcentered N1 RETURN END", "ref_id": 4487, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a FORTRAN program to solve linear congruences of the form ax = b (mod m).", "options": ["FORTRAN program provided in the solution", "C++ program to solve linear congruences", "Python program to solve linear congruences", "Java program to solve linear congruences"], "answer": "A", "solution": "Two integers are said to be congruent modulo an integer m if their difference is divisible by m. Thus a \\equiv b (mod a) means (a-b)/m is an integer. For example, 3 \\equiv 8 (mod 5) since [(3 - 8) / 5] = (-5/5) = -1 (an integer). Congruences are similar to equations and linear congruences are similar to linear equations. The linear congruence ax \\equiv b(mod m) has a solution if and only if (a, m) (the greatest common divider of a and m) divides b,i.e., (a, m)/b. Furthermore if x0 is such a solution, then x \\equiv x0 (mod m/(a, m)) is also a solution. For example, solve the linear congruence 8x \\equiv 4 (mod 6).(1) By definition, (1) means (8x - 4) / 6 = 3 integer When x = 2, 8x - 4 = 12, and six divides twelve. Now, (8,6) = 2. Hence any x satisfying x \\equiv 2 (mod 6/(8,6)), or x \\equiv 2 (mod 3) is also a solution of 8x \\equiv 4 (mod 6). Thus, 5,8,-1,-4,.. .etc. are solutions. To prove the above (first part) note that ax \\equiv b (mod m) means (ax - b) / m = r (an integer), or ax - b = rm or ax - rm = b.(2) Equation (2) is a linear Diophantine equation and is solvable for r and x if and only if (a, m) divides b. The strategy in the presented computer program is as follows: 1) Read in values of a, b and m (< 10000). 2) Call a subroutine that solves the linear Diophantine equation described above. 3) Return to main program. The program terminates when the value of M read in is less than, or equal to 0 . 5BEAD (5,10) IA,M, IB 10FORMAT (3I4) IF (M.LE.O) GO TO 99 20CALL GLDE(IA,M,IB,M1,N1,NA,INDEX) IF (INDEX) 30,30,22 22WRITE (6,25) 25FORMAT (1HO,45HNO VALUE OF X SATISFIES 1THE LINEAR CONGRUENCE) GO TO 40 30WRITE (6,35) IX 35FORMAT (1HO.3HX =, I6, 32H SATISFIES THE LINEAR CONGRUENCE) 40WRITE (6,44), IA,IB,M 44FORMAT (1H , I6, 5HX (=),I16, 4H(MOD,I6,1H)) GO TO 5 99STOP END SUBROUTINE GLDE(M,N,K,M1,N1,NA,INDEX) CTHIS SUBROUTINE RECEIVES INTEGERS FROM CMAIN PROGRAM. FIRST, ANOTHER SUBROUTINE LDE IS CALLED, THAT FINDS THE GCD NA OF (N,M), CAND DETERMINES VALUES M1 AND N1 THAT SATISFY THE LINEAD CDIOPHANTINE EQUATION M\\textasteriskcenteredM1 + N \\textasteriskcentered N1 = K. CTHE VALUE OF M1 RETURNED HAS THE LEAST CPOSSIBLE ABSOLUTE VALUE. INDEX IS SET CTO 0 IF A SOLUTION EXISTS, TO / IF NOT, CAND TO -1 IF THE VALUE RECEIVED FOR CK IS, SAY, 30000. USE K = 30000 IF A CSOLUTION TO THE EQUATION CM\\textasteriskcenteredM1 + N\\textasteriskcenteredN1 = NA (GCD OF M AND N) CIS DESIRED. NOTE: THE NUMBER 30000 CIS SOMEWHAT ARBITRARILY CHOSEN. IT IS CASSUMED THAT ONE WOULD NEVER WISH CTO SOLVE THE EQUATION MX + NY = 30000. CALL LDE (M,N,M1,N1,NA) IF (K - 30000) 22,21,22 21INDEX = -1 K = NA GO TO 27 22MULT = K/NA IF (K - MULT \\textasteriskcentered NA) 23,25,23 23INDEX = 1 RETURN 25Ml = M1 \\textasteriskcentered MULT N1 = N1 \\textasteriskcentered MULT 27MTEST = M1 ND = N/NA MD = M/NA MX = M1 30MX = MX + ND IF (IABS(MX) - LABS (M1)) 35,40,40 35M1 = MX N1 = N1 - MD GO TO 30 40IF (MTEST - M1) 65,45,65 45MX = M1 50MX = MX - ND IF (IABS(MX) - IABS(M1)) 55,65,65 55M1 = MX N1 = N1 + MD GO TO 50 65INDEX = 0 RETURN END SUBROUTINE LDE(M,N,M1,N1,NA) MO = 1 NO = 0 M1 = 0 N1 = 1 MA = IABS(M) NA = IABS(N) MS = M/MA NS = N/NA 25IQUOT = MA/NA IREM = MA - NA \\textasteriskcentered IQUOT IF (IREM) 35,35,30 30M2 = MO - IQUOT \\textasteriskcentered M1 N2 = NO - IQUOT \\textasteriskcentered N1 MO = M1 NO = N1 M1 = M2 N1 = N2 MA = NA NA = IREM GO TO 25 35M1 = MS \\textasteriskcentered M1 N1 = NS \\textasteriskcentered N1 RETURN END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program in BASIC to compute the n-thpower of a square n \u00d7 n matrix A.\n\nOptions:\nA. Use a one matrix and subtract n times\nB. Use an identity matrix and divide n times\nC.             Use a zero matrix and add N times\nD. Use an identity matrix and repeat multiplication n times\n\nAnswer: D\n\nReference Solution:\nA concept of identity matrix will be used in the solution of this problem. An identity matrix in BASIC is the matrix in which all the elements in the leading diagonal are 1 and all other elements are zero. A 3 \u00d7 3 identity matrix, for example, looks as follows: \\mid 100 \\mid \\mid 010 \\mid \\mid 001 \\mid An identity matrix multiplied by another matrix M (of the same dimensions) produces a matrix identical to M. This property is used in the solution in the following way: Matrix B is made into an identity matrix. Then matrix A is multiplied by B to produce another matrix C equal to A. After that, matrix C is assigned into B, and the multiplication of B and A is repeated. The new value of C is again assigned into B and B \u00d7 A is executed again. This procedure repeats n times, where n is the desired power of A (as well as the matrix dimensions in this case). The final value of the matrix C is equal to (A)^n . Note, that this is not the only possible solution to the problem. The program looks as follows: 10DIM A (N, N), B (N, N), C (N, N) 20INPUT N 30MAT B = IDN 40FOR 1 = 1 TO N 50MAT C = B\\textasteriskcenteredA 60MAT B = C 70NEXTI 80MAT PRINT C: 90END", "ref_id": 4488, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program in BASIC to compute the n-thpower of a square n \u00d7 n matrix A.", "options": ["Use a one matrix and subtract n times", "Use an identity matrix and divide n times", "Use a zero matrix and add N times", "Use an identity matrix and repeat multiplication n times"], "answer": "D", "solution": "A concept of identity matrix will be used in the solution of this problem. An identity matrix in BASIC is the matrix in which all the elements in the leading diagonal are 1 and all other elements are zero. A 3 \u00d7 3 identity matrix, for example, looks as follows: \\mid 100 \\mid \\mid 010 \\mid \\mid 001 \\mid An identity matrix multiplied by another matrix M (of the same dimensions) produces a matrix identical to M. This property is used in the solution in the following way: Matrix B is made into an identity matrix. Then matrix A is multiplied by B to produce another matrix C equal to A. After that, matrix C is assigned into B, and the multiplication of B and A is repeated. The new value of C is again assigned into B and B \u00d7 A is executed again. This procedure repeats n times, where n is the desired power of A (as well as the matrix dimensions in this case). The final value of the matrix C is equal to (A)^n . Note, that this is not the only possible solution to the problem. The program looks as follows: 10DIM A (N, N), B (N, N), C (N, N) 20INPUT N 30MAT B = IDN 40FOR 1 = 1 TO N 50MAT C = B\\textasteriskcenteredA 60MAT B = C 70NEXTI 80MAT PRINT C: 90END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a PL/I program to integrate a general function D(X) overA \\leq X \\leq B. Illustrate for D(X) = (1 - X)-2 .\n\nOptions:\nA. Romberg's Integration\nB. SIMPSON RULE INTEGRATION\nC.             Monte Carlo Integration\nD. Trapezoidal Rule Integration\n\nAnswer: B\n\nReference Solution:\nWe slice the interval [a, b] into n equal parts. The size of the slices ish = (b - a)/n . The area under the curve is given ac-cording to Simpson's ruleby S = (h/3) [f (a) + 4f (a+h) +2f(a+2h) + 4f(a+3h) + 2f(a+4h)+...+ f(b)] /\\textasteriskcentered SIMPSON RULE INTEGRATION \\textasteriskcentered/ RPT: GET LIST (A,B,N); H = (B - A)/N; X = A; S = 0; DO I = 1 TO N/2; S = S + H/3\\textasteriskcentered (D(X) + 4\\textasteriskcenteredD(X+H) + D(X+2\\textasteriskcenteredH)); X = X + 2\\textasteriskcenteredH; END; PUT SKIP EDIT (A,B,N,S) (2F(10,4)), F(10), F(10,4)); GO TO RPT; D:PROCEDURE (X); RETURN (1/1 - X)\\textasteriskcentered\\textasteriskcentered2); END D;", "ref_id": 4489, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a PL/I program to integrate a general function D(X) overA \\leq X \\leq B. Illustrate for D(X) = (1 - X)-2 .", "options": ["Romberg's Integration", "SIMPSON RULE INTEGRATION", "Monte Carlo Integration", "Trapezoidal Rule Integration"], "answer": "B", "solution": "We slice the interval [a, b] into n equal parts. The size of the slices ish = (b - a)/n . The area under the curve is given ac-cording to Simpson's ruleby S = (h/3) [f (a) + 4f (a+h) +2f(a+2h) + 4f(a+3h) + 2f(a+4h)+...+ f(b)] /\\textasteriskcentered SIMPSON RULE INTEGRATION \\textasteriskcentered/ RPT: GET LIST (A,B,N); H = (B - A)/N; X = A; S = 0; DO I = 1 TO N/2; S = S + H/3\\textasteriskcentered (D(X) + 4\\textasteriskcenteredD(X+H) + D(X+2\\textasteriskcenteredH)); X = X + 2\\textasteriskcenteredH; END; PUT SKIP EDIT (A,B,N,S) (2F(10,4)), F(10), F(10,4)); GO TO RPT; D:PROCEDURE (X); RETURN (1/1 - X)\\textasteriskcentered\\textasteriskcentered2); END D;"}, "question": "task_1"}}, {"data": {"text": "Question:\nExplain briefly the background and applications of the COBOL programming language.\n\nOptions:\nA. COBOL was developed recently for web development.\nB. COBOL is a complex language used only by experienced programmers.\nC.             COBOL (Common Business Oriented Language) was developed for programming of electronic computers in business data processing. It is known for its simplicity and intelligibility, making it popular and useful in the business community.\nD. COBOL was developed for scientific computations.\n\nAnswer: C\n\nReference Solution:\nOn May 28 and 29, 1959, a meeting was called in the Pentagon for the purpose of considering the desirability and feasibility of establishing a common language for pro-gramming of electronic computers in business data processing. As a result, in a short period of time, a new computer lan-guage COBOL (Common Business Oriented Language) was devel-oped. Since that time COBOL has definitely become the most popular and useful language inside the business community. The basic language element in COBOL is the \"word.\" As in the English language, COBOL contains many types of words with which meaningful thoughts are formed. This makes the language intelligible for many people who do not have much programming experience and only use the computer occasion-ally for solving problems. Every COBOL program is divided into four parts: 1.The Identification Division - identifies the program. 2.The Environment Division - specifies the input-output devices to be used. 3.The Data Division - describes the data to be used in the program. 4.The Procedure Division - includes the instructions that the system will follow in solving the problem. Such a division provides greater simplicity of understanding and analysis of a COBOL program. These are only a few of the factors that account for the constantly growing popularity of the COBOL language in the business world.", "ref_id": 4490, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Explain briefly the background and applications of the COBOL programming language.", "options": ["COBOL was developed recently for web development.", "COBOL is a complex language used only by experienced programmers.", "COBOL (Common Business Oriented Language) was developed for programming of electronic computers in business data processing. It is known for its simplicity and intelligibility, making it popular and useful in the business community.", "COBOL was developed for scientific computations."], "answer": "C", "solution": "On May 28 and 29, 1959, a meeting was called in the Pentagon for the purpose of considering the desirability and feasibility of establishing a common language for pro-gramming of electronic computers in business data processing. As a result, in a short period of time, a new computer lan-guage COBOL (Common Business Oriented Language) was devel-oped. Since that time COBOL has definitely become the most popular and useful language inside the business community. The basic language element in COBOL is the \"word.\" As in the English language, COBOL contains many types of words with which meaningful thoughts are formed. This makes the language intelligible for many people who do not have much programming experience and only use the computer occasion-ally for solving problems. Every COBOL program is divided into four parts: 1.The Identification Division - identifies the program. 2.The Environment Division - specifies the input-output devices to be used. 3.The Data Division - describes the data to be used in the program. 4.The Procedure Division - includes the instructions that the system will follow in solving the problem. Such a division provides greater simplicity of understanding and analysis of a COBOL program. These are only a few of the factors that account for the constantly growing popularity of the COBOL language in the business world."}, "question": "task_1"}}, {"data": {"text": "Question:\nDevelop a FORTRAN subprogram to evaluate the integrationof f(x)dxbetween the limits of A and B using GAUSSIANquadrature, which is expressible as ^B\\int_Af(x)dx= [(B - A) / 2]^N\\sum_i_=1w_if [{(B - A)t_i+ (B + A)} / 2] wherew1, w2...w_Nare the weighting coefficients and t1, t2 ,...,t_Nare the roots of the Legendre polynomial P_N(t) = 0\n\nOptions:\nA. PROGRAM GAUSS\nB. MODULE GAUSS\nC.             SUBROUTINE GAUSS\nD. FUNCTION GAUSS\n\nAnswer: C\n\nReference Solution:\nWe need the result from elementary numerical analysis that the weightsw_Kcan be expressed in the form w_K= 1\\int_-1 L_K(x)dx= [1 / {(P_n+1)(x_K)}] 1\\int_-1 [{(P_n+1)(x)dx} / (x -x_K)] whereL_K (x) is a Lagrange polynomial andP_n(x) is a Legendre polynomial. Our program will let the value of N range from 3 to 6. The compu-tation startswith N = 3. The program will compare the result based on N = 3 with thatbased on N = 4. The results must satisfy the criterion \\epsilon\\geq [{(A_n+1) -A_n} / A_n] whereA_n+1 is the answer based on N + 1 points, and A_n is the answer basedon N points, and \\epsilon is taken to be 10-4 . If the re-sult fails to pass the abovetest, the value of N will be increased by one. The maximum value of N is set to be 6. SUBROUTINE GAUSS (A, B, X, F, KOUNT) CINTEGRATION OF F(X).DX BY GAUSSIAN QUADRATURE CBETWEEN LIMITS OF A AND B CNOMENCLATURE CF = F(X) UNDER INTEGRAL SIGN CKOUNT = INTEGER USED TO CONTROL METHOD COF EXECUTION CANS = ANSWER TO INTEGRATION DIMENSIONW(4,6), T(4,6) IF (KOUNT) 8, 10, 8 8GO TO 30 10ANS = 1.0 IP0INT = 3 EPS = 10.E - 05 CSTORE WEIGHT COEFF AND LEGENDRE ROOTS DO 2 I = 1,4 IP2 =1 + 2 2READ 1, (W(I,K), K = 1,IP2), (T(I,K), K = I,IP2) 1FORMAT (5F15.10) CCHANGE INTEGRATION LIMITS TO (-1 TO +1). CEVALUATE COEFF OF NEW FUNCTION C = (B - A)/2. 18IP0INT = IPOINT + 1 TEMP = ANS ANS = 0 IPM2 = IPOINT - 2 KOUNT = 1 CEVALUATE NEW VARIABLES WHICH ARE EXPRESSED CIN TERMS OF LEGENDRE ROOT. 20X = C\\textasteriskcenteredT(IPM2,KOUNT) + (B + A)/2 . RETURN CCARRY OUT INTEGRATION BY CALCULATING CANS = C\\textasteriskcentered(W1\\textasteriskcenteredF(X1) + W2\\textasteriskcenteredF(X2)+...). 30ANS = ANS + C\\textasteriskcenteredW(IPM2,KOUNT)\\textasteriskcentered F KOUNT = KOUNT + 1 IF (KOUNT - IPOINT) 20,20,40 40IF (IPOINT - 3) 18, 18, 50 CNEXT DETERMINE WHETHER THE DEVIATION COF ANSWER IS WITHIN THE LIMIT CIF NOT,TAKE1 MORE INTEGRATION POINT 50DELT =ABSF(ANS - TEMP) RATIO = DELT/TEMP 7IF (RATIO-EPS) 70, 70, 80 CPUNCH OUT ANS IF DEVIATION WITHIN LIMIT 70PUNCH 72, IPOINT, ANS 72FORMAT (///5X, 16H BY CONVERGENCE, ,I2, 24H 1 POINT GAUSS.QUADRATURE, 15H GIVES ANSWER= , 2 E14.8//) KOUNT = 7 RETURN 80IF (IPOINT - 6) 18, 100, 100 100PUNCH 102, IPOINT, ANS CANSWER PUNCHED OUT AFTER 6 POINT CGAUSSIAN INTEGRATION IS STILL NOT CWITHIN THE LIMIT. 102FORMAT (///5X, 22H BY LIMITS OF PROGRAM, ,I2, 1 14H POINT GAUSS., 23H QUADRATURE GIVES ANS. =, 2 E14.8//) KOUNT = 7 RETURN CDATA FOR WEIGHTING COEFFICIENTS CAND LEGENDRE ROOTS END", "ref_id": 4491, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Develop a FORTRAN subprogram to evaluate the integrationof f(x)dxbetween the limits of A and B using GAUSSIANquadrature, which is expressible as ^B\\int_Af(x)dx= [(B - A) / 2]^N\\sum_i_=1w_if [{(B - A)t_i+ (B + A)} / 2] wherew1, w2...w_Nare the weighting coefficients and t1, t2 ,...,t_Nare the roots of the Legendre polynomial P_N(t) = 0", "options": ["PROGRAM GAUSS", "MODULE GAUSS", "SUBROUTINE GAUSS", "FUNCTION GAUSS"], "answer": "C", "solution": "We need the result from elementary numerical analysis that the weightsw_Kcan be expressed in the form w_K= 1\\int_-1 L_K(x)dx= [1 / {(P_n+1)(x_K)}] 1\\int_-1 [{(P_n+1)(x)dx} / (x -x_K)] whereL_K (x) is a Lagrange polynomial andP_n(x) is a Legendre polynomial. Our program will let the value of N range from 3 to 6. The compu-tation startswith N = 3. The program will compare the result based on N = 3 with thatbased on N = 4. The results must satisfy the criterion \\epsilon\\geq [{(A_n+1) -A_n} / A_n] whereA_n+1 is the answer based on N + 1 points, and A_n is the answer basedon N points, and \\epsilon is taken to be 10-4 . If the re-sult fails to pass the abovetest, the value of N will be increased by one. The maximum value of N is set to be 6. SUBROUTINE GAUSS (A, B, X, F, KOUNT) CINTEGRATION OF F(X).DX BY GAUSSIAN QUADRATURE CBETWEEN LIMITS OF A AND B CNOMENCLATURE CF = F(X) UNDER INTEGRAL SIGN CKOUNT = INTEGER USED TO CONTROL METHOD COF EXECUTION CANS = ANSWER TO INTEGRATION DIMENSIONW(4,6), T(4,6) IF (KOUNT) 8, 10, 8 8GO TO 30 10ANS = 1.0 IP0INT = 3 EPS = 10.E - 05 CSTORE WEIGHT COEFF AND LEGENDRE ROOTS DO 2 I = 1,4 IP2 =1 + 2 2READ 1, (W(I,K), K = 1,IP2), (T(I,K), K = I,IP2) 1FORMAT (5F15.10) CCHANGE INTEGRATION LIMITS TO (-1 TO +1). CEVALUATE COEFF OF NEW FUNCTION C = (B - A)/2. 18IP0INT = IPOINT + 1 TEMP = ANS ANS = 0 IPM2 = IPOINT - 2 KOUNT = 1 CEVALUATE NEW VARIABLES WHICH ARE EXPRESSED CIN TERMS OF LEGENDRE ROOT. 20X = C\\textasteriskcenteredT(IPM2,KOUNT) + (B + A)/2 . RETURN CCARRY OUT INTEGRATION BY CALCULATING CANS = C\\textasteriskcentered(W1\\textasteriskcenteredF(X1) + W2\\textasteriskcenteredF(X2)+...). 30ANS = ANS + C\\textasteriskcenteredW(IPM2,KOUNT)\\textasteriskcentered F KOUNT = KOUNT + 1 IF (KOUNT - IPOINT) 20,20,40 40IF (IPOINT - 3) 18, 18, 50 CNEXT DETERMINE WHETHER THE DEVIATION COF ANSWER IS WITHIN THE LIMIT CIF NOT,TAKE1 MORE INTEGRATION POINT 50DELT =ABSF(ANS - TEMP) RATIO = DELT/TEMP 7IF (RATIO-EPS) 70, 70, 80 CPUNCH OUT ANS IF DEVIATION WITHIN LIMIT 70PUNCH 72, IPOINT, ANS 72FORMAT (///5X, 16H BY CONVERGENCE, ,I2, 24H 1 POINT GAUSS.QUADRATURE, 15H GIVES ANSWER= , 2 E14.8//) KOUNT = 7 RETURN 80IF (IPOINT - 6) 18, 100, 100 100PUNCH 102, IPOINT, ANS CANSWER PUNCHED OUT AFTER 6 POINT CGAUSSIAN INTEGRATION IS STILL NOT CWITHIN THE LIMIT. 102FORMAT (///5X, 22H BY LIMITS OF PROGRAM, ,I2, 1 14H POINT GAUSS., 23H QUADRATURE GIVES ANS. =, 2 E14.8//) KOUNT = 7 RETURN CDATA FOR WEIGHTING COEFFICIENTS CAND LEGENDRE ROOTS END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a FORTRAN program to multiply two matrices.\n\nOptions:\nA. DIMENSION A (L1, L2), B (L2, M2), C (L1, M2) DO 100 I = 1, L1 DO 100 J = 1, M2 C (I, J) = 0.0 DO 100 K = 1, L2 C (I, J) = A (I, K)-B (K, J) + C (I, J) 100CONTINUE STOP END\nB. DIMENSION A (L1, L2), B (L2, M2), C (L1, M2) DO 100 I = 1, L1 DO 100 J = 1, M2 C (I, J) = 0.0 DO 100 K = 1, L2 C (I, J) = A (I, K) + B (K, J) + C (I, J) 100CONTINUE STOP END\nC.             DIMENSION A (L1, L2), B (L2, M2), C (L1, M2) DO 100 I = 1, L1 DO 100 J = 1, M2 C (I, J) = 0.0 DO 100 K = 1, L2 C (I, J) = A (I, K)/B (K, J) + C (I, J) 100CONTINUE STOP END\nD. DIMENSION A (L1, L2), B (L2, M2), C (L1, M2) DO 100 I = 1, L1 DO 100 J = 1, M2 C (I, J) = 0.0 DO 100 K = 1, L2 C (I, J) = A (I, K)\textasteriskcenteredB (K, J) + C (I, J) 100CONTINUE STOP END\n\nAnswer: D\n\nReference Solution:\nIt Is desired to compute the matrix product AB = C, where A is dimensioned L1 \u00d7 L2, B is dimensioned L2 \u00d7 M2, and C is dimensioned L1 \u00d7 M2. Note that the column dimension of A must equal the row dimension of B. This program illustrates the concept of nested DO loops. In terms of subscripts, C_ij= ^L2\\sum_K=1A_ik\u00d7B_kj Thus, subscript k forms the innermost loop, whileiand j are the subscripts of the outer loops. DIMENSION A (L1, L2), B (L2, M2), C (L1, M2) DO 100 I = 1, L1 DO 100 J = 1, M2 C (I, J) = 0.0 DO 100 K = 1, L2 C (I, J) = A (I, K)\\textasteriskcenteredB (K, J) + C (I, J) 100CONTINUE STOP END", "ref_id": 4492, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a FORTRAN program to multiply two matrices.", "options": ["DIMENSION A (L1, L2), B (L2, M2), C (L1, M2) DO 100 I = 1, L1 DO 100 J = 1, M2 C (I, J) = 0.0 DO 100 K = 1, L2 C (I, J) = A (I, K)-B (K, J) + C (I, J) 100CONTINUE STOP END", "DIMENSION A (L1, L2), B (L2, M2), C (L1, M2) DO 100 I = 1, L1 DO 100 J = 1, M2 C (I, J) = 0.0 DO 100 K = 1, L2 C (I, J) = A (I, K) + B (K, J) + C (I, J) 100CONTINUE STOP END", "DIMENSION A (L1, L2), B (L2, M2), C (L1, M2) DO 100 I = 1, L1 DO 100 J = 1, M2 C (I, J) = 0.0 DO 100 K = 1, L2 C (I, J) = A (I, K)/B (K, J) + C (I, J) 100CONTINUE STOP END", "DIMENSION A (L1, L2), B (L2, M2), C (L1, M2) DO 100 I = 1, L1 DO 100 J = 1, M2 C (I, J) = 0.0 DO 100 K = 1, L2 C (I, J) = A (I, K)\textasteriskcenteredB (K, J) + C (I, J) 100CONTINUE STOP END"], "answer": "D", "solution": "It Is desired to compute the matrix product AB = C, where A is dimensioned L1 \u00d7 L2, B is dimensioned L2 \u00d7 M2, and C is dimensioned L1 \u00d7 M2. Note that the column dimension of A must equal the row dimension of B. This program illustrates the concept of nested DO loops. In terms of subscripts, C_ij= ^L2\\sum_K=1A_ik\u00d7B_kj Thus, subscript k forms the innermost loop, whileiand j are the subscripts of the outer loops. DIMENSION A (L1, L2), B (L2, M2), C (L1, M2) DO 100 I = 1, L1 DO 100 J = 1, M2 C (I, J) = 0.0 DO 100 K = 1, L2 C (I, J) = A (I, K)\\textasteriskcenteredB (K, J) + C (I, J) 100CONTINUE STOP END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a FORTRAN program that generates the prime numbers in the 1-2000 interval, using an ancient method known as the SIEVE of ERATOSTHENES.\n\nOptions:\nA. DIMENSION N(2000) K = 2000 RK = K KROOT = SQRT (RK) KK = K - 1 CGENERATE ARRAY OF INTEGERS FROM 2 TO 2000 DO 10 I = 1,KK 10N(I) = I+1 J = 1 CSECTION OF REPEATED ELIMINATION PROCESS 15INC = N(J) JJ = J + INC DO 20 L = JJ, K, INC 20N(L) = 0 25J = J + 1 IF (N(J).LE.O) GO TO 25 IF (N(J).LE.KROOT) GO TO 15 CPLACE THE PRIMES LEFT JUSTIFIED CIN THE ARRAY N. J = 0 DO 45 I = 1, KK IF (N(I).LE.O) GO TO 45 J = J + 1 N(J) = N(I) 45CONTINUE COUTPUT THE PRIMES WRITE (6,50) (N(I), I = 1,J) 50FORMAT (1H, 10I6) STOP END\nB. DIMENSION N(2000) K = 1000 RK = K KROOT = SQRT (RK) KK = K - 1 CGENERATE ARRAY OF INTEGERS FROM 2 TO 1000\nC.             DIMENSION N(2000) K = 2000 RK = K KROOT = SQRT (RK) KK = K - 1 CGENERATE ARRAY OF INTEGERS FROM 1 TO 1000\nD. DIMENSION N(500) K = 500 RK = K KROOT = SQRT (RK) KK = K - 1 CGENERATE ARRAY OF INTEGERS FROM 2 TO 500\n\nAnswer: A\n\nReference Solution:\nA prime is a number which has only 2 divisors: 1 and itself. There is an ancient method for finding the primes from 2 (the smallest prime) to some number N, called the SIEVE of ERATOSTHENES. This method works as follows: First, the integers from 2 to N are written down. Then, the multiples of the smal-lest available integer, 2, greater than this integer, are crossed out. This step, obviously, eliminates all the even numbers except 2. The procedure is then repeated for the next smallest available integer-3, and then next - 5, because 4 is not available, since it was eliminated during the first step, and so on... Thus, the initial list is scanned repeatedly, and the appropriate integers are crossed off, until the next least remaining integer considered is greater than \\surdN. At this point, all the remaining integers are indeed all the primes between 2 and N. The program is created based upon the above discussion. First, an array of integers from 2 to 2000 is generated. Next, this array is scanned repeatedly, deleting the appropriate integers by replacing them with zeros. At the point when the considered integer is greater than \\surd2000 , all the nonzero elements of the array are placed left justified within the array and then printed. The program looks as follows: DIMENSION N(2000) K = 2000 RK = K KROOT = SQRT (RK) KK = K - 1 CGENERATE ARRAY OF INTEGERS FROM 2 TO 2000 DO 10 I = 1,KK 10N(I) = I+1 J = 1 CSECTION OF REPEATED ELIMINATION PROCESS 15INC = N(J) JJ = J + INC DO 20 L = JJ, K, INC 20N(L) = 0 25J = J + 1 IF (N(J).LE.O) GO TO 25 IF (N(J).LE.KROOT) GO TO 15 CPLACE THE PRIMES LEFT JUSTIFIED CIN THE ARRAY N. J = 0 DO 45 I = 1, KK IF (N(I).LE.O) GO TO 45 J = J + 1 N(J) = N(I) 45CONTINUE COUTPUT THE PRIMES WRITE (6,50) (N(I), I = 1,J) 50FORMAT (1H, 10I6) STOP END", "ref_id": 4493, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a FORTRAN program that generates the prime numbers in the 1-2000 interval, using an ancient method known as the SIEVE of ERATOSTHENES.", "options": ["DIMENSION N(2000) K = 2000 RK = K KROOT = SQRT (RK) KK = K - 1 CGENERATE ARRAY OF INTEGERS FROM 2 TO 2000 DO 10 I = 1,KK 10N(I) = I+1 J = 1 CSECTION OF REPEATED ELIMINATION PROCESS 15INC = N(J) JJ = J + INC DO 20 L = JJ, K, INC 20N(L) = 0 25J = J + 1 IF (N(J).LE.O) GO TO 25 IF (N(J).LE.KROOT) GO TO 15 CPLACE THE PRIMES LEFT JUSTIFIED CIN THE ARRAY N. J = 0 DO 45 I = 1, KK IF (N(I).LE.O) GO TO 45 J = J + 1 N(J) = N(I) 45CONTINUE COUTPUT THE PRIMES WRITE (6,50) (N(I), I = 1,J) 50FORMAT (1H, 10I6) STOP END", "DIMENSION N(2000) K = 1000 RK = K KROOT = SQRT (RK) KK = K - 1 CGENERATE ARRAY OF INTEGERS FROM 2 TO 1000", "DIMENSION N(2000) K = 2000 RK = K KROOT = SQRT (RK) KK = K - 1 CGENERATE ARRAY OF INTEGERS FROM 1 TO 1000", "DIMENSION N(500) K = 500 RK = K KROOT = SQRT (RK) KK = K - 1 CGENERATE ARRAY OF INTEGERS FROM 2 TO 500"], "answer": "A", "solution": "A prime is a number which has only 2 divisors: 1 and itself. There is an ancient method for finding the primes from 2 (the smallest prime) to some number N, called the SIEVE of ERATOSTHENES. This method works as follows: First, the integers from 2 to N are written down. Then, the multiples of the smal-lest available integer, 2, greater than this integer, are crossed out. This step, obviously, eliminates all the even numbers except 2. The procedure is then repeated for the next smallest available integer-3, and then next - 5, because 4 is not available, since it was eliminated during the first step, and so on... Thus, the initial list is scanned repeatedly, and the appropriate integers are crossed off, until the next least remaining integer considered is greater than \\surdN. At this point, all the remaining integers are indeed all the primes between 2 and N. The program is created based upon the above discussion. First, an array of integers from 2 to 2000 is generated. Next, this array is scanned repeatedly, deleting the appropriate integers by replacing them with zeros. At the point when the considered integer is greater than \\surd2000 , all the nonzero elements of the array are placed left justified within the array and then printed. The program looks as follows: DIMENSION N(2000) K = 2000 RK = K KROOT = SQRT (RK) KK = K - 1 CGENERATE ARRAY OF INTEGERS FROM 2 TO 2000 DO 10 I = 1,KK 10N(I) = I+1 J = 1 CSECTION OF REPEATED ELIMINATION PROCESS 15INC = N(J) JJ = J + INC DO 20 L = JJ, K, INC 20N(L) = 0 25J = J + 1 IF (N(J).LE.O) GO TO 25 IF (N(J).LE.KROOT) GO TO 15 CPLACE THE PRIMES LEFT JUSTIFIED CIN THE ARRAY N. J = 0 DO 45 I = 1, KK IF (N(I).LE.O) GO TO 45 J = J + 1 N(J) = N(I) 45CONTINUE COUTPUT THE PRIMES WRITE (6,50) (N(I), I = 1,J) 50FORMAT (1H, 10I6) STOP END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program that a) Calculates factorial values. b) Assume that factorial of 5 is to be calculated through a routine factorial ( ). c) This routine should use the concept of recursion.\n\nOptions:\nA. main ( ) { int value; value = factorial (4); printf (\"The factorial of 4 is = %d\\textbackslashn\", value); } factorial (number) intnumber; { if (number ==1) return (1); else return (number * factorial (number - 2)); }\nB. main ( ) { int value; value = factorial (5); printf (\"The factorial of 5 is = %d\\textbackslashn\", value); } factorial (number) intnumber; { if (number ==1) return (2); else return (number * factorial (number - 1)); }\nC.             main ( ) { int value; value = factorial (6); printf (\"The factorial of 6 is = %d\\textbackslashn\", value); } factorial (number) intnumber; { if (number ==1) return (1); else return (number * factorial (number - 1)); }\nD. main ( ) { int value; value = factorial (5); printf (\"The factorial of 5 is = %d\\textbackslashn\", value); } factorial (number) intnumber; { if (number ==1) return (1); else return (number * factorial (number - 1)); }\n\nAnswer: D\n\nReference Solution:\nIf a function is recursive it can call itself. Re-cursion is the name given to the technique of defining a func-tion or a process in terms of itself. Factorial function 0! = 1 1! = 1 n! = n(n - 1)! The end condition in the recursive function is the factorial of1. If this routine is invoked with a value 5, it will check if the value it received was equal to 1. Then it carries out the required factorial functions. main ( ) { int value; value = factorial (5); printf (\"The factorial of 5 is = %d\\textbackslashn\", value); } factorial (number) intnumber; /\\textasteriskcenterednumber whose factorial is to be computed\\textasteriskcentered/ { if (number ==1) return (1); /\\textasteriskcenteredend condition of this recursive function\\textasteriskcentered/ else return (number \\textasteriskcentered factorial (number - 1)); /\\textasteriskcenteredcalls itself until end condition occurs\\textasteriskcentered/ }", "ref_id": 4494, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program that a) Calculates factorial values. b) Assume that factorial of 5 is to be calculated through a routine factorial ( ). c) This routine should use the concept of recursion.", "options": ["main ( ) { int value; value = factorial (4); printf (\"The factorial of 4 is = %d\\textbackslashn\", value); } factorial (number) intnumber; { if (number ==1) return (1); else return (number * factorial (number - 2)); }", "main ( ) { int value; value = factorial (5); printf (\"The factorial of 5 is = %d\\textbackslashn\", value); } factorial (number) intnumber; { if (number ==1) return (2); else return (number * factorial (number - 1)); }", "main ( ) { int value; value = factorial (6); printf (\"The factorial of 6 is = %d\\textbackslashn\", value); } factorial (number) intnumber; { if (number ==1) return (1); else return (number * factorial (number - 1)); }", "main ( ) { int value; value = factorial (5); printf (\"The factorial of 5 is = %d\\textbackslashn\", value); } factorial (number) intnumber; { if (number ==1) return (1); else return (number * factorial (number - 1)); }"], "answer": "D", "solution": "If a function is recursive it can call itself. Re-cursion is the name given to the technique of defining a func-tion or a process in terms of itself. Factorial function 0! = 1 1! = 1 n! = n(n - 1)! The end condition in the recursive function is the factorial of1. If this routine is invoked with a value 5, it will check if the value it received was equal to 1. Then it carries out the required factorial functions. main ( ) { int value; value = factorial (5); printf (\"The factorial of 5 is = %d\\textbackslashn\", value); } factorial (number) intnumber; /\\textasteriskcenterednumber whose factorial is to be computed\\textasteriskcentered/ { if (number ==1) return (1); /\\textasteriskcenteredend condition of this recursive function\\textasteriskcentered/ else return (number \\textasteriskcentered factorial (number - 1)); /\\textasteriskcenteredcalls itself until end condition occurs\\textasteriskcentered/ }"}, "question": "task_1"}}, {"data": {"text": "Question:\nHow many characters can variable names contain in C? How many letters are significant?\n\nOptions:\nA. Only the first ten characters\nB. Only the first eight characters\nC.             Only the first nine characters\nD. Only the first six characters\n\nAnswer: B\n\nReference Solution:\nVariable names in C are made of letters and digits. The first character must be a letter. The underscore _counts as a letter. Only the first eight characters of the variable name are significant.Eg. , in case of the two given variables, value_of_1and value_of_2, C will interpret these two variable names as equivalent, i.e. referencing a variable called value _ of, since their length is over eight.", "ref_id": 4495, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "How many characters can variable names contain in C? How many letters are significant?", "options": ["Only the first ten characters", "Only the first eight characters", "Only the first nine characters", "Only the first six characters"], "answer": "B", "solution": "Variable names in C are made of letters and digits. The first character must be a letter. The underscore _counts as a letter. Only the first eight characters of the variable name are significant.Eg. , in case of the two given variables, value_of_1and value_of_2, C will interpret these two variable names as equivalent, i.e. referencing a variable called value _ of, since their length is over eight."}, "question": "task_1"}}, {"data": {"text": "Question:\nA factory produces bars whose exact length is unknown until after production. Its cutting shop receives orders for cut lengths of bar which must be met by cutting up the manufactured bars. For a given manu-factured bar of length 'L' a set 'C' of orders is chosen from the order list, which can be met by cutting up this bar, and with minimum wastage. Design a recursive back-tracking procedure which will construct 'C' for given ' L' and order list.Incorporate the procedure in a program which constructs 'C' from the following order list order1773 mm order2548 mm order365 mm order4929 mm order5548 mm order6163 mm order7421 mm order837 mm anda manufactured bar length L = 1848 mm.\n\nOptions:\nA. PROGRAM ORDERSET\nB. PROGRAM BARSIZE\nC.             PROGRAM ORDERLENGTH\nD. PROGRAM SETOFORDERS\n\nAnswer: D\n\nReference Solution:\nPROGRAM SETOFORDERS (input, output); (\\textasteriskcentered This program reads a bar length and a \\textasteriskcentered) (\\textasteriskcentered list of outstanding orders for lengths to be \\textasteriskcentered) (\\textasteriskcentered cut from such bars, and chooses by \\textasteriskcentered) (\\textasteriskcentered recursive trial and error the set of \\textasteriskcentered) (\\textasteriskcentered ordered lengths that should be cut to minimize \\textasteriskcentered) (\\textasteriskcentered bar wastage. \\textasteriskcentered) CONSTMaxsizeoforderlist= 20; TYPE orders =1 ..Maxsizeoforderlist; orderset = set of orders; VAR size of orderlist :orders; Bestset :orderset; Bestlength , L:o ..Maxint; Length:Array [orders] of 1 . .Maxint; I:orders; (\\textasteriskcentered sets are used to describe the trial \\textasteriskcentered) (\\textasteriskcentered solution, best solution, and potential components, \\textasteriskcentered) (\\textasteriskcentered The length of the orders are held in the \\textasteriskcentered) (\\textasteriskcentered array length.\\textasteriskcentered) (\\textasteriskcentered Best set contains the indices in length of \\textasteriskcentered) (\\textasteriskcentered the orders making up the best solution \\textasteriskcentered) (\\textasteriskcentered found so far.\\textasteriskcentered) (\\textasteriskcentered Best length denotes the total length of \\textasteriskcentered) (\\textasteriskcentered the orders in bestset.\\textasteriskcentered) PROCEDURE CONSIDER (Triallength: integer; orderchosen ,ordersremaining:orderset); (\\textasteriskcenteredTriallengthdenotes the total length of \\textasteriskcentered) (\\textasteriskcentered orders currently in the set orderchosen.\\textasteriskcentered) (\\textasteriskcenteredorderchosenis a set whose members are \\textasteriskcentered) (\\textasteriskcentered the indices in length of the orders in \\textasteriskcentered) (\\textasteriskcentered the current trial solution. \\textasteriskcentered) (\\textasteriskcenteredordersremainingis a set whose members \\textasteriskcentered) (\\textasteriskcentered are the indices in length of the orders \\textasteriskcentered) (\\textasteriskcentered available for incorporation into the trail \\textasteriskcentered) (\\textasteriskcentered solution. \\textasteriskcentered) VAR x:0 ..Maxsizeoforderlist; BEGIN IFtriallength< = L Then begin Iftriallength>bestlength thenbegin bestlength : =Triallength; bestset : =orderchosen End; x : = o; while ordersremaining< > [ ] DO Begin RepeatX := X + 1 until x inordersremaining; ordersremaining : =ordersremaining- [x]; consider (Triallength+length[x],orderchosen+ [x],ordersremaining) End End End; (\\textasteriskcenteredimprove\\textasteriskcentered) Begin Read( L); write1n ('Manufactured bar length is', L : 5,'MM') write1n ; writeln('orderlistis'); Read (sizeoforderlist); For I:=1 tosizeoforderlistDO Begin read (length[I]); write1n(length[I],'MM')END; Bestlength := o;Bestset:= [ ]; (\\textasteriskcentered Initially, trial set is empty and all \\textasteriskcentered) (\\textasteriskcentered orders are available for inclusion in the \\textasteriskcentered) (\\textasteriskcentered trial solution. \\textasteriskcentered) consider (o,[ ] , [1 . .sizeoforderlist]); write1n; write1n ('optimal set of orders'); ForI: = 1 tosizeoforderlistDO If I inbestsetthenwriteln(length [I]:6 ,'MM'); write1n; write1n ('wastage=', L-Bestlength:4, 'MM') End.", "ref_id": 4496, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "A factory produces bars whose exact length is unknown until after production. Its cutting shop receives orders for cut lengths of bar which must be met by cutting up the manufactured bars. For a given manu-factured bar of length 'L' a set 'C' of orders is chosen from the order list, which can be met by cutting up this bar, and with minimum wastage. Design a recursive back-tracking procedure which will construct 'C' for given ' L' and order list.Incorporate the procedure in a program which constructs 'C' from the following order list order1773 mm order2548 mm order365 mm order4929 mm order5548 mm order6163 mm order7421 mm order837 mm anda manufactured bar length L = 1848 mm.", "options": ["PROGRAM ORDERSET", "PROGRAM BARSIZE", "PROGRAM ORDERLENGTH", "PROGRAM SETOFORDERS"], "answer": "D", "solution": "PROGRAM SETOFORDERS (input, output); (\\textasteriskcentered This program reads a bar length and a \\textasteriskcentered) (\\textasteriskcentered list of outstanding orders for lengths to be \\textasteriskcentered) (\\textasteriskcentered cut from such bars, and chooses by \\textasteriskcentered) (\\textasteriskcentered recursive trial and error the set of \\textasteriskcentered) (\\textasteriskcentered ordered lengths that should be cut to minimize \\textasteriskcentered) (\\textasteriskcentered bar wastage. \\textasteriskcentered) CONSTMaxsizeoforderlist= 20; TYPE orders =1 ..Maxsizeoforderlist; orderset = set of orders; VAR size of orderlist :orders; Bestset :orderset; Bestlength , L:o ..Maxint; Length:Array [orders] of 1 . .Maxint; I:orders; (\\textasteriskcentered sets are used to describe the trial \\textasteriskcentered) (\\textasteriskcentered solution, best solution, and potential components, \\textasteriskcentered) (\\textasteriskcentered The length of the orders are held in the \\textasteriskcentered) (\\textasteriskcentered array length.\\textasteriskcentered) (\\textasteriskcentered Best set contains the indices in length of \\textasteriskcentered) (\\textasteriskcentered the orders making up the best solution \\textasteriskcentered) (\\textasteriskcentered found so far.\\textasteriskcentered) (\\textasteriskcentered Best length denotes the total length of \\textasteriskcentered) (\\textasteriskcentered the orders in bestset.\\textasteriskcentered) PROCEDURE CONSIDER (Triallength: integer; orderchosen ,ordersremaining:orderset); (\\textasteriskcenteredTriallengthdenotes the total length of \\textasteriskcentered) (\\textasteriskcentered orders currently in the set orderchosen.\\textasteriskcentered) (\\textasteriskcenteredorderchosenis a set whose members are \\textasteriskcentered) (\\textasteriskcentered the indices in length of the orders in \\textasteriskcentered) (\\textasteriskcentered the current trial solution. \\textasteriskcentered) (\\textasteriskcenteredordersremainingis a set whose members \\textasteriskcentered) (\\textasteriskcentered are the indices in length of the orders \\textasteriskcentered) (\\textasteriskcentered available for incorporation into the trail \\textasteriskcentered) (\\textasteriskcentered solution. \\textasteriskcentered) VAR x:0 ..Maxsizeoforderlist; BEGIN IFtriallength< = L Then begin Iftriallength>bestlength thenbegin bestlength : =Triallength; bestset : =orderchosen End; x : = o; while ordersremaining< > [ ] DO Begin RepeatX := X + 1 until x inordersremaining; ordersremaining : =ordersremaining- [x]; consider (Triallength+length[x],orderchosen+ [x],ordersremaining) End End End; (\\textasteriskcenteredimprove\\textasteriskcentered) Begin Read( L); write1n ('Manufactured bar length is', L : 5,'MM') write1n ; writeln('orderlistis'); Read (sizeoforderlist); For I:=1 tosizeoforderlistDO Begin read (length[I]); write1n(length[I],'MM')END; Bestlength := o;Bestset:= [ ]; (\\textasteriskcentered Initially, trial set is empty and all \\textasteriskcentered) (\\textasteriskcentered orders are available for inclusion in the \\textasteriskcentered) (\\textasteriskcentered trial solution. \\textasteriskcentered) consider (o,[ ] , [1 . .sizeoforderlist]); write1n; write1n ('optimal set of orders'); ForI: = 1 tosizeoforderlistDO If I inbestsetthenwriteln(length [I]:6 ,'MM'); write1n; write1n ('wastage=', L-Bestlength:4, 'MM') End."}, "question": "task_1"}}, {"data": {"text": "Question:\nExplain briefly the background and applications of Pascal.\n\nOptions:\nA. Pascal is a modern scripting language developed in the 1990's in Germany.\nB. Pascal is an outdated programming language developed in the 1960's in the United States.\nC.             Pascal is a low-level programming language developed in the 1980's in France.\nD. Pascal is a modern high-level programming language developed in the 1970's in Switzerland. It is now used for a variety of scientific and commercial applications.\n\nAnswer: D\n\nReference Solution:\nPascal is a modern high-level programming langu-age developed in the early 1970's in Switzerland and named in honor of 17th century French mathematician and inventorBlaisePascal. Originally intended as a language for teach-ing structured programming, it is now used for a variety of scientific and commercial applications. An important boost for Pascal has come from its widespread implementation on microcomputers. Being one of the newest general purpose programming languages, Pascal features modern control structures for se-quence, selection, and iteration , which makes it particularly, well-suited for structured programming , makes programs read-able, and allows for implementation of various data-structures.", "ref_id": 4497, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Explain briefly the background and applications of Pascal.", "options": ["Pascal is a modern scripting language developed in the 1990's in Germany.", "Pascal is an outdated programming language developed in the 1960's in the United States.", "Pascal is a low-level programming language developed in the 1980's in France.", "Pascal is a modern high-level programming language developed in the 1970's in Switzerland. It is now used for a variety of scientific and commercial applications."], "answer": "D", "solution": "Pascal is a modern high-level programming langu-age developed in the early 1970's in Switzerland and named in honor of 17th century French mathematician and inventorBlaisePascal. Originally intended as a language for teach-ing structured programming, it is now used for a variety of scientific and commercial applications. An important boost for Pascal has come from its widespread implementation on microcomputers. Being one of the newest general purpose programming languages, Pascal features modern control structures for se-quence, selection, and iteration , which makes it particularly, well-suited for structured programming , makes programs read-able, and allows for implementation of various data-structures."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program which uses as input character strings of up to200 characters, consisting of left parentheses and right parenthesesonly (assume there are no blanks separating them), and determine whether the strings are \\textquotedblleftwell formed formed\\textquotedblright . A well-formed set of parentheses is one where 1)thereare equal numbers of left and right parentheses. 2) For every rightparentheses, there must be a left parentheseswhich appears earlier in the string. Print out the following message as applicable. (a) WELL FORMED (b) UNMATCHED RIGHT PARENTHESES (c) TOO MANY LEFT PARENTHESES.\n\nOptions:\nA. STRING:FUNCTIONOPTIONS(MAIN);\nB. STRING:METHODOPTIONS(MAIN);\nC.             STRING:PROBLEMOPTIONS(MAIN);\nD. STRING:PROCEDUREOPTIONS(MAIN);\n\nAnswer: D\n\nReference Solution:\nThis problem deals with the manipulation of char-acter strings. SUBSTR, INDEX and LENGTH are built-in func-tions used for solving problemson character strings. The program for the above problem has logical steps as 1) Read in parentheses 2) Find the Index of right parenthesis, i.e. position of first right parenthesisin string of parentheses. 3) If index (say) N = 1 then increment the count of right parenthesis; elseincrement count of left parenthesis. 4) Compare: IfR_count>L_countthen there is an un-matched right parenthesis. 5) Otherwise find the length L, of string parentheses. 6) If L = 1 compareR_count&L_count. If they are equal, then the stringis well-formed. IfL_count>R_count, then the string has too many leftparentheses. 7) If L \\not = 1 remove the first left or right parenthesis from the characterstring of parentheses and call this new reduced character string asparentheses itself using PAR = SUBSTR[PAR,2]. Loop back to (2). The program is as follows. STRING:PROCEDUREOPTIONS(MAIN); ONENDFILE(SYSIN) STOP; /\\textasteriskcentered R_COUNT COUNTS RIGHT PAR, L_COUNT COUNTS LEFT PAR, L_LENGTH, N_INDEX NUMBER \\textasteriskcentered/ DCL(KEY,R_COUNT,L_COUNT,L,M,N) FIXED DEC(3),PAR CHAR(200) VAR; PUTLIST('STRING' ,'MESSAGE'); PUTLIST(' ----' ,'------') SKIP (0) ; PUTSKIP(2); LOOP_1:DOWHILE(1 = 1); GETLIST(PAR); PUTLIST(PAR); R_COUNT,L_COUNT,KEY = 0; LOOP_2:DOWHILE(KEY = 0); N =INDEX(PAR,')'); /\\textasteriskcentered FINDS POSITION OF FIRST RIGHT PARENTHESIS \\textasteriskcentered/ IF N = 1 THEN R_C0UNT = R_C0UNT + 1; ELSE L_C0UNT = L_C0UNT + 1; /\\textasteriskcentered INCREMENTING R_COUNT OR L_COUNT DEPENDING ON VALUE OF N \\textasteriskcentered/ IF R_COUNT>L_COUNT THEN DO; PUTLIST('UNMATCHED RIGHT PARENTHESES ') ; KEY = 1; END; L =LENGTH(PAR); IF L = 1 THEN K = 1; LOOP_3:DO WHILE (L\\lnot = 1) ; PAR =SUBSTR(PAR, 2) ; L = 1; END LOOP_ 3; END LOOP_2; M = IL-IR; IF IR = IL THEN PUT LIST ('WELL FORMED'); IF IR<IL THEN PUT LIST (M \\vert\\vert \\textasteriskcentered TOO MANY LEFT PARENTHESES'); PUTSKIP(2); END LOOP_1; END STRING;", "ref_id": 4498, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program which uses as input character strings of up to200 characters, consisting of left parentheses and right parenthesesonly (assume there are no blanks separating them), and determine whether the strings are \\textquotedblleftwell formed formed\\textquotedblright . A well-formed set of parentheses is one where 1)thereare equal numbers of left and right parentheses. 2) For every rightparentheses, there must be a left parentheseswhich appears earlier in the string. Print out the following message as applicable. (a) WELL FORMED (b) UNMATCHED RIGHT PARENTHESES (c) TOO MANY LEFT PARENTHESES.", "options": ["STRING:FUNCTIONOPTIONS(MAIN);", "STRING:METHODOPTIONS(MAIN);", "STRING:PROBLEMOPTIONS(MAIN);", "STRING:PROCEDUREOPTIONS(MAIN);"], "answer": "D", "solution": "This problem deals with the manipulation of char-acter strings. SUBSTR, INDEX and LENGTH are built-in func-tions used for solving problemson character strings. The program for the above problem has logical steps as 1) Read in parentheses 2) Find the Index of right parenthesis, i.e. position of first right parenthesisin string of parentheses. 3) If index (say) N = 1 then increment the count of right parenthesis; elseincrement count of left parenthesis. 4) Compare: IfR_count>L_countthen there is an un-matched right parenthesis. 5) Otherwise find the length L, of string parentheses. 6) If L = 1 compareR_count&L_count. If they are equal, then the stringis well-formed. IfL_count>R_count, then the string has too many leftparentheses. 7) If L \\not = 1 remove the first left or right parenthesis from the characterstring of parentheses and call this new reduced character string asparentheses itself using PAR = SUBSTR[PAR,2]. Loop back to (2). The program is as follows. STRING:PROCEDUREOPTIONS(MAIN); ONENDFILE(SYSIN) STOP; /\\textasteriskcentered R_COUNT COUNTS RIGHT PAR, L_COUNT COUNTS LEFT PAR, L_LENGTH, N_INDEX NUMBER \\textasteriskcentered/ DCL(KEY,R_COUNT,L_COUNT,L,M,N) FIXED DEC(3),PAR CHAR(200) VAR; PUTLIST('STRING' ,'MESSAGE'); PUTLIST(' ----' ,'------') SKIP (0) ; PUTSKIP(2); LOOP_1:DOWHILE(1 = 1); GETLIST(PAR); PUTLIST(PAR); R_COUNT,L_COUNT,KEY = 0; LOOP_2:DOWHILE(KEY = 0); N =INDEX(PAR,')'); /\\textasteriskcentered FINDS POSITION OF FIRST RIGHT PARENTHESIS \\textasteriskcentered/ IF N = 1 THEN R_C0UNT = R_C0UNT + 1; ELSE L_C0UNT = L_C0UNT + 1; /\\textasteriskcentered INCREMENTING R_COUNT OR L_COUNT DEPENDING ON VALUE OF N \\textasteriskcentered/ IF R_COUNT>L_COUNT THEN DO; PUTLIST('UNMATCHED RIGHT PARENTHESES ') ; KEY = 1; END; L =LENGTH(PAR); IF L = 1 THEN K = 1; LOOP_3:DO WHILE (L\\lnot = 1) ; PAR =SUBSTR(PAR, 2) ; L = 1; END LOOP_ 3; END LOOP_2; M = IL-IR; IF IR = IL THEN PUT LIST ('WELL FORMED'); IF IR<IL THEN PUT LIST (M \\vert\\vert \\textasteriskcentered TOO MANY LEFT PARENTHESES'); PUTSKIP(2); END LOOP_1; END STRING;"}, "question": "task_1"}}, {"data": {"text": "Question:\nDescribe the data types available in Pascal.\n\nOptions:\nA. Pascal does not support user-defined data types\nB. Pascal only supports structured data types\nC.             Pascal has only integer and real number data types\nD. Pascal has 4 standard data types: signed and unsigned integers, real numbers, char, Boolean. In addition, there are enumerated, subrange types, and structured data types.\n\nAnswer: D\n\nReference Solution:\nPascal has 4 standard data types. Used to represent signed and unsigned integers. ex: -25, 600, 37523 Used to represent real numbers. ex: -7.18, 3.1459, 2.718, 1.414, 17,0 Also in scientific notation: 3.14E02, 3.14E-02 3. Char. Used to represent character data. ex: 'a' , ' '(blank), '$' , ')' 4.Boolean. Has only two values - TRUE and FALSE. In addition to these four standard types, there are enumer-ated, or user defined types. ex: TYPE DAYOFWEEK = (sun, mon, tue, wed, thu, fri, sat); color = (red, blue, green, yellow); There are also subrange types, which are some ranges of in-teger, char, or enumerated types. ex: TYPE WORKDAY = (mon . . fri); Letters = ('A' . . 'Z'); DIGITS = (0 . . 9); All of the above types are scalar types. In addition to these, Pascal also has structured data types, composed of a number of scalar types. Examples are sets, arrays and records.", "ref_id": 4499, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Describe the data types available in Pascal.", "options": ["Pascal does not support user-defined data types", "Pascal only supports structured data types", "Pascal has only integer and real number data types", "Pascal has 4 standard data types: signed and unsigned integers, real numbers, char, Boolean. In addition, there are enumerated, subrange types, and structured data types."], "answer": "D", "solution": "Pascal has 4 standard data types. Used to represent signed and unsigned integers. ex: -25, 600, 37523 Used to represent real numbers. ex: -7.18, 3.1459, 2.718, 1.414, 17,0 Also in scientific notation: 3.14E02, 3.14E-02 3. Char. Used to represent character data. ex: 'a' , ' '(blank), '$' , ')' 4.Boolean. Has only two values - TRUE and FALSE. In addition to these four standard types, there are enumer-ated, or user defined types. ex: TYPE DAYOFWEEK = (sun, mon, tue, wed, thu, fri, sat); color = (red, blue, green, yellow); There are also subrange types, which are some ranges of in-teger, char, or enumerated types. ex: TYPE WORKDAY = (mon . . fri); Letters = ('A' . . 'Z'); DIGITS = (0 . . 9); All of the above types are scalar types. In addition to these, Pascal also has structured data types, composed of a number of scalar types. Examples are sets, arrays and records."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program that\n\nOptions:\nA. The program calculates the square root of variables x and y.\nB. The program uses pointers to modify and calculate the square of variables x and y.\nC.             The program uses recursion to calculate the factorial of variables x and y.\nD. The program uses arrays to store and manipulate variables x and y.\n\nAnswer: B\n\nReference Solution:\nBefore analyzing this problem the concept of pointers and address of variables must be made clear. Pointers : The declaration format for a pointer is type \\textasteriskcenteredvariable _ name; The \\textasteriskcentered informs the compiler that the variable is actually a pointer,eg. int \\textasteriskcenteredptr; Addresses : The ampersand (&) is used to specify an address (actual memory location) of a variable. In pointers, we have created the variable ptr . Now we can assign to it the address of the variable integer _ variable. i.e. ptr = &integer _ variable; In the above assignment,ptrdoes not contain the value that is contained in the variable, integer _ variable, but it contains the location of integer _ variable in memory i.e. ptr = address of integer _ variable in memory To reference the value stored in this address throughptrwe can use it as \\textasteriskcenteredptr. The \\textasteriskcentered (asterisk) informs the computer to get the value contained at the location pointed by the pointer i.e.,ptr. Now if we make the following comparison that if (\\textasteriskcenteredptr== integer _ value) the result of the above expression is true because both variables reference the same value main ( ) {intx = 4; /\\textasteriskcenteredinitial value of x \\textasteriskcentered/ inty = 9; /\\textasteriskcenteredinitial value of y \\textasteriskcentered/ /\\textasteriskcenteredpass addresses of x and y to change _ values\\textasteriskcentered/ change _ values (&x, &y) /\\textasteriskcenteredpass addresses of x and y to square _ of _ number\\textasteriskcentered/ square _ of _ number (&x, &y) /\\textasteriskcenteredprint the squares of x and y \\textasteriskcentered/ printf(\"Square of x = %d and y = %d\\textbackslashn\", x, y); } } change _ values (xptr,yptr) int\\textasteriskcenteredxptr, +yptr; { /\\textasteriskcenteredmodify the values of variables x and y\\textasteriskcentered/ \\textasteriskcenteredxptr= \\textasteriskcenteredxptr+ 1; \\textasteriskcenteredyptr= \\textasteriskcenteredyptr+ 1; } square _ of _ number (ptrx,ptry) int\\textasteriskcenteredptrx, \\textasteriskcenteredptry; { /\\textasteriskcenteredcalculate the squares \\textasteriskcentered/ \\textasteriskcenteredptrx= \\textasteriskcenteredptrx\\textasteriskcentered \\textasteriskcenteredptrx; /\\textasteriskcenteredsquare of variable x \\textasteriskcentered/ \\textasteriskcenteredptry= \\textasteriskcenteredptry\\textasteriskcentered \\textasteriskcenteredptry /\\textasteriskcenteredsquare of variable y \\textasteriskcentered/ }", "ref_id": 4500, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program that", "options": ["The program calculates the square root of variables x and y.", "The program uses pointers to modify and calculate the square of variables x and y.", "The program uses recursion to calculate the factorial of variables x and y.", "The program uses arrays to store and manipulate variables x and y."], "answer": "B", "solution": "Before analyzing this problem the concept of pointers and address of variables must be made clear. Pointers : The declaration format for a pointer is type \\textasteriskcenteredvariable _ name; The \\textasteriskcentered informs the compiler that the variable is actually a pointer,eg. int \\textasteriskcenteredptr; Addresses : The ampersand (&) is used to specify an address (actual memory location) of a variable. In pointers, we have created the variable ptr . Now we can assign to it the address of the variable integer _ variable. i.e. ptr = &integer _ variable; In the above assignment,ptrdoes not contain the value that is contained in the variable, integer _ variable, but it contains the location of integer _ variable in memory i.e. ptr = address of integer _ variable in memory To reference the value stored in this address throughptrwe can use it as \\textasteriskcenteredptr. The \\textasteriskcentered (asterisk) informs the computer to get the value contained at the location pointed by the pointer i.e.,ptr. Now if we make the following comparison that if (\\textasteriskcenteredptr== integer _ value) the result of the above expression is true because both variables reference the same value main ( ) {intx = 4; /\\textasteriskcenteredinitial value of x \\textasteriskcentered/ inty = 9; /\\textasteriskcenteredinitial value of y \\textasteriskcentered/ /\\textasteriskcenteredpass addresses of x and y to change _ values\\textasteriskcentered/ change _ values (&x, &y) /\\textasteriskcenteredpass addresses of x and y to square _ of _ number\\textasteriskcentered/ square _ of _ number (&x, &y) /\\textasteriskcenteredprint the squares of x and y \\textasteriskcentered/ printf(\"Square of x = %d and y = %d\\textbackslashn\", x, y); } } change _ values (xptr,yptr) int\\textasteriskcenteredxptr, +yptr; { /\\textasteriskcenteredmodify the values of variables x and y\\textasteriskcentered/ \\textasteriskcenteredxptr= \\textasteriskcenteredxptr+ 1; \\textasteriskcenteredyptr= \\textasteriskcenteredyptr+ 1; } square _ of _ number (ptrx,ptry) int\\textasteriskcenteredptrx, \\textasteriskcenteredptry; { /\\textasteriskcenteredcalculate the squares \\textasteriskcentered/ \\textasteriskcenteredptrx= \\textasteriskcenteredptrx\\textasteriskcentered \\textasteriskcenteredptrx; /\\textasteriskcenteredsquare of variable x \\textasteriskcentered/ \\textasteriskcenteredptry= \\textasteriskcenteredptry\\textasteriskcentered \\textasteriskcenteredptry /\\textasteriskcenteredsquare of variable y \\textasteriskcentered/ }"}, "question": "task_1"}}, {"data": {"text": "Question:\nWhat is wrong in the following array declaration? int my _ array (200);\n\nOptions:\nA. The array size is too large\nB. The array is not initialized\nC.             The number of subscripts is not enclosed in square brackets\nD. Invalid variable name\n\nAnswer: C\n\nReference Solution:\nArrays in C are created based on the four data types (int, char, float or double). The basic format of an array declaration is as follows: <array's _ type> <variable __ name> [number _ of _ subscripts]; The items appearing above i.e. array's __ type and variable _ name and number _ of _ subscripts have to be provided to declare an ar-ray. < > brackets are used only for identity purpose, but they are restricted in C (used only in defining directories). If we check the above statement, int my _ array (200); we note that individual items are as follows: int : array's _ type my _ array: variable _ name 200: number _ of _ subscripts. But the standard notation of enclosing number _ of _ sub-scripts in square brackets i.e. [], instead of which ( ) has been used, is missing. Therefore the correct declaration is: int my _ array [200];", "ref_id": 4501, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "What is wrong in the following array declaration? int my _ array (200);", "options": ["The array size is too large", "The array is not initialized", "The number of subscripts is not enclosed in square brackets", "Invalid variable name"], "answer": "C", "solution": "Arrays in C are created based on the four data types (int, char, float or double). The basic format of an array declaration is as follows: <array's _ type> <variable __ name> [number _ of _ subscripts]; The items appearing above i.e. array's __ type and variable _ name and number _ of _ subscripts have to be provided to declare an ar-ray. < > brackets are used only for identity purpose, but they are restricted in C (used only in defining directories). If we check the above statement, int my _ array (200); we note that individual items are as follows: int : array's _ type my _ array: variable _ name 200: number _ of _ subscripts. But the standard notation of enclosing number _ of _ sub-scripts in square brackets i.e. [], instead of which ( ) has been used, is missing. Therefore the correct declaration is: int my _ array [200];"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a function which utilizes the Newton-Raphsonmethod tocompute the square root of a number.\n\nOptions:\nA. FUNCTION ROOT (WORK) ARG = ABS (WORK) ROOT = ARG/2.0 DO 6 IDX = 1,10 ROOT = (ROOT + ARG/ROOT) /2.0 IF(ABS((R00T\textasteriskcentered\textasteriskcentered2 -ARG)/ARG) - 0.00001) 7,7,6 6CONTINUE 7RETURN END\nB. FUNCTION ROOT (WORK) ARG = ABS (WORK) ROOT = ARG/2.0 DO 6 IDX = 1,100 ROOT = (ROOT + ARG/ROOT) /2.0 IF(ABS((R00T\textasteriskcentered\textasteriskcentered2 -ARG)/ARG) - 0.01) 7,7,6 6CONTINUE 7RETURN END\nC.             FUNCTION ROOT (WORK) ARG = ABS (WORK) ROOT = ARG/2.0 DO 6 IDX = 1,100 ROOT = (ROOT + ARG/ROOT) /2.0 IF(ABS((R00T\textasteriskcentered\textasteriskcentered2 -ARG)/ARG) - 0.000001) 7,7,6 6CONTINUE 7RETURN END\nD. FUNCTION ROOT (WORK) ARG = ABS (WORK) ROOT = ARG/2.0 DO 6 IDX = 1,100 ROOT = (ROOT + ARG/ROOT) /2.0 IF(ABS((R00T\textasteriskcentered\textasteriskcentered2 -ARG)/ARG) - 0.1) 7,7,6 6CONTINUE 7RETURN END\n\nAnswer: C\n\nReference Solution:\nBy applying the Newton-Raphsonmethod x_n+1 =x_n- [f(x_n) / f'(x_n)] tothe case of f(x) = x2 - (root)2 = 0 (where (root)2 is the given number), onearrives at the algorithm below: x_n+1 =x_n- [{x2_n- (root)2} / 2x_n ] = 1/2 [x_n+ {(root)2 /x_n}]. FUNCTION ROOT (WORK) ARG = ABS (WORK) ROOT = ARG/2.0 DO 6 IDX = 1,100 ROOT = (ROOT + ARG/ROOT) /2.0 IF(ABS((R00T\\textasteriskcentered\\textasteriskcentered2 -ARG)/ARG) - 0.000001) 7,7,6 6CONTINUE 7RETURN END", "ref_id": 4502, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a function which utilizes the Newton-Raphsonmethod tocompute the square root of a number.", "options": ["FUNCTION ROOT (WORK) ARG = ABS (WORK) ROOT = ARG/2.0 DO 6 IDX = 1,10 ROOT = (ROOT + ARG/ROOT) /2.0 IF(ABS((R00T\textasteriskcentered\textasteriskcentered2 -ARG)/ARG) - 0.00001) 7,7,6 6CONTINUE 7RETURN END", "FUNCTION ROOT (WORK) ARG = ABS (WORK) ROOT = ARG/2.0 DO 6 IDX = 1,100 ROOT = (ROOT + ARG/ROOT) /2.0 IF(ABS((R00T\textasteriskcentered\textasteriskcentered2 -ARG)/ARG) - 0.01) 7,7,6 6CONTINUE 7RETURN END", "FUNCTION ROOT (WORK) ARG = ABS (WORK) ROOT = ARG/2.0 DO 6 IDX = 1,100 ROOT = (ROOT + ARG/ROOT) /2.0 IF(ABS((R00T\textasteriskcentered\textasteriskcentered2 -ARG)/ARG) - 0.000001) 7,7,6 6CONTINUE 7RETURN END", "FUNCTION ROOT (WORK) ARG = ABS (WORK) ROOT = ARG/2.0 DO 6 IDX = 1,100 ROOT = (ROOT + ARG/ROOT) /2.0 IF(ABS((R00T\textasteriskcentered\textasteriskcentered2 -ARG)/ARG) - 0.1) 7,7,6 6CONTINUE 7RETURN END"], "answer": "C", "solution": "By applying the Newton-Raphsonmethod x_n+1 =x_n- [f(x_n) / f'(x_n)] tothe case of f(x) = x2 - (root)2 = 0 (where (root)2 is the given number), onearrives at the algorithm below: x_n+1 =x_n- [{x2_n- (root)2} / 2x_n ] = 1/2 [x_n+ {(root)2 /x_n}]. FUNCTION ROOT (WORK) ARG = ABS (WORK) ROOT = ARG/2.0 DO 6 IDX = 1,100 ROOT = (ROOT + ARG/ROOT) /2.0 IF(ABS((R00T\\textasteriskcentered\\textasteriskcentered2 -ARG)/ARG) - 0.000001) 7,7,6 6CONTINUE 7RETURN END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a BASIC program to compute the inverse and the transpose of a 3\u00d73 matrix A. Apply the program to the case where A =\\mid 1-12 \\mid \\mid 201 \\mid \\mid 031 \\mid\n\nOptions:\nA. MAT B = TRN (A) and MAT C = INV (B)\nB. MAT B = INV (A) and MAT C = TRN (B)\nC.             MAT B = INV (A) and MAT C = TRN (A)\nD. MAT B = TRN (A) and MAT C = INV (A)\n\nAnswer: C\n\nReference Solution:\nThe inverse of a matrix A is another matrix B such that, when multiplied by A, gives an identity matrix. The statement in BASIC which results in forming of an inverse matrix B of matrix A is as follows: MATB = INV (A) A transpose C of the matrix A is a matrix with rows identical to the respective columns of A, and columns identical to the respective rows of A =\\mid 123 \\mid \\mid 7110 \\mid \\mid-645 \\mid Then the transpose of A is: \\mid 17-6 \\mid \\mid 2114 \\mid \\mid 305 \\mid The corresponding BASIC statement is: MAT C = TRN(S) After generating the inverse and the transpose matrices of A, the following program also checks if B is really an inverse by multi-plying A and B to form matrix I. If I comes out to be an identity matrix, then B is indeed an inverse of A. The program looks as follows: 100DIM A (3, 3), B (3, 3), C (3, 3), I (3, 3) 110MAT READA 120MAT B = INV (A) 121PRINT 122PRINT 130MAT PRINT B: 140MAT C = TRN (A) 141PRINT 150MAT PRINT C: 160MAT I = A\\textasteriskcenteredB 161PRINT 170MAT PRINT I; 800DATA 1, -1, 2, 2, 0, 1, 0, 3, 1 999END", "ref_id": 4503, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a BASIC program to compute the inverse and the transpose of a 3\u00d73 matrix A. Apply the program to the case where A =\\mid 1-12 \\mid \\mid 201 \\mid \\mid 031 \\mid", "options": ["MAT B = TRN (A) and MAT C = INV (B)", "MAT B = INV (A) and MAT C = TRN (B)", "MAT B = INV (A) and MAT C = TRN (A)", "MAT B = TRN (A) and MAT C = INV (A)"], "answer": "C", "solution": "The inverse of a matrix A is another matrix B such that, when multiplied by A, gives an identity matrix. The statement in BASIC which results in forming of an inverse matrix B of matrix A is as follows: MATB = INV (A) A transpose C of the matrix A is a matrix with rows identical to the respective columns of A, and columns identical to the respective rows of A =\\mid 123 \\mid \\mid 7110 \\mid \\mid-645 \\mid Then the transpose of A is: \\mid 17-6 \\mid \\mid 2114 \\mid \\mid 305 \\mid The corresponding BASIC statement is: MAT C = TRN(S) After generating the inverse and the transpose matrices of A, the following program also checks if B is really an inverse by multi-plying A and B to form matrix I. If I comes out to be an identity matrix, then B is indeed an inverse of A. The program looks as follows: 100DIM A (3, 3), B (3, 3), C (3, 3), I (3, 3) 110MAT READA 120MAT B = INV (A) 121PRINT 122PRINT 130MAT PRINT B: 140MAT C = TRN (A) 141PRINT 150MAT PRINT C: 160MAT I = A\\textasteriskcenteredB 161PRINT 170MAT PRINT I; 800DATA 1, -1, 2, 2, 0, 1, 0, 3, 1 999END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program to simulate a coin toss experiment of 50 tosses. Repeat the experiment ten times. Count the number of heads in each experiment and print out this value.\n\nOptions:\nA. LET F = INT(3*RND + 1)\nB. LET F = INT(2*RND - 1)\nC.             LET F = INT(2*RND + 1)\nD. LET F = INT(2*RND + 2)\n\nAnswer: C\n\nReference Solution:\nWe know that if we say LET F = INT(2\\textasteriskcenteredRND + 1) then F takes on values of 1 and 2 randomly corresponding to heads and tails. Hence we will loop through this statement to produce the required simulation: 2 FOR Y = 1 TO 1\\O 5 LET C = \\O 1\\O FOR X = 1 TO 5\\O 2\\O LET F= INT (2\\textasteriskcenteredRND + 1) 3\\O IF F = 1 THEN 6\\O 4\\O PRINT \"T\"; 5\\O GO TO 1\\O\\O 58 REM C COUNTS THE NUMBER OF HEADS 6\\O LET C = C + 1 7\\O PRINT \"H\"; 1\\O\\O NEXT X 11\\O PRINT 12\\O PRINT C; \"HEADS OUT OF 5\\O FLIPS\" 125 NEXT Y 13\\O END", "ref_id": 4504, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program to simulate a coin toss experiment of 50 tosses. Repeat the experiment ten times. Count the number of heads in each experiment and print out this value.", "options": ["LET F = INT(3*RND + 1)", "LET F = INT(2*RND - 1)", "LET F = INT(2*RND + 1)", "LET F = INT(2*RND + 2)"], "answer": "C", "solution": "We know that if we say LET F = INT(2\\textasteriskcenteredRND + 1) then F takes on values of 1 and 2 randomly corresponding to heads and tails. Hence we will loop through this statement to produce the required simulation: 2 FOR Y = 1 TO 1\\O 5 LET C = \\O 1\\O FOR X = 1 TO 5\\O 2\\O LET F= INT (2\\textasteriskcenteredRND + 1) 3\\O IF F = 1 THEN 6\\O 4\\O PRINT \"T\"; 5\\O GO TO 1\\O\\O 58 REM C COUNTS THE NUMBER OF HEADS 6\\O LET C = C + 1 7\\O PRINT \"H\"; 1\\O\\O NEXT X 11\\O PRINT 12\\O PRINT C; \"HEADS OUT OF 5\\O FLIPS\" 125 NEXT Y 13\\O END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program in FORTRAN that prints a calendar for any month of the year from March 1600 to year N.\n\nOptions:\nA. Java program to print a calendar\nB. Python program to print a calendar\nC.             C++ program to print a calendar\nD. CCALENDAR PROGRAM INTEGER BLANK, DATE, YEAR, RMTHS CTHE ELEMENTS OF DATE, ALONG WITH THE CCHARACTER BLANK, ARE USED TO PRINT CALENDAR CIF FIRST DAY OF MONTH IS NOT SUNDAY. DIMENSION RMTHS (12), DATE (6) DATA RMTHS...\n\nAnswer: D\n\nReference Solution:\nTo grasp a thorough theoretical knowledge of the procedure behind this problem, one needs to know something about congruence and modulo arithmetic. Here, we will try to minimize the theoretical discussion and simply state some pertinent theorems. We will look at the Gregorian calendar, first implemented on October 15, 1582. Let N be any year later than 1600. Then, between the year 1600 exclusive, and the year N inclusive, there are [N/4] - 400 years divisible by 4 To prove this let y be any year such that 1600 < y \\leq N, Year y is divisible by 4 only if y = 4x, where x is an integer. Thus, the number of years divisible by 4 is the same as the number of integers x satisfying 1600 < 4x \\leq N, or 400 < x \\leq N/4. There are clearly [N/4] - 400 of such integers. [N/400] - 4 years divisible by 400 [N/100] - 16 century-beginning years [N/100] - [N/400] - 12 century-beginning years that are not leap years [N/4] - [N/100] + [N/400] - 388 leap years [A/4] + [B/4] + 24A - 388 leap years, where A and B are integers governed uniquely by the restrictions N = 100A + B and 0 \\leq B < 100 (Brackets are used to express the greater integer part of the division.) These relations tell us that leap years, containing 366 days, are those divisible by 4, and that century-beginning years are leap years only if divisible by 400. Thus, 1600, 2000, 2400,... are century-beginning leap years. Since February is a troublesome month, especially during leap years, we rearrange our calendar so that March is the first month of the year N. January and February of year N become the eleventh and twelfth months of year N - 1. Then, April through the following February become the second through twelfth months of year N. This places February at the end of the year, a manipulation which will make the program simpler to follow. We must also consider the days of the week. Starting with Sunday, we number the days 0,1,2,3,4,5,6, ending with Saturday. The theorem which gives the weekday number of theKthday of month M of year N (known as Zeller's congruence) is K + [2.6M - 0.2] + B + [B/4] + [A/4] + 2A(mod 7). To understand the derivation of this formula, consider the following: Since March 1, 1600 fell on a Wednesday, its weekday number is W = 3. Since 365 \\equiv 1 (mod 7) (365 - 1 = 364 is divisible by 7), March 1, 1601 has weekday number 4. March 1, 1602 has number 5 and March 1, 1603 has number 6. But March 1, 1604 has number 1, not 0 because it is a leap year. In general, the weekday number W_N of March 1 of year N is: W_N = W + t + e (mod 7), where W = 3(1) where t is the total number of years and e is the number of leap years between 1600 exclusive and N inclusive. Now, t = N - 1600, N = 100A + B, and, e = [A/4] + [B/4] + 24A - 388. Thus, equation (1) is: W_N = 3 + 100A + B - 1600 + [B/4] + [A/4] + 24A - 388 (mod 7) or, after simplification, W_N = 3 + B + [B/4] + [A/4] - 2A (mod 7).(2) Equation (2) gives the weekday number of March 1 for any N. Since April 1 occurs 31 days after March 1, and 31 \\equiv 3 (mod 7), its week-day number is 3 more than the weekday number of March 1, i.e., 6. Continuing for the other months we obtain the sequence of constants W: 3,6, 8, 11, 13, 16, 19, 21, 24, 26, 29, 32 \\uparrow\\uparrow MarApr .... Reverend Zeller noticed that the arithmetic function 1 + [2.6m - 0.2] assumes exactly this sequence of integers for m = 1,2,...,12. Hence, the weekday number of the first day of any month, m, of the Nth year is given by W_N \\equiv 1 + [2.6m - 0.2] + B + [B/4] + [A/4] - 2A (mod 7)(3) Finally, if, instead of the first day, we consider thekthday, Zeller's congruence is obtained; W_N \\equiv k + [2.6m - 0.2] + B + [B/4] + [A/4] - 2A (mod 7). Take for example November 1, 2060. K is 1, M is 9 (according to our renumbering scheme), B is 60, and A is 20 (since N = 2060, and N = 100A + B). Plugging in the values, we get 1 + 23 + 60 + 15 + 5 - 40 = 64. To complete the problem, we find that 64 \\equiv 1 (mod 7) since 64 - 1 is divisible by 7. Hence, 1 corresponds to Monday, and the answer is obtained. We present the program forthwith, high-lighting control sections with comments. CCALENDAR PROGRAM INTEGER BLANK, DATE, YEAR, RMTHS CTHE ELEMENTS OF DATE, ALONG WITH THE CCHARACTER BLANK, ARE USED TO PRINT CALENDAR CIF FIRST DAY OF MONTH IS NOT SUNDAY. DIMENSION RMTHS (12), DATE (6) DATA RMTHS/'JAN ', 'FEB ', 'MAR ', 'APR, 'MAY', 'JUN', 1'JUL ', 'AUG ', 'SEP ', 'OCT', 'NOV ', 'DEC' / DATA BLANK, DATE/' ', '1', '2', '3', '4', '5', '6'/ CINPUT MONTH (JAN = 1, FEB = 2,..., DEC = 12) AND YEAR 10READ (5,100) MONTH, YEAR 100FORMAT (I2, I4) CDO WHILE YEAR GREATER THAN ZERO IF (YEAR.LE.O) GO TO 99 CNOW, MONTHS ARE RENUMBERED SUCH THAT CM = 1 FOR MAR, M = 2 FOR APR, AMD SO ON UNTIL CM = 10 FOR DEC. FOR JAN AND FEB, M = 11 AND M = 12 COF PRECEDING YEAR. 20NEWYR = YEAR IF (MONTH - 2) 25, 30, 35 CJANUARY SECTION 25M = 11 NEWYR = NEWYR - 1 CNDIM EQUALS NUMBER OF DAYS IN MONTH NDIM = 31 GO TO 40 CFEBRUARY SECTION 30M = 12 NEWYR = NEWYR - 1 CDETERMINE WHETHER NYEAR IS A LEAP YEAR IF (YEAR.NE. (YEAR/4) \\textasteriskcentered4) GO TO 33 IF (YEAR.NE. (YEAR/100)\\textasteriskcentered100) GO TO 34 IF (YEAR.EQ. (YEAR/400) \\textasteriskcentered400) GO TO 34 CIF YEAR IS NOT A LEAP YEAR 33NDIM = 28 GO TO 40 CIF YEAR IS A LEAP YEAR 34NDIM = 29 GO TO 40 CNOW COMPUTE MARCH THROUGH DECEMBER M = MONTH - 2 CCASE STRUCTURE TO DETERMINE DAYS IN MONTH GO TO (36, 37, 36, 37, 36, 36, 37, 36, 37, 36), M 36NDIM = 31 GO TO 40 37NDIM = 30 CNOW CALCULATE WEEKDAY NUMBER FOR THE CFIRST DAY OF THE MONTH 40NC = NEWYR/100 ND = NEWYR - 100\\textasteriskcenteredNC NW = 1 + (26\\textasteriskcenteredM-2)/10 + ND + ND/4 + NC/4 - 2\\textasteriskcenteredNC CDO LOOP REDUCES WEEKDAY NUMBER MODULO 7 CTO ONE OF THE VALUES 0, 1, 2,...,6. DO 41 I = 1,7 NWKDAY =I - 1 NDIFF = NW - NWKDAY IF (NDIFF.EQ.(NDIFF/7)\\textasteriskcentered7) GO TO 45 41CONTINUE CWRITE HEADINGS 45WRITE (6, 101) RMTHS (MONTH), YEAR 101FORMAT (1HO, 10X, A4, I4) WRITE (6, 102) 102FORMAT (1HO, 27HSUN MON TUE WED THU FRI SAT/) IF (NWKDAY. EQ.O) GO TO 52 CTHIS SECTION PRINTS THE FIRST WEEK OF THE CMONTH IF SUNDAY IS NOT THE FIRST DAY LIM = 7 - NWKDAY WRITE (6, 103) (BLANK, I = 1, NWKDAY), (DATE(I), I = 1, LIM) 103FORMAT (7(3X,A1)) LIM = LIM + 1 GO TO 53 52LIM = 1 CFINISH PRINTING CALENDAR 53WRITE (6, 104) (I, I = LIM,NDIM) 104FORMAT (7I4) GO TO 10 CEND DO-WHILE 99STOP END", "ref_id": 4505, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program in FORTRAN that prints a calendar for any month of the year from March 1600 to year N.", "options": ["Java program to print a calendar", "Python program to print a calendar", "C++ program to print a calendar", "CCALENDAR PROGRAM INTEGER BLANK, DATE, YEAR, RMTHS CTHE ELEMENTS OF DATE, ALONG WITH THE CCHARACTER BLANK, ARE USED TO PRINT CALENDAR CIF FIRST DAY OF MONTH IS NOT SUNDAY. DIMENSION RMTHS (12), DATE (6) DATA RMTHS..."], "answer": "D", "solution": "To grasp a thorough theoretical knowledge of the procedure behind this problem, one needs to know something about congruence and modulo arithmetic. Here, we will try to minimize the theoretical discussion and simply state some pertinent theorems. We will look at the Gregorian calendar, first implemented on October 15, 1582. Let N be any year later than 1600. Then, between the year 1600 exclusive, and the year N inclusive, there are [N/4] - 400 years divisible by 4 To prove this let y be any year such that 1600 < y \\leq N, Year y is divisible by 4 only if y = 4x, where x is an integer. Thus, the number of years divisible by 4 is the same as the number of integers x satisfying 1600 < 4x \\leq N, or 400 < x \\leq N/4. There are clearly [N/4] - 400 of such integers. [N/400] - 4 years divisible by 400 [N/100] - 16 century-beginning years [N/100] - [N/400] - 12 century-beginning years that are not leap years [N/4] - [N/100] + [N/400] - 388 leap years [A/4] + [B/4] + 24A - 388 leap years, where A and B are integers governed uniquely by the restrictions N = 100A + B and 0 \\leq B < 100 (Brackets are used to express the greater integer part of the division.) These relations tell us that leap years, containing 366 days, are those divisible by 4, and that century-beginning years are leap years only if divisible by 400. Thus, 1600, 2000, 2400,... are century-beginning leap years. Since February is a troublesome month, especially during leap years, we rearrange our calendar so that March is the first month of the year N. January and February of year N become the eleventh and twelfth months of year N - 1. Then, April through the following February become the second through twelfth months of year N. This places February at the end of the year, a manipulation which will make the program simpler to follow. We must also consider the days of the week. Starting with Sunday, we number the days 0,1,2,3,4,5,6, ending with Saturday. The theorem which gives the weekday number of theKthday of month M of year N (known as Zeller's congruence) is K + [2.6M - 0.2] + B + [B/4] + [A/4] + 2A(mod 7). To understand the derivation of this formula, consider the following: Since March 1, 1600 fell on a Wednesday, its weekday number is W = 3. Since 365 \\equiv 1 (mod 7) (365 - 1 = 364 is divisible by 7), March 1, 1601 has weekday number 4. March 1, 1602 has number 5 and March 1, 1603 has number 6. But March 1, 1604 has number 1, not 0 because it is a leap year. In general, the weekday number W_N of March 1 of year N is: W_N = W + t + e (mod 7), where W = 3(1) where t is the total number of years and e is the number of leap years between 1600 exclusive and N inclusive. Now, t = N - 1600, N = 100A + B, and, e = [A/4] + [B/4] + 24A - 388. Thus, equation (1) is: W_N = 3 + 100A + B - 1600 + [B/4] + [A/4] + 24A - 388 (mod 7) or, after simplification, W_N = 3 + B + [B/4] + [A/4] - 2A (mod 7).(2) Equation (2) gives the weekday number of March 1 for any N. Since April 1 occurs 31 days after March 1, and 31 \\equiv 3 (mod 7), its week-day number is 3 more than the weekday number of March 1, i.e., 6. Continuing for the other months we obtain the sequence of constants W: 3,6, 8, 11, 13, 16, 19, 21, 24, 26, 29, 32 \\uparrow\\uparrow MarApr .... Reverend Zeller noticed that the arithmetic function 1 + [2.6m - 0.2] assumes exactly this sequence of integers for m = 1,2,...,12. Hence, the weekday number of the first day of any month, m, of the Nth year is given by W_N \\equiv 1 + [2.6m - 0.2] + B + [B/4] + [A/4] - 2A (mod 7)(3) Finally, if, instead of the first day, we consider thekthday, Zeller's congruence is obtained; W_N \\equiv k + [2.6m - 0.2] + B + [B/4] + [A/4] - 2A (mod 7). Take for example November 1, 2060. K is 1, M is 9 (according to our renumbering scheme), B is 60, and A is 20 (since N = 2060, and N = 100A + B). Plugging in the values, we get 1 + 23 + 60 + 15 + 5 - 40 = 64. To complete the problem, we find that 64 \\equiv 1 (mod 7) since 64 - 1 is divisible by 7. Hence, 1 corresponds to Monday, and the answer is obtained. We present the program forthwith, high-lighting control sections with comments. CCALENDAR PROGRAM INTEGER BLANK, DATE, YEAR, RMTHS CTHE ELEMENTS OF DATE, ALONG WITH THE CCHARACTER BLANK, ARE USED TO PRINT CALENDAR CIF FIRST DAY OF MONTH IS NOT SUNDAY. DIMENSION RMTHS (12), DATE (6) DATA RMTHS/'JAN ', 'FEB ', 'MAR ', 'APR, 'MAY', 'JUN', 1'JUL ', 'AUG ', 'SEP ', 'OCT', 'NOV ', 'DEC' / DATA BLANK, DATE/' ', '1', '2', '3', '4', '5', '6'/ CINPUT MONTH (JAN = 1, FEB = 2,..., DEC = 12) AND YEAR 10READ (5,100) MONTH, YEAR 100FORMAT (I2, I4) CDO WHILE YEAR GREATER THAN ZERO IF (YEAR.LE.O) GO TO 99 CNOW, MONTHS ARE RENUMBERED SUCH THAT CM = 1 FOR MAR, M = 2 FOR APR, AMD SO ON UNTIL CM = 10 FOR DEC. FOR JAN AND FEB, M = 11 AND M = 12 COF PRECEDING YEAR. 20NEWYR = YEAR IF (MONTH - 2) 25, 30, 35 CJANUARY SECTION 25M = 11 NEWYR = NEWYR - 1 CNDIM EQUALS NUMBER OF DAYS IN MONTH NDIM = 31 GO TO 40 CFEBRUARY SECTION 30M = 12 NEWYR = NEWYR - 1 CDETERMINE WHETHER NYEAR IS A LEAP YEAR IF (YEAR.NE. (YEAR/4) \\textasteriskcentered4) GO TO 33 IF (YEAR.NE. (YEAR/100)\\textasteriskcentered100) GO TO 34 IF (YEAR.EQ. (YEAR/400) \\textasteriskcentered400) GO TO 34 CIF YEAR IS NOT A LEAP YEAR 33NDIM = 28 GO TO 40 CIF YEAR IS A LEAP YEAR 34NDIM = 29 GO TO 40 CNOW COMPUTE MARCH THROUGH DECEMBER M = MONTH - 2 CCASE STRUCTURE TO DETERMINE DAYS IN MONTH GO TO (36, 37, 36, 37, 36, 36, 37, 36, 37, 36), M 36NDIM = 31 GO TO 40 37NDIM = 30 CNOW CALCULATE WEEKDAY NUMBER FOR THE CFIRST DAY OF THE MONTH 40NC = NEWYR/100 ND = NEWYR - 100\\textasteriskcenteredNC NW = 1 + (26\\textasteriskcenteredM-2)/10 + ND + ND/4 + NC/4 - 2\\textasteriskcenteredNC CDO LOOP REDUCES WEEKDAY NUMBER MODULO 7 CTO ONE OF THE VALUES 0, 1, 2,...,6. DO 41 I = 1,7 NWKDAY =I - 1 NDIFF = NW - NWKDAY IF (NDIFF.EQ.(NDIFF/7)\\textasteriskcentered7) GO TO 45 41CONTINUE CWRITE HEADINGS 45WRITE (6, 101) RMTHS (MONTH), YEAR 101FORMAT (1HO, 10X, A4, I4) WRITE (6, 102) 102FORMAT (1HO, 27HSUN MON TUE WED THU FRI SAT/) IF (NWKDAY. EQ.O) GO TO 52 CTHIS SECTION PRINTS THE FIRST WEEK OF THE CMONTH IF SUNDAY IS NOT THE FIRST DAY LIM = 7 - NWKDAY WRITE (6, 103) (BLANK, I = 1, NWKDAY), (DATE(I), I = 1, LIM) 103FORMAT (7(3X,A1)) LIM = LIM + 1 GO TO 53 52LIM = 1 CFINISH PRINTING CALENDAR 53WRITE (6, 104) (I, I = LIM,NDIM) 104FORMAT (7I4) GO TO 10 CEND DO-WHILE 99STOP END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program in BASIC to find the sum and number of factors for the integers between 1000 and 1050, not including 1 and the integer itself.\n\nOptions:\nA. 15LET F = 1133 20LET F = F + 1 25IF F < 1175 THEN 30 28STOP 30LET M = 0 32LET N = 0 34LET D = 2 35LET Y = F/D 40LET W = INT(Y) 45IF W < > Y THEN 70 50LET M = M + D 55LET N = N + 1 60IF D = Y THEN 70 65LET M = M + Y 68LET N = N + 1 70LET D = D + 1 75IF D\textasteriskcenteredD < = F THEN 35 80PRINT F,M,N 90GO TO 25 95END\nB. 10LET F = 1133 20LET F = F + 1 25IF F < 1175 THEN 30 28STOP 30LET M = 0 32LET N = 0 34LET D = 2 35LET Y = F/D 40LET W = INT(Y) 45IF W < > Y THEN 70 50LET M = M + D 55LET N = N + 1 60IF D = Y THEN 70 65LET M = M + Y 68LET N = N + 1 70LET D = D + 1 75IF D\textasteriskcenteredD < = F THEN 35 80PRINT F,M,N 90GO TO 20 95END\nC.             15LET F = 1133 20LET F = F + 1 25IF F < 1175 THEN 30 28STOP 30LET M = 0 32LET N = 0 34LET D = 2 35LET Y = F/D 40LET W = INT(Y) 45IF W < > Y THEN 70 50LET M = M + D 55LET N = N + 1 60IF D = Y THEN 70 65LET M = M + Y 68LET N = N + 1 70LET D = D + 1 75IF D\textasteriskcenteredD < = F THEN 35 80PRINT F,M,N 90GO TO 20 95END\nD. 15LET F = 1133 25LET F = F + 1 25IF F < 1175 THEN 30 28STOP 30LET M = 0 32LET N = 0 34LET D = 2 35LET Y = F/D 40LET W = INT(Y) 45IF W < > Y THEN 70 50LET M = M + D 55LET N = N + 1 60IF D = Y THEN 70 65LET M = M + Y 68LET N = N + 1 70LET D = D + 1 75IF D\textasteriskcenteredD < = F THEN 35 80PRINT F,M,N 90GO TO 20 95END\n\nAnswer: C\n\nReference Solution:\nAs an example, consider the integer 36, It has 7 factors: 2,3,4,6,9,12,18, the sum of which is 54. The presented program outputs the considered integer, sum of its factors, and the number of factors. The program terminates when the considered number is greater than 1050. The program looks as follows: 15LET F = 1133 20LET F = F + 1 25IF F < 1175 THEN 30 28STOP 30LET M = 0 32LET N = 0 34LET D = 2 35LET Y = F/D 40LET W = INT(Y) 45IF W < > Y THEN 70 50LET M = M + D 55LET N = N + 1 60IF D = Y THEN 70 65LET M = M + Y 68LET N = N + 1 70LET D = D + 1 75IF D\\textasteriskcenteredD < = F THEN 35 80PRINT F,M,N 90GO TO 20 95END", "ref_id": 4506, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program in BASIC to find the sum and number of factors for the integers between 1000 and 1050, not including 1 and the integer itself.", "options": ["15LET F = 1133 20LET F = F + 1 25IF F < 1175 THEN 30 28STOP 30LET M = 0 32LET N = 0 34LET D = 2 35LET Y = F/D 40LET W = INT(Y) 45IF W < > Y THEN 70 50LET M = M + D 55LET N = N + 1 60IF D = Y THEN 70 65LET M = M + Y 68LET N = N + 1 70LET D = D + 1 75IF D\textasteriskcenteredD < = F THEN 35 80PRINT F,M,N 90GO TO 25 95END", "10LET F = 1133 20LET F = F + 1 25IF F < 1175 THEN 30 28STOP 30LET M = 0 32LET N = 0 34LET D = 2 35LET Y = F/D 40LET W = INT(Y) 45IF W < > Y THEN 70 50LET M = M + D 55LET N = N + 1 60IF D = Y THEN 70 65LET M = M + Y 68LET N = N + 1 70LET D = D + 1 75IF D\textasteriskcenteredD < = F THEN 35 80PRINT F,M,N 90GO TO 20 95END", "15LET F = 1133 20LET F = F + 1 25IF F < 1175 THEN 30 28STOP 30LET M = 0 32LET N = 0 34LET D = 2 35LET Y = F/D 40LET W = INT(Y) 45IF W < > Y THEN 70 50LET M = M + D 55LET N = N + 1 60IF D = Y THEN 70 65LET M = M + Y 68LET N = N + 1 70LET D = D + 1 75IF D\textasteriskcenteredD < = F THEN 35 80PRINT F,M,N 90GO TO 20 95END", "15LET F = 1133 25LET F = F + 1 25IF F < 1175 THEN 30 28STOP 30LET M = 0 32LET N = 0 34LET D = 2 35LET Y = F/D 40LET W = INT(Y) 45IF W < > Y THEN 70 50LET M = M + D 55LET N = N + 1 60IF D = Y THEN 70 65LET M = M + Y 68LET N = N + 1 70LET D = D + 1 75IF D\textasteriskcenteredD < = F THEN 35 80PRINT F,M,N 90GO TO 20 95END"], "answer": "C", "solution": "As an example, consider the integer 36, It has 7 factors: 2,3,4,6,9,12,18, the sum of which is 54. The presented program outputs the considered integer, sum of its factors, and the number of factors. The program terminates when the considered number is greater than 1050. The program looks as follows: 15LET F = 1133 20LET F = F + 1 25IF F < 1175 THEN 30 28STOP 30LET M = 0 32LET N = 0 34LET D = 2 35LET Y = F/D 40LET W = INT(Y) 45IF W < > Y THEN 70 50LET M = M + D 55LET N = N + 1 60IF D = Y THEN 70 65LET M = M + Y 68LET N = N + 1 70LET D = D + 1 75IF D\\textasteriskcenteredD < = F THEN 35 80PRINT F,M,N 90GO TO 20 95END"}, "question": "task_1"}}, {"data": {"text": "Question:\nHow does thetypedefstatement increase portability?\n\nOptions:\nA. Improves code efficiency\nB. Reduces code size\nC.             Enhances code readability\nD. Increases code portability\n\nAnswer: D\n\nReference Solution:\nIn C new data types can be created usingtypedefstatement. Once a type is defined, it can be used in the same manner as the standard C types. The main advantage of usingtypedefstatement is for porta-bility of code, i.e. code which can be run without change on a variety of hardware. Some machines define the typeintto contain 16 bits while other machines provide 32 bits. If we create a type called integer based on the word-size of the machine, then we can de-fine all our integer variables in terms of this type. This is done asfollows: typedeflongintinteger; main ( ) { integer x; integer y; /\\textasteriskcenteredstatements\\textasteriskcentered/ } Two things are to be noted: 1)typedefstatement is defined outside the main. 2) Qualifier long tells the compiler to use two words (32 bits) for storage. Now if we want the same program to run on 16-bit machine instead of modifying variables x, y, and z, all we have to do is modify thetypedef i.e. typedeflongintinteger; changeto typedefintinteger; All the following integer type statements in the program will be changed automatically.", "ref_id": 4507, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "How does thetypedefstatement increase portability?", "options": ["Improves code efficiency", "Reduces code size", "Enhances code readability", "Increases code portability"], "answer": "D", "solution": "In C new data types can be created usingtypedefstatement. Once a type is defined, it can be used in the same manner as the standard C types. The main advantage of usingtypedefstatement is for porta-bility of code, i.e. code which can be run without change on a variety of hardware. Some machines define the typeintto contain 16 bits while other machines provide 32 bits. If we create a type called integer based on the word-size of the machine, then we can de-fine all our integer variables in terms of this type. This is done asfollows: typedeflongintinteger; main ( ) { integer x; integer y; /\\textasteriskcenteredstatements\\textasteriskcentered/ } Two things are to be noted: 1)typedefstatement is defined outside the main. 2) Qualifier long tells the compiler to use two words (32 bits) for storage. Now if we want the same program to run on 16-bit machine instead of modifying variables x, y, and z, all we have to do is modify thetypedef i.e. typedeflongintinteger; changeto typedefintinteger; All the following integer type statements in the program will be changed automatically."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program that a) Has a routinefibonacci( ). This routine calculates Fibonacci numbers using recursive algorithm. b) Assume in the main program that 10th Fibonacci number is to be calculated. c) Print the 10th Fibonacci number.\n\nOptions:\nA. Fibonacci(9)\nB. Fibonacci(11)\nC.             Fibonacci(8)\nD. Fibonacci(10)\n\nAnswer: D\n\nReference Solution:\nFibonacci number is the sum of the previous two Fibonacci numbers,eg. Fib(0) = 0 Fib(1) = 1 Fib(n + 1) = Fib(n) + Fib(n - 1) The first two Fibonacci numbers are 1 just as factorial of 1 is 1. The algorithm followed is 1) Check if value received byfibonacci( ) is equal to 1 or2. 2) If value not equal to 1 or 2 the routine calls itself with (value - 1). 3) This continues until the condition value equals 1 or 2. This is the end condition. main ( ) {intFib _ num; Fib _ num =fibonacci(10); printf(\"The 10th Fibonacci number is = %d\\textbackslashn\", Fib _ num); } fibonacci(n) ,intn; { intresult; /\\textasteriskcenteredfor result \\textasteriskcentered/ if(n == 1 \\vert\\vert n == 2) result =1; else result =fibonacci(n - 1) +fibonacci(n - 2); return(result); }", "ref_id": 4508, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program that a) Has a routinefibonacci( ). This routine calculates Fibonacci numbers using recursive algorithm. b) Assume in the main program that 10th Fibonacci number is to be calculated. c) Print the 10th Fibonacci number.", "options": ["Fibonacci(9)", "Fibonacci(11)", "Fibonacci(8)", "Fibonacci(10)"], "answer": "D", "solution": "Fibonacci number is the sum of the previous two Fibonacci numbers,eg. Fib(0) = 0 Fib(1) = 1 Fib(n + 1) = Fib(n) + Fib(n - 1) The first two Fibonacci numbers are 1 just as factorial of 1 is 1. The algorithm followed is 1) Check if value received byfibonacci( ) is equal to 1 or2. 2) If value not equal to 1 or 2 the routine calls itself with (value - 1). 3) This continues until the condition value equals 1 or 2. This is the end condition. main ( ) {intFib _ num; Fib _ num =fibonacci(10); printf(\"The 10th Fibonacci number is = %d\\textbackslashn\", Fib _ num); } fibonacci(n) ,intn; { intresult; /\\textasteriskcenteredfor result \\textasteriskcentered/ if(n == 1 \\vert\\vert n == 2) result =1; else result =fibonacci(n - 1) +fibonacci(n - 2); return(result); }"}, "question": "task_1"}}, {"data": {"text": "Question:\nHow is an array declared inpascal? Example using examples of one-dimensional and multi-dimensional arrays.\n\nOptions:\nA. An array in Pascal is declared as VAR A = ARRAY [1..100]of real;\nB. An array in Pascal is declared as TYPE A = ARRAY [indextype]ofbasetype; For example, a one-dimensional array can be declared as TYPE A = ARRAY[1..100]of real; A multi-dimensional array can be declared as VAR matrix : ARRAY[1..150,1..100]ofREAL;\nC.             An array in Pascal is declared as ARRAY [indextype] = TYPE ofbasetype;\nD. An array in Pascal is declared as ARRAY A = TYPE[indextype]ofbasetype;\n\nAnswer: B\n\nReference Solution:\nAn array is defined as follows: TYPE A = ARRAY [indextype]ofbasetype; whereindextypeis the type of the array index, andbasetypeis the type of the array elements. Indextype can be any scalar type excepttypesin-teger and real. Onlysubrangesof integer are allowed.Basetypecan be any type whatsoever . example :TYPE A =ARRAY[1. .100]ofreal; This declaration only defines type A as an array of 100 real numbers . Therefore, any variable of type A will be interpreted as an array of 100 real numbers . Alternatively, any variable could be declared as an array by: VAR table : ARRAY[1. .100]ofreal; Multidimensional arrays are essentially arrays of arrays. Thus, having declared TYPE A =ARRAY[1. .100] of real; we can declare a matrix of size 150 \u00d7 100 by the following: VAR matrix :ARRAY[1. .150]ofA; This, however, is an unconventional way to declare multi-dimensional arrays . Usually, the same variable is declared by: VAR matrix : ARRAY[1. .150,1. .100]ofREAL; The first index parameter always refers to the number of rows, and second refers to the number of columns. The index parameters do not have to be of the same data type.Higher-dimensionalarrays can be declared similarly .", "ref_id": 4509, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "How is an array declared inpascal? Example using examples of one-dimensional and multi-dimensional arrays.", "options": ["An array in Pascal is declared as VAR A = ARRAY [1..100]of real;", "An array in Pascal is declared as TYPE A = ARRAY [indextype]ofbasetype; For example, a one-dimensional array can be declared as TYPE A = ARRAY[1..100]of real; A multi-dimensional array can be declared as VAR matrix : ARRAY[1..150,1..100]ofREAL;", "An array in Pascal is declared as ARRAY [indextype] = TYPE ofbasetype;", "An array in Pascal is declared as ARRAY A = TYPE[indextype]ofbasetype;"], "answer": "B", "solution": "An array is defined as follows: TYPE A = ARRAY [indextype]ofbasetype; whereindextypeis the type of the array index, andbasetypeis the type of the array elements. Indextype can be any scalar type excepttypesin-teger and real. Onlysubrangesof integer are allowed.Basetypecan be any type whatsoever . example :TYPE A =ARRAY[1. .100]ofreal; This declaration only defines type A as an array of 100 real numbers . Therefore, any variable of type A will be interpreted as an array of 100 real numbers . Alternatively, any variable could be declared as an array by: VAR table : ARRAY[1. .100]ofreal; Multidimensional arrays are essentially arrays of arrays. Thus, having declared TYPE A =ARRAY[1. .100] of real; we can declare a matrix of size 150 \u00d7 100 by the following: VAR matrix :ARRAY[1. .150]ofA; This, however, is an unconventional way to declare multi-dimensional arrays . Usually, the same variable is declared by: VAR matrix : ARRAY[1. .150,1. .100]ofREAL; The first index parameter always refers to the number of rows, and second refers to the number of columns. The index parameters do not have to be of the same data type.Higher-dimensionalarrays can be declared similarly ."}, "question": "task_1"}}, {"data": {"text": "Question:\nExplain briefly the background and applications of COBOL.\n\nOptions:\nA. COBOL is a low-level language for scientific applications.\nB. COBOL was introduced in the 1980s for gaming applications.\nC.             COBOL is a high-level, procedural language for business applications, introduced in 1959 by CODASYL. It is still the most widely used language for business applications accounting for 60% to 80% of the programs written for this purpose.\nD. COBOL is rarely used in business applications.\n\nAnswer: C\n\nReference Solution:\nCOBOL, an acronym forCOmmonBusiness-Oriented Lan-guage, is a high-level, procedural language for business appli-cations. The language was first introduced in 1959 by a commit-tee named Conference on Data System Languages (CODASYL) .This committee, sponsored by the Department of DefenseDoD), issued a report in 1960 specifying the first version of COBOL, and the first compiler appeared shortly after. Subsequent revision is-sued in 1961 became the cornerstone of further developments including standard versions by American National Standards In-stitute (ANSI). The following is a quick chronicle of COBOL's background : 1959-CODASYL sponsored byDoD 1960-First COBOL compiler 1961-COBOL-61(First Revision) 1968-ANSI COBOL-68(First Standard) 1974-ANSI COBOL-74(Widely Used Revised Standard) 1985-ANSI COBOL-85(New Standard) COBOL applications are mostly commercial rather than scien-tific. It is still the most widely used language for business applications (accounting, banking, organizational, management information, etc.) accounting for 60% to 80% of the programs written for this purpose.", "ref_id": 4510, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Explain briefly the background and applications of COBOL.", "options": ["COBOL is a low-level language for scientific applications.", "COBOL was introduced in the 1980s for gaming applications.", "COBOL is a high-level, procedural language for business applications, introduced in 1959 by CODASYL. It is still the most widely used language for business applications accounting for 60% to 80% of the programs written for this purpose.", "COBOL is rarely used in business applications."], "answer": "C", "solution": "COBOL, an acronym forCOmmonBusiness-Oriented Lan-guage, is a high-level, procedural language for business appli-cations. The language was first introduced in 1959 by a commit-tee named Conference on Data System Languages (CODASYL) .This committee, sponsored by the Department of DefenseDoD), issued a report in 1960 specifying the first version of COBOL, and the first compiler appeared shortly after. Subsequent revision is-sued in 1961 became the cornerstone of further developments including standard versions by American National Standards In-stitute (ANSI). The following is a quick chronicle of COBOL's background : 1959-CODASYL sponsored byDoD 1960-First COBOL compiler 1961-COBOL-61(First Revision) 1968-ANSI COBOL-68(First Standard) 1974-ANSI COBOL-74(Widely Used Revised Standard) 1985-ANSI COBOL-85(New Standard) COBOL applications are mostly commercial rather than scien-tific. It is still the most widely used language for business applications (accounting, banking, organizational, management information, etc.) accounting for 60% to 80% of the programs written for this purpose."}, "question": "task_1"}}, {"data": {"text": "Question:\nDiscuss various types of computer systems in terms of the level of expense, sophistication, and capabilities to carry out intended commercial and scientific data processing tasks.\n\nOptions:\nA. Microcomputers, Minicomputers, Mainframes, Home computers, Personal computers, Personal Supercomputers, Work Stations, Superminicomputers, Mainframes, Supercomputers, Parallel Computers\nB. Parallel Computers, Superminicomputers, Home computers\nC.             Microcomputers, Supercomputers, Mainframes\nD. Personal computers, Work Stations, Minicomputers\n\nAnswer: A\n\nReference Solution:\nTraditionally, the computer systems from lowest to highest level of capabilities have been classified as: Microcom-puters, Minicomputers, and Mainframes. It used to be that micros such as INTEL 8085 had 8-bit registers, minis such as PDP-11 had 16-bit registers, and mainframes such as IBM 370 had 32-bit registers. Note that the amount of addressable Random Access Memory (RAM) is dependent upon the register length. Accordingly, micros had small, minis had larger, and mainframes had much larger memories. Although the above classification still serves a useful purpose for quick sizing and comparisons, the rapid developments in VLSI technologies for fourth generation computers have blurred these distinctions. There have also been many grades and shades in between this family of computers. Generally, the mi-crocomputers have caught up with mainframes in terms of process-ing speeds and memory capacities, but the mainframes still re-tain the edge in terms of secondary storage, communication, and I/O peripherals. As of this time (1989-90), a plausible (by no means complete or precise) classification is as follows: Types and sub-types Description and example Home computers 8-16 bits registers and memory words. - Simple Commodore VIC-20 and 64 (64K RAM) -Complex Commodore AMIGA with sound and graphics Personal computers 16-32 bits registers and memory words. -Low-end IBM PC/XT, AppleIIe, 0p6 AT&T 7300, etc.m -High-end IBM PC/AT, Apple. SE, and com-patibles. -Super high-end IBM PS/2 80, Apple MACIIx, AT&T 6386, and NeXT. Personal Supercomputers Either employs 64-bit vector type processors, or a number of 16/32-bit high-end processors. A personal computer that employs INTEL 860 with 64-bit vector register would be an example of the former. IntelSugarCubethat uses 8 16-bit processors that are connected according to hypercube topology is an example the of latter. Work Stations These are generally UNIX machines that can support multiple users and have large memories and special constructions for various types of tasks such as high-resolution graph-ics symbolic processing for artifi-cial intelligence applications. The typical examples are Sun 3 and Sun series, Texas Instrument Explorer II, andSymbolicsseries. Minicomputers DEC PDP-11 and HP series of comput-ers that use 16-bit registers are typical examples. Superminicomputers DEC VAX 11 and 85XX series that use 32-bit registers, and AT&T 3B20 machines are typical examples. Mainframes IBM 370 series (formerly), and 4000 series recently are typical ex-amples . Supercomputers Cray 1, 2, X-MP, and Y-MP that use 64-bit vector CPUs are examples. Parallel Computers These are multiple processor systems that use 8 to 1024 processors that are connected according to a regular topology and cooperatively solve a large-scale problem with parallelism.", "ref_id": 4511, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Discuss various types of computer systems in terms of the level of expense, sophistication, and capabilities to carry out intended commercial and scientific data processing tasks.", "options": ["Microcomputers, Minicomputers, Mainframes, Home computers, Personal computers, Personal Supercomputers, Work Stations, Superminicomputers, Mainframes, Supercomputers, Parallel Computers", "Parallel Computers, Superminicomputers, Home computers", "Microcomputers, Supercomputers, Mainframes", "Personal computers, Work Stations, Minicomputers"], "answer": "A", "solution": "Traditionally, the computer systems from lowest to highest level of capabilities have been classified as: Microcom-puters, Minicomputers, and Mainframes. It used to be that micros such as INTEL 8085 had 8-bit registers, minis such as PDP-11 had 16-bit registers, and mainframes such as IBM 370 had 32-bit registers. Note that the amount of addressable Random Access Memory (RAM) is dependent upon the register length. Accordingly, micros had small, minis had larger, and mainframes had much larger memories. Although the above classification still serves a useful purpose for quick sizing and comparisons, the rapid developments in VLSI technologies for fourth generation computers have blurred these distinctions. There have also been many grades and shades in between this family of computers. Generally, the mi-crocomputers have caught up with mainframes in terms of process-ing speeds and memory capacities, but the mainframes still re-tain the edge in terms of secondary storage, communication, and I/O peripherals. As of this time (1989-90), a plausible (by no means complete or precise) classification is as follows: Types and sub-types Description and example Home computers 8-16 bits registers and memory words. - Simple Commodore VIC-20 and 64 (64K RAM) -Complex Commodore AMIGA with sound and graphics Personal computers 16-32 bits registers and memory words. -Low-end IBM PC/XT, AppleIIe, 0p6 AT&T 7300, etc.m -High-end IBM PC/AT, Apple. SE, and com-patibles. -Super high-end IBM PS/2 80, Apple MACIIx, AT&T 6386, and NeXT. Personal Supercomputers Either employs 64-bit vector type processors, or a number of 16/32-bit high-end processors. A personal computer that employs INTEL 860 with 64-bit vector register would be an example of the former. IntelSugarCubethat uses 8 16-bit processors that are connected according to hypercube topology is an example the of latter. Work Stations These are generally UNIX machines that can support multiple users and have large memories and special constructions for various types of tasks such as high-resolution graph-ics symbolic processing for artifi-cial intelligence applications. The typical examples are Sun 3 and Sun series, Texas Instrument Explorer II, andSymbolicsseries. Minicomputers DEC PDP-11 and HP series of comput-ers that use 16-bit registers are typical examples. Superminicomputers DEC VAX 11 and 85XX series that use 32-bit registers, and AT&T 3B20 machines are typical examples. Mainframes IBM 370 series (formerly), and 4000 series recently are typical ex-amples . Supercomputers Cray 1, 2, X-MP, and Y-MP that use 64-bit vector CPUs are examples. Parallel Computers These are multiple processor systems that use 8 to 1024 processors that are connected according to a regular topology and cooperatively solve a large-scale problem with parallelism."}, "question": "task_1"}}, {"data": {"text": "Question:\nIn question 17, a linked list for 10 students was created. Write or modify the program. a) Delete an element if the name (member) of that element coincides with the given name. b) Given name is to be read in. c) The program should indicate whether it was successful or not in deleting that particular element. Note: If element is not deleted means that particular name was not found in the linked list.\n\nOptions:\nA. Add the given name to the list\nB. Replace the given name with a new name in the list\nC.             Locate the given name in the list and delete the matching element\nD. Modify the linked list to sort by name\n\nAnswer: C\n\nReference Solution:\nModifications: These are all additions to be done. #define TRUE 1 #define False 0 main ( ) int not _ found; char name [MAX_NAME]; struct students \\textasteriskcenteredprevious _ptr; printf (\"Enter the student name to be deleted \\textbackslashn\"); scanf (\"%s\\textquotedblright, name); not _ found = TRUE; /\\textasteriskcenteredThis segment checks 1st element \\textasteriskcentered/ if (equal _ string (start \\rightarrow name, name) == 0) { not _ found = FALSE; start = start \\rightarrow next; } else {ptr= start \\rightarrow next; previous _ptr= start; while(ptr&& not _ found) {if(equal _ string (ptr\\rightarrow name, name) = =0) {not _ found = FALSE; previous _ptr\\rightarrownext =ptr\\rightarrow next; } previous _ptr=ptr; ptr=ptr\\rightarrow next; }/\\textasteriskcenteredend while \\textasteriskcentered/ }/\\textasteriskcenteredend else \\textasteriskcentered/ if(not _ found) printf(\"STUDENT NOT FOUND IN THE LIST\\textbackslashn \"); else printf(\"STUDENT DELETED FROM THE LIST \\textbackslashn\"); }/\\textasteriskcenteredend main \\textasteriskcentered/ The logic followed in this program is to 1) Locate whether the given name is in the first element of the list. If so delete the first element and point the pointer start to the second element. 2) Check the other elements. If the given name coincides with the name in the element then delete it from the list. ROUTINE : equal _ string ( ): This is a routine in UNIX systems which examines two strings character by character until the NULL value is found, or strings are found to be equal. If strings are of equal length and contain the same sequence of letters, value 0 is returned. If strings are unequal and con-tents are not the same then value -1 is returned.", "ref_id": 4512, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "In question 17, a linked list for 10 students was created. Write or modify the program. a) Delete an element if the name (member) of that element coincides with the given name. b) Given name is to be read in. c) The program should indicate whether it was successful or not in deleting that particular element. Note: If element is not deleted means that particular name was not found in the linked list.", "options": ["Add the given name to the list", "Replace the given name with a new name in the list", "Locate the given name in the list and delete the matching element", "Modify the linked list to sort by name"], "answer": "C", "solution": "Modifications: These are all additions to be done. #define TRUE 1 #define False 0 main ( ) int not _ found; char name [MAX_NAME]; struct students \\textasteriskcenteredprevious _ptr; printf (\"Enter the student name to be deleted \\textbackslashn\"); scanf (\"%s\\textquotedblright, name); not _ found = TRUE; /\\textasteriskcenteredThis segment checks 1st element \\textasteriskcentered/ if (equal _ string (start \\rightarrow name, name) == 0) { not _ found = FALSE; start = start \\rightarrow next; } else {ptr= start \\rightarrow next; previous _ptr= start; while(ptr&& not _ found) {if(equal _ string (ptr\\rightarrow name, name) = =0) {not _ found = FALSE; previous _ptr\\rightarrownext =ptr\\rightarrow next; } previous _ptr=ptr; ptr=ptr\\rightarrow next; }/\\textasteriskcenteredend while \\textasteriskcentered/ }/\\textasteriskcenteredend else \\textasteriskcentered/ if(not _ found) printf(\"STUDENT NOT FOUND IN THE LIST\\textbackslashn \"); else printf(\"STUDENT DELETED FROM THE LIST \\textbackslashn\"); }/\\textasteriskcenteredend main \\textasteriskcentered/ The logic followed in this program is to 1) Locate whether the given name is in the first element of the list. If so delete the first element and point the pointer start to the second element. 2) Check the other elements. If the given name coincides with the name in the element then delete it from the list. ROUTINE : equal _ string ( ): This is a routine in UNIX systems which examines two strings character by character until the NULL value is found, or strings are found to be equal. If strings are of equal length and contain the same sequence of letters, value 0 is returned. If strings are unequal and con-tents are not the same then value -1 is returned."}, "question": "task_1"}}, {"data": {"text": "Question:\nmain \\textasteriskcenteredthis program prints the message\\textasteriskcentered \\textasteriskcenteredHi from C on the screen\\textasteriskcentered printf (\"Hi from C\\textbackslashn\") }; };\n\nOptions:\nA. main ( ) { /\textasteriskcentered this program prints the message Hi from C on the screen\textasteriskcentered/ printf (\"Hi from c\"); }\nB. main ( ) { /\textasteriskcentered this program prints the message Hi from C on the screen\textasteriskcentered/ printf (\"Hi from c\textbackslashn\"); }\nC.             main ( ) { /\textasteriskcentered this program prints the message Hi from C on the screen\textasteriskcentered/ printf (\"Hi from c\textbackslashn\")\nD. main ( ) { /\textasteriskcentered this program prints the message Hi from C on the screen\textasteriskcentered/ printf (\"Hi from c\textbackslashn\") };\n\nAnswer: B\n\nReference Solution:\n1st error: main is a function and the format (of main) is: main ( ) 2nd error: The executable part of the function is always to be enclosed in braces { }. These braces are analogous to the 'begin-end' of Pascal, 'DO-END' of PL/I, etc. In the given program, the terminal brace, }, is present, but the initial is missing. The initial brace, { , has to be placed in the beginning of the second line, before the first \\textasteriskcentered. 3rd error: C recognizes everything enclosed by /\\textasteriskcentered and \\textasteriskcentered/ as a comment. There are two distinct ways by which the above given informa-tion i.e. \\textasteriskcentered this program prints the message\\textasteriskcentered \\textasteriskcenteredHi from C on the screen\\textasteriskcentered can be represented. 1st method: /\\textasteriskcentered this program prints the message\\textasteriskcentered/ /\\textasteriskcenteredHi from C on the screen\\textasteriskcentered/ 2nd method: /\\textasteriskcentered this program prints the message Hi from C on the screen\\textasteriskcentered/ Both the above mentioned methods are correct. 4th error: In the statement printf (\"Hi from C\\textbackslashn\") semicolon ( ;) at the end of line has not been given. This semicolon serves as a statement terminator to signal the com-piler where an instruction ends. 5th error: Semicolon placed after the end of main i.e. }; is wrong. Right brace just defines the end of function main in this example and is never followed by a semicolon. Therefore the correct program segment is: main ( ) { /\\textasteriskcentered this program prints the message Hi from C on the screen\\textasteriskcentered/ printf (\"Hi from c\\textbackslashn\"); }", "ref_id": 4513, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "main \\textasteriskcenteredthis program prints the message\\textasteriskcentered \\textasteriskcenteredHi from C on the screen\\textasteriskcentered printf (\"Hi from C\\textbackslashn\") }; };", "options": ["main ( ) { /\textasteriskcentered this program prints the message Hi from C on the screen\textasteriskcentered/ printf (\"Hi from c\"); }", "main ( ) { /\textasteriskcentered this program prints the message Hi from C on the screen\textasteriskcentered/ printf (\"Hi from c\textbackslashn\"); }", "main ( ) { /\textasteriskcentered this program prints the message Hi from C on the screen\textasteriskcentered/ printf (\"Hi from c\textbackslashn\")", "main ( ) { /\textasteriskcentered this program prints the message Hi from C on the screen\textasteriskcentered/ printf (\"Hi from c\textbackslashn\") };"], "answer": "B", "solution": "1st error: main is a function and the format (of main) is: main ( ) 2nd error: The executable part of the function is always to be enclosed in braces { }. These braces are analogous to the 'begin-end' of Pascal, 'DO-END' of PL/I, etc. In the given program, the terminal brace, }, is present, but the initial is missing. The initial brace, { , has to be placed in the beginning of the second line, before the first \\textasteriskcentered. 3rd error: C recognizes everything enclosed by /\\textasteriskcentered and \\textasteriskcentered/ as a comment. There are two distinct ways by which the above given informa-tion i.e. \\textasteriskcentered this program prints the message\\textasteriskcentered \\textasteriskcenteredHi from C on the screen\\textasteriskcentered can be represented. 1st method: /\\textasteriskcentered this program prints the message\\textasteriskcentered/ /\\textasteriskcenteredHi from C on the screen\\textasteriskcentered/ 2nd method: /\\textasteriskcentered this program prints the message Hi from C on the screen\\textasteriskcentered/ Both the above mentioned methods are correct. 4th error: In the statement printf (\"Hi from C\\textbackslashn\") semicolon ( ;) at the end of line has not been given. This semicolon serves as a statement terminator to signal the com-piler where an instruction ends. 5th error: Semicolon placed after the end of main i.e. }; is wrong. Right brace just defines the end of function main in this example and is never followed by a semicolon. Therefore the correct program segment is: main ( ) { /\\textasteriskcentered this program prints the message Hi from C on the screen\\textasteriskcentered/ printf (\"Hi from c\\textbackslashn\"); }"}, "question": "task_1"}}, {"data": {"text": "Question:\nSimulate a game of draw poker between a player and the computer. Use the Basic language.\n\nOptions:\nA. The solution is a detailed simulation of a blackjack game in Basic language.\nB. The solution is a detailed simulation of a draw poker game in Python language.\nC.             The solution is a detailed simulation of a draw poker game in Basic language.\nD. The solution is a simulation of a chess game in Basic language.\n\nAnswer: C\n\nReference Solution:\nIn the game, both players (i.e. the computervsthe operator) start with a fixed stake (say $200 each). The com-puter accepts IOUs for certain personal items. 10PRINT \\textquotedblleftPOKER 20DIM A (50) , B (5) 30DEF FNA (X) = INT (10\\textasteriskcenteredRND (1)) 40DEF FNB (X) = X - 100 \\textasteriskcentered INT (X/100) 50PRINT \\textquotedblleftWELCOME TO THE TABLE. I WELL OPEN THE\\textquotedblright ; 60PRINT \\textquotedblleftBETTING BEFORE THE DRAW; YOU OPEN AFTER. WHEN\\textquotedblright ; 70PRINT \\textquotedblleftYOU FOLD, BET 0; TO CHECK, BET .5\\textquotedblright 80PRINT : LET O = 1 90LET C = 200: LET S = 200 95LET P = 0 100PRINT: IF C < = 5 THEN 3340 110PRINT \\textquotedblleftTHE ANTE IS $5. I WILL DEAL\\textquotedblright 120PRINT: IF S > 5 THEN 140 130GOSUB 3490 140LET P = P + 10: LET S = S - 5: LET C = C - 5 150FOR Z = 1 TO 10: GOSUB 1460: NEXT Z 160PRINT \"YOUR HAND :\" 170N = 1 180GOSUB 1580 190N = 6: I = 2 200GOSUB 1830 210PRINT: IF I <> 6 THEN 330 220IF FNA (0) < = 7 THEN 250 230LET X = 11100 240GOTO 300 250IF FNA (0) < = 7 THEN 280 260LET X = 11110 270GOTO 300 280IF FNA (0) > = 1 THEN 320 290X = 11111 300I = 7: Z = 23 310GOTO 430 320Z = 1: GOTO 365 330IF U > = 13 THEN 390 340IF FNA (0) > = 2 THEN 360 350GOTO 300 360Z = 0 365K = 0 370PRINT \\textquotedblleftI CHECK\\textquotedblright 380GOTO 465 390IF U < = 16 THEN 420 400Z = 2 410IF FNA (0) > = I THEN 430 420Z = 35 430V = Z + FNA (0) 440GOSUB 3130 450PRINT \\textquotedblleftI OPEN WITH\\textquotedblright V 460K = V 465GOSUB 2700 470GOSUB 490 480GOTO 630 490IF I <> 3 THEN 580 500PRINT: PRINT \\textquotedblleftI WIN\\textquotedblright 510C = C + P 520PRINT \"NOW I HAVE $ \"C\" AND YOU HAVE $\" S 530PRINT \"DO YOU WISH TO CONTINUE\"; 540INPUT H$ 550IF H$ = \"YES\" THEN 95 560IF H$ = \"NO\" THEN 3750 570GOTO 530 580IF I <> 4 THEN 620 590PRINT: PRINT \"YOU WIN\" 600S = S + P 610GOTO 520 620RETURN 630PRINT: PRINT \"NOW WE DRAW. HOW MANY CARDS DO YOU WANT ?\\textquotedblright; 640INPUT T 650IF T = 0 THEN 780 660Z = 10 670IF T < 4 THEN 700 680PRINT \"YOU CAN'T DRAW MORE THAN THREE CARDS\" 690GOTO 640 700PRINT \"WHAT ARE THEIR NUMBERS?\" 710FOR Q = 1 TO T 720INPUT U 730GOSUB 1450 740NEXT Q 750PRINT \"YOUR NEW HAND:\" 760N = 1 770GOSUB 1580 780Z = 10 + T 790FOR U = 6 TO 10 800IF INT (X/10 \\uparrow (U - 6)) <> 10\\textasteriskcenteredINT(X/10\\uparrow (U - 5)) THEN 820 810GOSUB 1450 820NEXT U 830PRINT: PRINT \"I AM TAKING\" Z - 10 - T \"CARD\"; 840IF Z = 11 + T THEN 860 850PRINT \"S\": PRINT: GOTO 860 860N = 6: V = I: I = 1 870GOSUB 1830 880B = U: M = D 890IF V <> 7 THEN 920 900Z = 28 910GOTO 1060 920IF I <> 6 THEN 950 930Z = 1 940GOTO 1060 950IF U > = 13 THEN 1000 960Z = 2 970IF FNA (0) <> 6 THEN 990 980Z = 19 990GOTO 1060 1000IF U > = 16 THEN 1050 1010Z = 19 1020IF FNA (0) <> 8 THEN 1040 1030Z = 11 1040GOTO 1060 1050Z = 2 1060K = 0 1070GOSUB 2700 1080IF T <> .5 THEN 1170 1090IF V = 7 THEN 1130 1100IF I <> 6 THEN 1130 1110PRINT \"I'LL CHECK\" 1120GOTO 1180 1130V = 2 + FNA (0) 1140GOSUB 3130 1150PRINT \"I BET\" V 1160K = V: GOSUB 2710 1170GOSUB 490 1180PRINT: PRINT \"NOW WE COMPARE HANDS\" 1190J$ = H$ 1200K$ = 1$ 1210PRINT \"MY HAND:\" 1220N = 6 1230GOSUB 1580 1240N = 1 1250GOSUB 1830 1260PRINT: PRINT \"YOU HAVE\"; 1270K = D 1280GOSUB 3360 1290H$ = J$ 1300I$ = K$ 1310K = M 1320PRINT \"AND I HAVE\"; 1330GOSUB 3360 1340IF B > U THEN 500 1350IF U > B THEN 590 1360IF H$ = \"A FLUSH\" THEN 1420 1370IF FNB (M) < FNB(D) THEN 590 1380IF FNB(M) > FNB(D) THEN 500 1390PRINT \"THE HAND IS DRAWN\" 1400PRINT \"ALL $\" P \"REMAINS IN THE POT\" 1410GOTO 100 1420IF FNB (M) > FNB (D) THEN 500 1430IF FNB (D) > FNB (M) THEN 590 1440GOTO 1390 1450Z = Z + 1 1460A (Z) = 100 \\textasteriskcentered INT (4\\textasteriskcenteredRND (1)) + INT (100\\textasteriskcenteredRND (1)) 1470IF INT (A(Z)/100) > 3 THEN 1460 1480IF A(Z) - 100 \\textasteriskcentered INT(A(Z)/100) > 12 THEN 1460 1490IF Z = 1 THEN 1570 1500FOR K = 1 TO Z - 1 1510IF A(Z) = A(K) THEN 1460 1520NEXT K 1530IF Z < = 10 THEN 1570 1540N = A (U) 1550A (U) = A (Z) 1560A(Z) = N 1570RETURN 1580FOR Z = N TO N + 4 1590PRINT Z \"- - \\textquotedblright; 1600GOSUB 1660 1610PRINT \"OF\"; 1620GOSUB 1750 1630IF Z/2 <> INT (Z/2) THEN 1640 1640PRINT: NEXT Z: PRINT 1650RETURN 1660K = FNB(A(Z)) 1670IF K <> 9 THEN 1690 1680PRINT \"JACK\"; 1690IF K <> 10 THEN 1700: PRINT \"QUEEN\"; 1700IF K <> 11 THEN 1710: PRINT \"KING\"; 1710IF K <> 12 THEN 1720: PRINT \"ACE\"; 1720IF K > = 9 THEN 1740 1730PRINT K + 2; 1740RETURN 1750K = INT (A(Z)/100) 1760IF K <> 0 THEN 1780 1770PRINT \"CLUBS\", 1780IF K <> 1 THEN 1800 1790PRINT \"DIAMONDS\", 1800IF K <> 2 THEN 1810: PRINT \"HEARTS\", 1810IF K <> 3 THEN 1820: PRINT \"SPADES\", 1820RETURN 1830U = 0 1840FOR Z = TO N + 4 1850B(Z) = FNB (A(Z)) 1860IF Z = N + 4 THEN 1890 1870IF INT (A (Z)/100) <> INT (A(Z + 1)/100) THEN 1890 1880U = U + 1 1890NEXT Z 1900IF U <> 4 THEN 1970 1910X = 11111 1920D = A (N) 1930H$ = \"A FLUS\" 19401$ = \"H IN\" 1950U = 15 1960RETURN 1970FOR Z =N TO N + 3 1980FOR K = Z + 1 TO N + 4 1990IF B(Z) < = B(K) THEN 2050 2000X = A (Z) 2010A (Z) = A (K) 2020B (Z) = B(K) 2030A (K) = X 2040B(K) = A(K) - 100 \\textasteriskcentered INT(A(K)/100) 2050NEXT K 2060NEXT Z 2070X = 0 2080FOR Z = N TO N + 3 2090IF B (Z) <> B (Z + 1) THEN 2130 2100X = X + 11 \\textasteriskcentered 10 \\uparrow (Z - N) 2110D = A (Z) 2120GOSUB 2420 2130NEXT Z 2140IF X <> 0 THEN 2280 2150IF B (N) + 3 <> B (N + 3) THEN 2180 2160X = 1111 2170U = 10 2180IF B (N + 1) + 3 <> B (N + 4) THEN 2280 2190IF U <> 10 THEN 2260 2200U = 14 2210H$ = \"STRAIG\" 2220I$ = \"HT\" 2230X = 11111 2240D = A (N + 4) 2250RETURN 2260U = 10 2270X = 11110 2280IF U > = 10 THEN 2350 2290D = A (N + 4) 2300H$ = \"SCHMAL\" 2310I$ = \"TZ,\" 2320U = 9 2330X = 11000 2340GOTO 2400 2350IF U <> 10 THEN 2380 2360IF I = 1 THEN 2400 2370GOTO 2410 2380IF U > 12 THEN 2410 2390IF FNB (D) > 6 THEN 2410 2400I = 6 2410RETURN 2420IF U > = 11 THEN 2470 2430U = 11 2440H$ = \\textquotedblleftA PAIR\\textquotedblright 2450I$ \\textquotedblleftOF\\textquotedblright 2460RETURN 2470IF U <> 11 THEN 2570 2480IF B (Z) <> B (Z - 1) THEN 2530 2490H$ = \\textquotedblleftTHREE\\textquotedblright 2500I$ = \\textquotedblleft\\textquotedblright 2510U = 13 2520RETURN 2530H$ = \\textquotedblleftTWO P\\textquotedblright 2540I$ = \\textquotedblleftAIR,\\textquotedblright 2550V = 12 2560RETURN 2570IF U > 12 THEN 2620 2580U = 16 2590H$ = \\textquotedblleftFULL H\\textquotedblright 2600I$ = \\textquotedblleftOUSE,\\textquotedblright 2610RETURN 2620IF B (Z) <> B (Z - 1) THEN 2670 2630U = 17 2640H$ = \"POUR\" 2650I$ = \"\" 2660RETURN 2670U = 16 2680H$ = \"FULL H\": I$ = \"OUSE,\" 2690RETURN 2700G = 0 2710PRINT \"WHAT IS YOUR BET?\"; 2720INPUT T 2730IF T - INT(T) = 0 THEN 2790 2740IF K <> 0 THEN 2770 2750IF G <> 0 THEN 2770 2760IF T = .5 THEN 3060 2770PRINT \"NO SMALL CHANGE, PLEASE\" 2780GOTO 2710 2790IF S - G - T > = 0 THEN 2820 2800GOSUB 3490 2810GOTO 2710 2820IF T <> 0 THEN 2850 2830I = 3 2840GOTO 3030 2850IF G + T > = K THEN 2880 2860PRINT \"IF YOU CAN'T SEE MY BET, THEN FOLD\\textquotedblright 2870GOTO 2710 2880G = G + T 2890IF G = K THEN 3030 2900IF Z <> 1 THEN 3070 2910IF G > 5 THEN 2950 2920IF Z > = 2 THEN 3000 2930V = 5 2940GOTO 3070 2950IF Z = 1 THEN 2970 2960IF T < = 25 THEN 3000 2970I = 4 2980PRINT \"I FOLD\" 2990RETURN 3000IF Z = 2 THEN 3080 3010PRINT \"I'LL SEE YOU\" 3020K = G 3030S = S - G 3040C = C - K 3050P = P + G + K 3060RETURN 3070IF G > 3\\textasteriskcenteredZ THEN 3000 3080V = G - K + FNA (0) 3090GOSUB 3130 3100PRINT \"I'LL SEE YOU, AND RAISE YOU\" V 3110K = G + V 3120GOTO 2710 3130IF C - G - V > = 0 THEN 3330 3140IF G <> 0 THEN 3170 3150V = C 3160RETURN 3170IF C - G > = 0 THEN 3010 3180IF (O/2) <> INT(O/2) THEN 3260 3190PRINT \"WOULD YOU LIKE TO BUY BACK YOUR SHIRT?\"; 3200PRINT \"AND COAT FOR $50?\"; 3210INPUT J$ 3220IF J$ = \"NO\" THEN 3260 3230C = C + 50 3240O = O/2 3250RETURN 3260IF O/3 <> INT (0/3) THEN 3340 3270PRINT \"WOULD YOU LIKE TO BUY BACK YOUR GOLD\"; 3280PRINT \"CHAIN FOR $50?\"; 3290INPUT J$ 3300IF J$ = \"NO\" THEN 3340 3310C = C + 50 3320O = O/3 3330RETURN 3340PRINT \"I'M BUSTED. CONGRATULATIONS!\" 3350STOP 3360PRINT H$; I$; 3370IF H$ <> \"A FLUS\\textquotedblright THEN 3410 3380K = INT (K/100) 3390GOSUB 1760 3400PRINT: RETURN 3410K = FNB (K) 3420GOSUB 1670 3430IF H$ = \"SCHMAL\" THEN 3450 3440IF H$ <> \"STRAIG\" THEN 3470 3450PRINT \"HIGH\" 3460RETURN 3470PRINT \"S\" 3480RETURN 3490PRINT: PRINT \"YOU CAN'T BET WHAT YOU DON'T HAVE\" 3500IF O/2 = IN (O/2) THEN 3620 3510PRINT \"WOULD YOU LIKE TO SELL YOUR SHIRT AND COAT?\"; 3520INPUT J$ 3530IF J$ = \"NO\" THEN 3620 3540IF FNA(0) > = 7 THEN 3580 3550PRINT \"I WILL GIVE YOU $75 FOR IT\" 3560S = S + 75 3570GOTO 3600 3580PRINT \"THIS COAT LOOKS MOTHEATEN - I'LL GIVE YOU $25\" 3590S = S + 25 3600O = O\\textasteriskcentered2 3610RETURN 3620IF O/3 <> INT (O/3) THEN 3740 3630PRINT \"WILL YOU PART WITH YOUR GOLD CHAIN?\"; 3640INPUT J$ 3650IF J$ = \"NO\" THEN 3730 3660IF FNA (0) > = 6 THEN 3700 3670PRINT \"YOU ARE NOW $100 RICHER\" 3680S = S + 100 3690GOTO 3720 3700PRINT \"THIS IS ROLLED GOLD. $25\" 3710S = S + 25 3720O = O\\textasteriskcentered3 3730RETURN 3740PRINT: PRINT \"YOU' RE BUSTED. HAVE A REVOLVER\" 3750END", "ref_id": 4514, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Simulate a game of draw poker between a player and the computer. Use the Basic language.", "options": ["The solution is a detailed simulation of a blackjack game in Basic language.", "The solution is a detailed simulation of a draw poker game in Python language.", "The solution is a detailed simulation of a draw poker game in Basic language.", "The solution is a simulation of a chess game in Basic language."], "answer": "C", "solution": "In the game, both players (i.e. the computervsthe operator) start with a fixed stake (say $200 each). The com-puter accepts IOUs for certain personal items. 10PRINT \\textquotedblleftPOKER 20DIM A (50) , B (5) 30DEF FNA (X) = INT (10\\textasteriskcenteredRND (1)) 40DEF FNB (X) = X - 100 \\textasteriskcentered INT (X/100) 50PRINT \\textquotedblleftWELCOME TO THE TABLE. I WELL OPEN THE\\textquotedblright ; 60PRINT \\textquotedblleftBETTING BEFORE THE DRAW; YOU OPEN AFTER. WHEN\\textquotedblright ; 70PRINT \\textquotedblleftYOU FOLD, BET 0; TO CHECK, BET .5\\textquotedblright 80PRINT : LET O = 1 90LET C = 200: LET S = 200 95LET P = 0 100PRINT: IF C < = 5 THEN 3340 110PRINT \\textquotedblleftTHE ANTE IS $5. I WILL DEAL\\textquotedblright 120PRINT: IF S > 5 THEN 140 130GOSUB 3490 140LET P = P + 10: LET S = S - 5: LET C = C - 5 150FOR Z = 1 TO 10: GOSUB 1460: NEXT Z 160PRINT \"YOUR HAND :\" 170N = 1 180GOSUB 1580 190N = 6: I = 2 200GOSUB 1830 210PRINT: IF I <> 6 THEN 330 220IF FNA (0) < = 7 THEN 250 230LET X = 11100 240GOTO 300 250IF FNA (0) < = 7 THEN 280 260LET X = 11110 270GOTO 300 280IF FNA (0) > = 1 THEN 320 290X = 11111 300I = 7: Z = 23 310GOTO 430 320Z = 1: GOTO 365 330IF U > = 13 THEN 390 340IF FNA (0) > = 2 THEN 360 350GOTO 300 360Z = 0 365K = 0 370PRINT \\textquotedblleftI CHECK\\textquotedblright 380GOTO 465 390IF U < = 16 THEN 420 400Z = 2 410IF FNA (0) > = I THEN 430 420Z = 35 430V = Z + FNA (0) 440GOSUB 3130 450PRINT \\textquotedblleftI OPEN WITH\\textquotedblright V 460K = V 465GOSUB 2700 470GOSUB 490 480GOTO 630 490IF I <> 3 THEN 580 500PRINT: PRINT \\textquotedblleftI WIN\\textquotedblright 510C = C + P 520PRINT \"NOW I HAVE $ \"C\" AND YOU HAVE $\" S 530PRINT \"DO YOU WISH TO CONTINUE\"; 540INPUT H$ 550IF H$ = \"YES\" THEN 95 560IF H$ = \"NO\" THEN 3750 570GOTO 530 580IF I <> 4 THEN 620 590PRINT: PRINT \"YOU WIN\" 600S = S + P 610GOTO 520 620RETURN 630PRINT: PRINT \"NOW WE DRAW. HOW MANY CARDS DO YOU WANT ?\\textquotedblright; 640INPUT T 650IF T = 0 THEN 780 660Z = 10 670IF T < 4 THEN 700 680PRINT \"YOU CAN'T DRAW MORE THAN THREE CARDS\" 690GOTO 640 700PRINT \"WHAT ARE THEIR NUMBERS?\" 710FOR Q = 1 TO T 720INPUT U 730GOSUB 1450 740NEXT Q 750PRINT \"YOUR NEW HAND:\" 760N = 1 770GOSUB 1580 780Z = 10 + T 790FOR U = 6 TO 10 800IF INT (X/10 \\uparrow (U - 6)) <> 10\\textasteriskcenteredINT(X/10\\uparrow (U - 5)) THEN 820 810GOSUB 1450 820NEXT U 830PRINT: PRINT \"I AM TAKING\" Z - 10 - T \"CARD\"; 840IF Z = 11 + T THEN 860 850PRINT \"S\": PRINT: GOTO 860 860N = 6: V = I: I = 1 870GOSUB 1830 880B = U: M = D 890IF V <> 7 THEN 920 900Z = 28 910GOTO 1060 920IF I <> 6 THEN 950 930Z = 1 940GOTO 1060 950IF U > = 13 THEN 1000 960Z = 2 970IF FNA (0) <> 6 THEN 990 980Z = 19 990GOTO 1060 1000IF U > = 16 THEN 1050 1010Z = 19 1020IF FNA (0) <> 8 THEN 1040 1030Z = 11 1040GOTO 1060 1050Z = 2 1060K = 0 1070GOSUB 2700 1080IF T <> .5 THEN 1170 1090IF V = 7 THEN 1130 1100IF I <> 6 THEN 1130 1110PRINT \"I'LL CHECK\" 1120GOTO 1180 1130V = 2 + FNA (0) 1140GOSUB 3130 1150PRINT \"I BET\" V 1160K = V: GOSUB 2710 1170GOSUB 490 1180PRINT: PRINT \"NOW WE COMPARE HANDS\" 1190J$ = H$ 1200K$ = 1$ 1210PRINT \"MY HAND:\" 1220N = 6 1230GOSUB 1580 1240N = 1 1250GOSUB 1830 1260PRINT: PRINT \"YOU HAVE\"; 1270K = D 1280GOSUB 3360 1290H$ = J$ 1300I$ = K$ 1310K = M 1320PRINT \"AND I HAVE\"; 1330GOSUB 3360 1340IF B > U THEN 500 1350IF U > B THEN 590 1360IF H$ = \"A FLUSH\" THEN 1420 1370IF FNB (M) < FNB(D) THEN 590 1380IF FNB(M) > FNB(D) THEN 500 1390PRINT \"THE HAND IS DRAWN\" 1400PRINT \"ALL $\" P \"REMAINS IN THE POT\" 1410GOTO 100 1420IF FNB (M) > FNB (D) THEN 500 1430IF FNB (D) > FNB (M) THEN 590 1440GOTO 1390 1450Z = Z + 1 1460A (Z) = 100 \\textasteriskcentered INT (4\\textasteriskcenteredRND (1)) + INT (100\\textasteriskcenteredRND (1)) 1470IF INT (A(Z)/100) > 3 THEN 1460 1480IF A(Z) - 100 \\textasteriskcentered INT(A(Z)/100) > 12 THEN 1460 1490IF Z = 1 THEN 1570 1500FOR K = 1 TO Z - 1 1510IF A(Z) = A(K) THEN 1460 1520NEXT K 1530IF Z < = 10 THEN 1570 1540N = A (U) 1550A (U) = A (Z) 1560A(Z) = N 1570RETURN 1580FOR Z = N TO N + 4 1590PRINT Z \"- - \\textquotedblright; 1600GOSUB 1660 1610PRINT \"OF\"; 1620GOSUB 1750 1630IF Z/2 <> INT (Z/2) THEN 1640 1640PRINT: NEXT Z: PRINT 1650RETURN 1660K = FNB(A(Z)) 1670IF K <> 9 THEN 1690 1680PRINT \"JACK\"; 1690IF K <> 10 THEN 1700: PRINT \"QUEEN\"; 1700IF K <> 11 THEN 1710: PRINT \"KING\"; 1710IF K <> 12 THEN 1720: PRINT \"ACE\"; 1720IF K > = 9 THEN 1740 1730PRINT K + 2; 1740RETURN 1750K = INT (A(Z)/100) 1760IF K <> 0 THEN 1780 1770PRINT \"CLUBS\", 1780IF K <> 1 THEN 1800 1790PRINT \"DIAMONDS\", 1800IF K <> 2 THEN 1810: PRINT \"HEARTS\", 1810IF K <> 3 THEN 1820: PRINT \"SPADES\", 1820RETURN 1830U = 0 1840FOR Z = TO N + 4 1850B(Z) = FNB (A(Z)) 1860IF Z = N + 4 THEN 1890 1870IF INT (A (Z)/100) <> INT (A(Z + 1)/100) THEN 1890 1880U = U + 1 1890NEXT Z 1900IF U <> 4 THEN 1970 1910X = 11111 1920D = A (N) 1930H$ = \"A FLUS\" 19401$ = \"H IN\" 1950U = 15 1960RETURN 1970FOR Z =N TO N + 3 1980FOR K = Z + 1 TO N + 4 1990IF B(Z) < = B(K) THEN 2050 2000X = A (Z) 2010A (Z) = A (K) 2020B (Z) = B(K) 2030A (K) = X 2040B(K) = A(K) - 100 \\textasteriskcentered INT(A(K)/100) 2050NEXT K 2060NEXT Z 2070X = 0 2080FOR Z = N TO N + 3 2090IF B (Z) <> B (Z + 1) THEN 2130 2100X = X + 11 \\textasteriskcentered 10 \\uparrow (Z - N) 2110D = A (Z) 2120GOSUB 2420 2130NEXT Z 2140IF X <> 0 THEN 2280 2150IF B (N) + 3 <> B (N + 3) THEN 2180 2160X = 1111 2170U = 10 2180IF B (N + 1) + 3 <> B (N + 4) THEN 2280 2190IF U <> 10 THEN 2260 2200U = 14 2210H$ = \"STRAIG\" 2220I$ = \"HT\" 2230X = 11111 2240D = A (N + 4) 2250RETURN 2260U = 10 2270X = 11110 2280IF U > = 10 THEN 2350 2290D = A (N + 4) 2300H$ = \"SCHMAL\" 2310I$ = \"TZ,\" 2320U = 9 2330X = 11000 2340GOTO 2400 2350IF U <> 10 THEN 2380 2360IF I = 1 THEN 2400 2370GOTO 2410 2380IF U > 12 THEN 2410 2390IF FNB (D) > 6 THEN 2410 2400I = 6 2410RETURN 2420IF U > = 11 THEN 2470 2430U = 11 2440H$ = \\textquotedblleftA PAIR\\textquotedblright 2450I$ \\textquotedblleftOF\\textquotedblright 2460RETURN 2470IF U <> 11 THEN 2570 2480IF B (Z) <> B (Z - 1) THEN 2530 2490H$ = \\textquotedblleftTHREE\\textquotedblright 2500I$ = \\textquotedblleft\\textquotedblright 2510U = 13 2520RETURN 2530H$ = \\textquotedblleftTWO P\\textquotedblright 2540I$ = \\textquotedblleftAIR,\\textquotedblright 2550V = 12 2560RETURN 2570IF U > 12 THEN 2620 2580U = 16 2590H$ = \\textquotedblleftFULL H\\textquotedblright 2600I$ = \\textquotedblleftOUSE,\\textquotedblright 2610RETURN 2620IF B (Z) <> B (Z - 1) THEN 2670 2630U = 17 2640H$ = \"POUR\" 2650I$ = \"\" 2660RETURN 2670U = 16 2680H$ = \"FULL H\": I$ = \"OUSE,\" 2690RETURN 2700G = 0 2710PRINT \"WHAT IS YOUR BET?\"; 2720INPUT T 2730IF T - INT(T) = 0 THEN 2790 2740IF K <> 0 THEN 2770 2750IF G <> 0 THEN 2770 2760IF T = .5 THEN 3060 2770PRINT \"NO SMALL CHANGE, PLEASE\" 2780GOTO 2710 2790IF S - G - T > = 0 THEN 2820 2800GOSUB 3490 2810GOTO 2710 2820IF T <> 0 THEN 2850 2830I = 3 2840GOTO 3030 2850IF G + T > = K THEN 2880 2860PRINT \"IF YOU CAN'T SEE MY BET, THEN FOLD\\textquotedblright 2870GOTO 2710 2880G = G + T 2890IF G = K THEN 3030 2900IF Z <> 1 THEN 3070 2910IF G > 5 THEN 2950 2920IF Z > = 2 THEN 3000 2930V = 5 2940GOTO 3070 2950IF Z = 1 THEN 2970 2960IF T < = 25 THEN 3000 2970I = 4 2980PRINT \"I FOLD\" 2990RETURN 3000IF Z = 2 THEN 3080 3010PRINT \"I'LL SEE YOU\" 3020K = G 3030S = S - G 3040C = C - K 3050P = P + G + K 3060RETURN 3070IF G > 3\\textasteriskcenteredZ THEN 3000 3080V = G - K + FNA (0) 3090GOSUB 3130 3100PRINT \"I'LL SEE YOU, AND RAISE YOU\" V 3110K = G + V 3120GOTO 2710 3130IF C - G - V > = 0 THEN 3330 3140IF G <> 0 THEN 3170 3150V = C 3160RETURN 3170IF C - G > = 0 THEN 3010 3180IF (O/2) <> INT(O/2) THEN 3260 3190PRINT \"WOULD YOU LIKE TO BUY BACK YOUR SHIRT?\"; 3200PRINT \"AND COAT FOR $50?\"; 3210INPUT J$ 3220IF J$ = \"NO\" THEN 3260 3230C = C + 50 3240O = O/2 3250RETURN 3260IF O/3 <> INT (0/3) THEN 3340 3270PRINT \"WOULD YOU LIKE TO BUY BACK YOUR GOLD\"; 3280PRINT \"CHAIN FOR $50?\"; 3290INPUT J$ 3300IF J$ = \"NO\" THEN 3340 3310C = C + 50 3320O = O/3 3330RETURN 3340PRINT \"I'M BUSTED. CONGRATULATIONS!\" 3350STOP 3360PRINT H$; I$; 3370IF H$ <> \"A FLUS\\textquotedblright THEN 3410 3380K = INT (K/100) 3390GOSUB 1760 3400PRINT: RETURN 3410K = FNB (K) 3420GOSUB 1670 3430IF H$ = \"SCHMAL\" THEN 3450 3440IF H$ <> \"STRAIG\" THEN 3470 3450PRINT \"HIGH\" 3460RETURN 3470PRINT \"S\" 3480RETURN 3490PRINT: PRINT \"YOU CAN'T BET WHAT YOU DON'T HAVE\" 3500IF O/2 = IN (O/2) THEN 3620 3510PRINT \"WOULD YOU LIKE TO SELL YOUR SHIRT AND COAT?\"; 3520INPUT J$ 3530IF J$ = \"NO\" THEN 3620 3540IF FNA(0) > = 7 THEN 3580 3550PRINT \"I WILL GIVE YOU $75 FOR IT\" 3560S = S + 75 3570GOTO 3600 3580PRINT \"THIS COAT LOOKS MOTHEATEN - I'LL GIVE YOU $25\" 3590S = S + 25 3600O = O\\textasteriskcentered2 3610RETURN 3620IF O/3 <> INT (O/3) THEN 3740 3630PRINT \"WILL YOU PART WITH YOUR GOLD CHAIN?\"; 3640INPUT J$ 3650IF J$ = \"NO\" THEN 3730 3660IF FNA (0) > = 6 THEN 3700 3670PRINT \"YOU ARE NOW $100 RICHER\" 3680S = S + 100 3690GOTO 3720 3700PRINT \"THIS IS ROLLED GOLD. $25\" 3710S = S + 25 3720O = O\\textasteriskcentered3 3730RETURN 3740PRINT: PRINT \"YOU' RE BUSTED. HAVE A REVOLVER\" 3750END"}, "question": "task_1"}}, {"data": {"text": "Question:\nExplain the concept of coding and give the general characteristicsof the most widely used codes.\n\nOptions:\nA. The three most popular codes are HTML, CSS, and JavaScript.\nB. Coding is representation of the characters via a character code in which each character is assigned a unique combination of bits. The three most popular codes are BCDIC, EBCDIC, and ASCII.\nC.             Coding is the process of writing computer programs.\nD. Coding is the translation of data into a machine-readable form.\n\nAnswer: B\n\nReference Solution:\nCoding is representation of the characters via a character code in whicheach character is assigned a unique combination of bits. The three mostpopular codes are BCDIC-Binary Coded Decimal Inter-change code, EBCDIC-Extended Binary Coded Decimal Interchangecode,and ASCII- American Standard Code for Information Interchange. The BCDIC was widely used until the advent of the IBM System/360 and similar to it systems.Being a six-bit character code, BCDIC can accumulate as much as 64 (26) characters assigning 000000 tothe first and 111111to the last character. This is sufficient for the 26 upper-caseletters, 10 digits, and 28 special characters such as period, comma, etc. If, however, distinction is to be made between the upper-case andthe lower-case letters, 64 characters are not enough. The 256 (28) \"spaces\" of the eight-bit codes, such as EBCDIC and ASCII, are more than enough toaccomodateall the needed characters. BCDIC and EBCDIC are very similar except that the second code contains morecharacters. Table1 ;illustrates thesethree character codes. Table 1. Character BCDIC8 EBCDIC ASCII 0 001 010 1111 0000 0011 0000 1 000 001 1111 0001 0011 0001 2 000 010 1111 0010 0011 0010 3 000 011 1111 0011 00110011 4 000 100 1111 0100 0011 0100 5 000 101 1111 0101 0011 0101 6 000 110 1111 0110 0011 0110 7 000 111 1111 0111 0011 0111 8 001 000 1111 1000 0011 1000 9 001001 1111 1001 0011 1001 A 110 001 1100 0001 0100 0001 B 110 010 1100 0010 0100 0010 C 110 011 1100 0011 0100 0011 D 110 100 1100 0100 01000100 E 110 101 1100 0101 0100 0101 F 110110 1100 0110 0100 0110 G 110 111 1100 0111 0100 0111 H 111 000 1100 1000 0100 1000 I 111 001 1100 1001 0100 1001 J 100 001 1101 0001 0100 1010 K 100 010 1101 0010 0100 1011 L 100 011 1101 0011 0100 1100 M 100100 1101 0100 0100 1101 N 100 101 1101 0101 0100 1110 O 100 110 1101 0110 0100 1111 P 100 111 1101 0111 0101 0000 Q 101 000 1101 1000 0101 0001 R 101 001 1101 1001 0101 0010 S 010010 1110 0010 0101 0011 T 010 011 1110 0011 0101 0100 U 010 100 1110 0100 01010101 V 010 101 1110 0101 0101 0110 W 010 110 1110 0110 0101 0111 X 010 111 1110 0111 0101 1000 Y 011 000 1110 1000 0101 1001 Z 011 001 1110 1001 0101 1010 blank 010 000 0100 0000 0010 0000 = 001 011 0111 1110 0011 1101 + 110 000 0100 1110 0010 1011 - 100 000 0110 0000 0010 1101 \\bullet 101 100 0101 1100 0010 1010 / 010 001 0110 0001 0010 1111 ( 011 100 0100 1101 0010 1000 ) 111 100 0101 1101 0010 1001 , 011011 0110 1011 0010 1100 . 111 011 0100 1011 0010 1110 $ 101 011 0101 1011 0010 0100 , 0111 1101 0010 0111 < 111 010 0100 1100 0011 1100 > 101 111 0110 1110 0011 1110 : 0111 1101 0011 1010 ; 0101 1110 0011 1011 \\textquotedblleft 111111 0111 1010 00100010", "ref_id": 4515, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Explain the concept of coding and give the general characteristicsof the most widely used codes.", "options": ["The three most popular codes are HTML, CSS, and JavaScript.", "Coding is representation of the characters via a character code in which each character is assigned a unique combination of bits. The three most popular codes are BCDIC, EBCDIC, and ASCII.", "Coding is the process of writing computer programs.", "Coding is the translation of data into a machine-readable form."], "answer": "B", "solution": "Coding is representation of the characters via a character code in whicheach character is assigned a unique combination of bits. The three mostpopular codes are BCDIC-Binary Coded Decimal Inter-change code, EBCDIC-Extended Binary Coded Decimal Interchangecode,and ASCII- American Standard Code for Information Interchange. The BCDIC was widely used until the advent of the IBM System/360 and similar to it systems.Being a six-bit character code, BCDIC can accumulate as much as 64 (26) characters assigning 000000 tothe first and 111111to the last character. This is sufficient for the 26 upper-caseletters, 10 digits, and 28 special characters such as period, comma, etc. If, however, distinction is to be made between the upper-case andthe lower-case letters, 64 characters are not enough. The 256 (28) \"spaces\" of the eight-bit codes, such as EBCDIC and ASCII, are more than enough toaccomodateall the needed characters. BCDIC and EBCDIC are very similar except that the second code contains morecharacters. Table1 ;illustrates thesethree character codes. Table 1. Character BCDIC8 EBCDIC ASCII 0 001 010 1111 0000 0011 0000 1 000 001 1111 0001 0011 0001 2 000 010 1111 0010 0011 0010 3 000 011 1111 0011 00110011 4 000 100 1111 0100 0011 0100 5 000 101 1111 0101 0011 0101 6 000 110 1111 0110 0011 0110 7 000 111 1111 0111 0011 0111 8 001 000 1111 1000 0011 1000 9 001001 1111 1001 0011 1001 A 110 001 1100 0001 0100 0001 B 110 010 1100 0010 0100 0010 C 110 011 1100 0011 0100 0011 D 110 100 1100 0100 01000100 E 110 101 1100 0101 0100 0101 F 110110 1100 0110 0100 0110 G 110 111 1100 0111 0100 0111 H 111 000 1100 1000 0100 1000 I 111 001 1100 1001 0100 1001 J 100 001 1101 0001 0100 1010 K 100 010 1101 0010 0100 1011 L 100 011 1101 0011 0100 1100 M 100100 1101 0100 0100 1101 N 100 101 1101 0101 0100 1110 O 100 110 1101 0110 0100 1111 P 100 111 1101 0111 0101 0000 Q 101 000 1101 1000 0101 0001 R 101 001 1101 1001 0101 0010 S 010010 1110 0010 0101 0011 T 010 011 1110 0011 0101 0100 U 010 100 1110 0100 01010101 V 010 101 1110 0101 0101 0110 W 010 110 1110 0110 0101 0111 X 010 111 1110 0111 0101 1000 Y 011 000 1110 1000 0101 1001 Z 011 001 1110 1001 0101 1010 blank 010 000 0100 0000 0010 0000 = 001 011 0111 1110 0011 1101 + 110 000 0100 1110 0010 1011 - 100 000 0110 0000 0010 1101 \\bullet 101 100 0101 1100 0010 1010 / 010 001 0110 0001 0010 1111 ( 011 100 0100 1101 0010 1000 ) 111 100 0101 1101 0010 1001 , 011011 0110 1011 0010 1100 . 111 011 0100 1011 0010 1110 $ 101 011 0101 1011 0010 0100 , 0111 1101 0010 0111 < 111 010 0100 1100 0011 1100 > 101 111 0110 1110 0011 1110 : 0111 1101 0011 1010 ; 0101 1110 0011 1011 \\textquotedblleft 111111 0111 1010 00100010"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program in PL / I to use the Gauss-Seidel method for solving linear equations. Specialize to 3 equations with 3 unknowns.\n\nOptions:\nA. Bisection method\nB. Secant method\nC.             Newton's method\nD. GAUSS-SEIDEL method\n\nAnswer: D\n\nReference Solution:\nConsider the system a_11x_1 + a_12x_2 + a_13x_3 = b1 a_21x_1 + a_22x_2 + a_23x_3 = b_2 a_31x_1 + a_32x_2 + a_33x_3 = b_3 The solution algorithm is based on rewriting this system to a form a_11x_1 = b_1 - (a\\textasteriskcentered_11x_1 + a_12x_2 + a_13x_3) a_22x-_2 = b_2 - (a_21x_1 + a\\textasteriskcentered_22x_2 + a_23x_3) a_33x_3 = b_3 - (a_31x_1 + a_32x_2 + a\\textasteriskcentered_33x_3) Let us introduce a P matrix associated with the A matrix, but modified so that the diagonal elements of the matrix A are replaced by 0. Using the new matrix P, one can rewrite the system as a_11x_1 = b_1 - (P_11x_1 + P_12x_2 + P_13x_3) a_22x-_2 = b_2 - (P_21x_1 + P_22x_2 + P_23x_3) a_33x_3 = b_3 - (P_31x_1 + P_32x_2 + P_33x_3) or in contact summation notation a_iix_i= bi- \\sum_jP_ijx_jfori= 1, 2, 3. In PL/I notation this last equation becomes X (I) = [B (I) - SUM (P (I, \\textasteriskcentered)\\textasteriskcenteredX) / A (I, I). Note that we SUM over the subscript \\textasteriskcentered corresponding to j. Also note that P_ij =a_ij,i\\not = j;P_ii= 0. For this program we read in the dimension N of the square matrix A, and the value of K -the number of iterations. The program looks as follows: START: PROCEDURE; /\\textasteriskcenteredGAUSS-SEIDEL\\textasteriskcentered/ RPT:GET LIST (N, K) ; BEGIN; DECLARE A (N, N), B (N), X (N) ,P (N, N); GET LIST (A\\textasteriskcenteredB); P = A; X = 0; DO I = 1 TO N; P (I, I) = 0; END; DO J = 1 TO K; DO I = 1 TO N; X (I) = [B (I) - SUM (P (I,\\textasteriskcentered)\\textasteriskcenteredX)) / A (I, I); END; PUT SKIP EDIT (X) (F (10,4)); END; END; PUT SKIP (2); GO TO RPT; END START;", "ref_id": 4516, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program in PL / I to use the Gauss-Seidel method for solving linear equations. Specialize to 3 equations with 3 unknowns.", "options": ["Bisection method", "Secant method", "Newton's method", "GAUSS-SEIDEL method"], "answer": "D", "solution": "Consider the system a_11x_1 + a_12x_2 + a_13x_3 = b1 a_21x_1 + a_22x_2 + a_23x_3 = b_2 a_31x_1 + a_32x_2 + a_33x_3 = b_3 The solution algorithm is based on rewriting this system to a form a_11x_1 = b_1 - (a\\textasteriskcentered_11x_1 + a_12x_2 + a_13x_3) a_22x-_2 = b_2 - (a_21x_1 + a\\textasteriskcentered_22x_2 + a_23x_3) a_33x_3 = b_3 - (a_31x_1 + a_32x_2 + a\\textasteriskcentered_33x_3) Let us introduce a P matrix associated with the A matrix, but modified so that the diagonal elements of the matrix A are replaced by 0. Using the new matrix P, one can rewrite the system as a_11x_1 = b_1 - (P_11x_1 + P_12x_2 + P_13x_3) a_22x-_2 = b_2 - (P_21x_1 + P_22x_2 + P_23x_3) a_33x_3 = b_3 - (P_31x_1 + P_32x_2 + P_33x_3) or in contact summation notation a_iix_i= bi- \\sum_jP_ijx_jfori= 1, 2, 3. In PL/I notation this last equation becomes X (I) = [B (I) - SUM (P (I, \\textasteriskcentered)\\textasteriskcenteredX) / A (I, I). Note that we SUM over the subscript \\textasteriskcentered corresponding to j. Also note that P_ij =a_ij,i\\not = j;P_ii= 0. For this program we read in the dimension N of the square matrix A, and the value of K -the number of iterations. The program looks as follows: START: PROCEDURE; /\\textasteriskcenteredGAUSS-SEIDEL\\textasteriskcentered/ RPT:GET LIST (N, K) ; BEGIN; DECLARE A (N, N), B (N), X (N) ,P (N, N); GET LIST (A\\textasteriskcenteredB); P = A; X = 0; DO I = 1 TO N; P (I, I) = 0; END; DO J = 1 TO K; DO I = 1 TO N; X (I) = [B (I) - SUM (P (I,\\textasteriskcentered)\\textasteriskcenteredX)) / A (I, I); END; PUT SKIP EDIT (X) (F (10,4)); END; END; PUT SKIP (2); GO TO RPT; END START;"}, "question": "task_1"}}, {"data": {"text": "Question:\nCalculate the number of parity bits required in order to code aninformation consisting of one binary bit on each input line, intothe Hamming code, if each input information has: a) 8 bits, and, b) 4 bits.\n\nOptions:\nA. a) 4 parity bits, b) 3 parity bits\nB. a) 5 parity bits, b) 4 parity bits\nC.             a) 3 parity bits, b) 2 parity bits\nD. a) 6 parity bits, b) 5 parity bits\n\nAnswer: A\n\nReference Solution:\nThe number of parity bits K, required to be added to n information linesis calculated as follows: with K parity bit, the total number of combinationsof 0's and 1's that one can have is 2^K . Out of these 2^K combinations, one must reserve one combina-tion to denote a no-error conditionwhen the lines are received at the receiver. The other (2^K - 1) combinationscan be used to identify each one of the incoming lines, so thatone can point out which incoming line has developed an error. Now, the number of incoming lines = n + k i.e., sum of the n information-bits lines plus the k parity-bits lines that were addedat the transmitter. Hence, one must satisfy the condition that 2k\\geqn + k + 1 . (a) As there are 8 information bits or lines,n =8 . \\therefore2k\\geq 8 + k+1 . i.e.,2k\\geq9 + k Now, k can be found by a trial and error method. Let k = 5 therefore,2k= 2^5 = 32. And 9 + k = 9 + 5 = 14. Hence, 32 \\geq14 . The condition is satisfied, but maybe a more \"economical\" number can be found. Letk = 4 then2k= 2^4 = 16 . And, 9 + k = 9 + 4 = 13. 16 \\geq13 . Again the condition is satisfied. But if k = 3, the condition will no longer be satisfied. Hence, k = 4 is the correct answer, i.e., 4 parity bits must be added. (b) If there are 4 information bits or lines, n = 4. Again, k is selected by trial anderror method until the condition is just satisfied (i.e., the least possible k). Let k = 3 \\therefore 2^k = 2^3 = 8. And, n + k + 1 = 4 + k + 1 = 5 + k = 5 + 3 = 8 8 \\geq8 . thecondition is satisfied, while k = 2 leads to the incorrect comparision4 \\geq 7 . Thus, with n = 4 information bits, one must have k = 3 paritybits.", "ref_id": 4517, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Calculate the number of parity bits required in order to code aninformation consisting of one binary bit on each input line, intothe Hamming code, if each input information has: a) 8 bits, and, b) 4 bits.", "options": ["a) 4 parity bits, b) 3 parity bits", "a) 5 parity bits, b) 4 parity bits", "a) 3 parity bits, b) 2 parity bits", "a) 6 parity bits, b) 5 parity bits"], "answer": "A", "solution": "The number of parity bits K, required to be added to n information linesis calculated as follows: with K parity bit, the total number of combinationsof 0's and 1's that one can have is 2^K . Out of these 2^K combinations, one must reserve one combina-tion to denote a no-error conditionwhen the lines are received at the receiver. The other (2^K - 1) combinationscan be used to identify each one of the incoming lines, so thatone can point out which incoming line has developed an error. Now, the number of incoming lines = n + k i.e., sum of the n information-bits lines plus the k parity-bits lines that were addedat the transmitter. Hence, one must satisfy the condition that 2k\\geqn + k + 1 . (a) As there are 8 information bits or lines,n =8 . \\therefore2k\\geq 8 + k+1 . i.e.,2k\\geq9 + k Now, k can be found by a trial and error method. Let k = 5 therefore,2k= 2^5 = 32. And 9 + k = 9 + 5 = 14. Hence, 32 \\geq14 . The condition is satisfied, but maybe a more \"economical\" number can be found. Letk = 4 then2k= 2^4 = 16 . And, 9 + k = 9 + 4 = 13. 16 \\geq13 . Again the condition is satisfied. But if k = 3, the condition will no longer be satisfied. Hence, k = 4 is the correct answer, i.e., 4 parity bits must be added. (b) If there are 4 information bits or lines, n = 4. Again, k is selected by trial anderror method until the condition is just satisfied (i.e., the least possible k). Let k = 3 \\therefore 2^k = 2^3 = 8. And, n + k + 1 = 4 + k + 1 = 5 + k = 5 + 3 = 8 8 \\geq8 . thecondition is satisfied, while k = 2 leads to the incorrect comparision4 \\geq 7 . Thus, with n = 4 information bits, one must have k = 3 paritybits."}, "question": "task_1"}}, {"data": {"text": "Question:\nDesign a Program usingBASIC to simulate the rolls of a die.\n\nOptions:\nA. Use an array to store the results\nB. Use random number generator RND\nC.             Use a loop to simulate the roll\nD. Use a counter to count the number of sixes\n\nAnswer: B\n\nReference Solution:\nFor this problem, the random number generator RND can be used. This function generates random numbers between 0 and 1. We want to generate integers from 1 to 6 inclusive, and find out how many 6's appeared after 100 tosses. A counter S is set up to sum the number of times a 6 is encountered. 1\\O REM DIE THROWING SIMULATION 2\\O LET S = \\O 3\\O FOR X = 1 TO 1\\O\\O 4\\O LET D = INT(1 + 6\\textasteriskcenteredRND) 5\\O IF D = 6 THEN 8\\O 6\\O GO TO 1\\O\\O 7\\O REM S COUNTS SIXES 8\\O LET S = S + 1 9\\O NEXT X 1\\O\\O PRINT 11\\O PRINT S; \"SIXES OUT OF 1\\O\\O ROLLS\" 12\\O END", "ref_id": 4518, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Design a Program usingBASIC to simulate the rolls of a die.", "options": ["Use an array to store the results", "Use random number generator RND", "Use a loop to simulate the roll", "Use a counter to count the number of sixes"], "answer": "B", "solution": "For this problem, the random number generator RND can be used. This function generates random numbers between 0 and 1. We want to generate integers from 1 to 6 inclusive, and find out how many 6's appeared after 100 tosses. A counter S is set up to sum the number of times a 6 is encountered. 1\\O REM DIE THROWING SIMULATION 2\\O LET S = \\O 3\\O FOR X = 1 TO 1\\O\\O 4\\O LET D = INT(1 + 6\\textasteriskcenteredRND) 5\\O IF D = 6 THEN 8\\O 6\\O GO TO 1\\O\\O 7\\O REM S COUNTS SIXES 8\\O LET S = S + 1 9\\O NEXT X 1\\O\\O PRINT 11\\O PRINT S; \"SIXES OUT OF 1\\O\\O ROLLS\" 12\\O END"}, "question": "task_1"}}, {"data": {"text": "Question:\nDevise a BASIC program to calculate the first N numbers of the FIBONACCI series.\n\nOptions:\nA. 1\\O DIM F(5\\O) 2\\O INPUT N 3\\O LET F(1) = 1 4\\O LET F(2) = 1 45 PRINT F(1), F(2), 5\\O FOR 1=3 TO N 6\\O LET F(I) - F(I - 1) + F(I - 2) 7\\O PRINT F(I), 8\\O NEXT I 1\\O\\O END\nB. 1\\O DIM F(5\\O) 2\\O INPUT N 3\\O LET F(1) = 2 4\\O LET F(2) = 3 45 PRINT F(1), F(2), 5\\O FOR 1=3 TO N 6\\O LET F(I) - F(I - 1) + F(I - 2) 7\\O PRINT F(I), 8\\O NEXT I 1\\O\\O END\nC.             2\\O INPUT N 3\\O LET F(1) = 1 4\\O LET F(2) = 2 45 PRINT F(1), F(2), 5\\O FOR 1=3 TO N 6\\O LET F(I) - F(I - 2) + F(I - 1) 7\\O PRINT F(I), 8\\O NEXT I 1\\O\\O END\nD. 1\\O DIM F(5\\O) 2\\O INPUT N 3\\O LET F(1) = 0 4\\O LET F(2) = 1 45 PRINT F(1), F(2), 5\\O FOR 1=3 TO N 6\\O LET F(I) - F(I - 1) + F(I - 2) 7\\O PRINT F(I), 8\\O NEXT I 1\\O\\O END\n\nAnswer: A\n\nReference Solution:\nThe FIBONACCI series is defined recursively by F(1) = 1, F(2) = 1, and for I greater or equal to 3, F(I) = F(I - 1) + F(I - 2). It is convenient to tabulate the functional values in an array dimensioned to be, say, 50. DIM (dimension) statement is used for this purpose. BASIC automatically provides for 10 places in its memory cells for any one dimensional array (11 places in those systems, which accept 0 subscript). If one desires N \\not = 10 places to be reserved, he can use the statement of the form: DIM V(N) where V can be any valid variable. Thus the program will handle N up to 50. 1\\O DIM F(5\\O) 2\\O INPUT N 3\\O LET F(1) = 1 4\\O LET F(2) = 1 45 PRINT F(1), F(2), 5\\O FOR 1=3 TO N 6\\O LET F(I) - F(I - 1) + F(I - 2) 7\\O PRINT F(I), 8\\O NEXT I 1\\O\\O END", "ref_id": 4519, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Devise a BASIC program to calculate the first N numbers of the FIBONACCI series.", "options": ["1\\O DIM F(5\\O) 2\\O INPUT N 3\\O LET F(1) = 1 4\\O LET F(2) = 1 45 PRINT F(1), F(2), 5\\O FOR 1=3 TO N 6\\O LET F(I) - F(I - 1) + F(I - 2) 7\\O PRINT F(I), 8\\O NEXT I 1\\O\\O END", "1\\O DIM F(5\\O) 2\\O INPUT N 3\\O LET F(1) = 2 4\\O LET F(2) = 3 45 PRINT F(1), F(2), 5\\O FOR 1=3 TO N 6\\O LET F(I) - F(I - 1) + F(I - 2) 7\\O PRINT F(I), 8\\O NEXT I 1\\O\\O END", "2\\O INPUT N 3\\O LET F(1) = 1 4\\O LET F(2) = 2 45 PRINT F(1), F(2), 5\\O FOR 1=3 TO N 6\\O LET F(I) - F(I - 2) + F(I - 1) 7\\O PRINT F(I), 8\\O NEXT I 1\\O\\O END", "1\\O DIM F(5\\O) 2\\O INPUT N 3\\O LET F(1) = 0 4\\O LET F(2) = 1 45 PRINT F(1), F(2), 5\\O FOR 1=3 TO N 6\\O LET F(I) - F(I - 1) + F(I - 2) 7\\O PRINT F(I), 8\\O NEXT I 1\\O\\O END"], "answer": "A", "solution": "The FIBONACCI series is defined recursively by F(1) = 1, F(2) = 1, and for I greater or equal to 3, F(I) = F(I - 1) + F(I - 2). It is convenient to tabulate the functional values in an array dimensioned to be, say, 50. DIM (dimension) statement is used for this purpose. BASIC automatically provides for 10 places in its memory cells for any one dimensional array (11 places in those systems, which accept 0 subscript). If one desires N \\not = 10 places to be reserved, he can use the statement of the form: DIM V(N) where V can be any valid variable. Thus the program will handle N up to 50. 1\\O DIM F(5\\O) 2\\O INPUT N 3\\O LET F(1) = 1 4\\O LET F(2) = 1 45 PRINT F(1), F(2), 5\\O FOR 1=3 TO N 6\\O LET F(I) - F(I - 1) + F(I - 2) 7\\O PRINT F(I), 8\\O NEXT I 1\\O\\O END"}, "question": "task_1"}}, {"data": {"text": "Question:\nGiven a one-dimensional array Y with 50 elements, and numbersU and I, write statements to compute the value of S fromthe following equation: S =y_i+ U {(y_i+ 1-y_i- 1) / 2} + (U^2 / 2) (y_i+ 1- 2y_i +y_i- 1) S =y_i+ U {(y_i+ 1-y_i- 1) / 2} + (U^2 / 2) (y_i+ 1- 2y_i +y_i- 1)\n\nOptions:\nA. Taylor's interpolation formula\nB. Lagrange's interpolation formula\nC.             Newton's interpolation formula\nD. Stirling's interpolation formula\n\nAnswer: D\n\nReference Solution:\nNote that since the subscripts on Y can be i+1,i, or i-1 where the Y arrayis dimensioned 50, then we must restrict I to being an integer from 2 to49, i.e., there are 48 possible values of I. With this restriction in mind we cansimply write: DIMENSIONY(50) DO 100 I = 2,49 S =Y(I) + U \\textasteriskcentered (Y(I + 1) - Y(I - 1)/2.0) 1+ U \\textasteriskcentered U \\textasteriskcentered (Y(I + 1) - 2\\textasteriskcenteredY (I) 1+Y(I - 1))/2.0 100CONTINUE STOP END Further remarks on interpretation: This formula is calledStirling's interpolationformula [S stands forStirling!] through second differences andis described below. We have three points on a curve: (Xi -1,Yi - 1), (X_i, Y_i), and (Xi + 1, Yi + 1) such that Xi + 1- X_i = X_i - Xi - 1= h , (i.e., the x coordinates are equally spaced) and have a value of x for which wewant to guess Y(x). We write U = (x -x_i )/h. Then the formula stated givesthe interpolated value of Y corresponding to x, found by passing a quadraticthrough the three given points.", "ref_id": 4520, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Given a one-dimensional array Y with 50 elements, and numbersU and I, write statements to compute the value of S fromthe following equation: S =y_i+ U {(y_i+ 1-y_i- 1) / 2} + (U^2 / 2) (y_i+ 1- 2y_i +y_i- 1) S =y_i+ U {(y_i+ 1-y_i- 1) / 2} + (U^2 / 2) (y_i+ 1- 2y_i +y_i- 1)", "options": ["Taylor's interpolation formula", "Lagrange's interpolation formula", "Newton's interpolation formula", "Stirling's interpolation formula"], "answer": "D", "solution": "Note that since the subscripts on Y can be i+1,i, or i-1 where the Y arrayis dimensioned 50, then we must restrict I to being an integer from 2 to49, i.e., there are 48 possible values of I. With this restriction in mind we cansimply write: DIMENSIONY(50) DO 100 I = 2,49 S =Y(I) + U \\textasteriskcentered (Y(I + 1) - Y(I - 1)/2.0) 1+ U \\textasteriskcentered U \\textasteriskcentered (Y(I + 1) - 2\\textasteriskcenteredY (I) 1+Y(I - 1))/2.0 100CONTINUE STOP END Further remarks on interpretation: This formula is calledStirling's interpolationformula [S stands forStirling!] through second differences andis described below. We have three points on a curve: (Xi -1,Yi - 1), (X_i, Y_i), and (Xi + 1, Yi + 1) such that Xi + 1- X_i = X_i - Xi - 1= h , (i.e., the x coordinates are equally spaced) and have a value of x for which wewant to guess Y(x). We write U = (x -x_i )/h. Then the formula stated givesthe interpolated value of Y corresponding to x, found by passing a quadraticthrough the three given points."}, "question": "task_1"}}, {"data": {"text": "Question:\nUsing APL, simulate the game of craps.\n\nOptions:\nA. ablaCRAPS [1]A \\leftarrow 10 [2]AGAIN:A \\leftarrow A, B \\leftarrow +/?2\nho6 [3]\nightarrow( ( (1 =\nhoA)\\wedge\\simB \\epsilon 7 11 2 3 12) \u000bee (1 \not =\nhoA) \\sim \\wedge\\simB \\epsilon (A [1] , 7) ) /AGAIN \\sim \\sim [4]\nightarrow( ( (1 =\nhoA) \\wedge B \\epsilon 7 11) \u000bee (1 \not =\nhoA) \\wedge B =A [1] ) /WIN [5]`YOU LOSE WITH' ; A [6]\nightarrow0 [7]WIN:`YOU WIN WITH' ; A [8]\nabla\nB. ablaCRAPS [1]A \\leftarrow 10 [2]AGAIN:A \\leftarrow A, B \\leftarrow +/?2\nho6 [3]\nightarrow( ( (1 =\nhoA)\\wedge\\simB \\epsilon 7 11 2 3 12) \u000bee (1 \not =\nhoA) \\sim \\wedge\\simB \\epsilon (A [1] , 7) ) /AGAIN \\sim \\sim [4]\nightarrow( ( (1 =\nhoA) \\wedge B \\epsilon 2 3 12) \u000bee (1 \not =\nhoA) \\wedge B =A [1] ) /WIN [5]`YOU LOSE WITH' ; A [6]\nightarrow0 [7]WIN:`YOU WIN WITH' ; A [8]\nabla\nC.             ablaCRAPS [1]A \\leftarrow 10 [2]AGAIN:A \\leftarrow A, B \\leftarrow +/?2\nho6 [3]\nightarrow( ( (1 =\nhoA)\\wedge\\simB \\epsilon 7 11 2 3 12) \u000bee (1 \not =\nhoA) \\sim \\wedge\\simB \\epsilon (A [1] , 7) ) /AGAIN \\sim \\sim [4]\nightarrow( ( (1 =\nhoA) \\wedge B \\epsilon 7 11 2 3 12) \u000bee (1 \not =\nhoA) \\wedge B =A [1] ) /WIN [5]`YOU LOSE WITH' ; A [6]\nightarrow0 [7]WIN:`YOU WIN WITH' ; A [8]\nabla\nD. ablaCRAPS [1]A \\leftarrow 10 [2]AGAIN:A \\leftarrow A, B \\leftarrow +/?2\nho6 [3]\nightarrow( ( (1 =\nhoA)\\wedge\\simB \\epsilon 7 11 2 3 12) \u000bee (1 \not =\nhoA) \\sim \\wedge\\simB \\epsilon (A [1] , 7) ) /AGAIN \\sim \\sim [4]\nightarrow( ( (1 =\nhoA) \\wedge B \\epsilon 7 11) \u000bee (1 \not =\nhoA) \\wedge B =A [1] ) /WIN [5]`YOU LOSE WITH' ; A [6]\nightarrow0 [7]WIN:`YOU WIN WITH' ; A [8]\nabla\n\nAnswer: A\n\nReference Solution:\nFirst of all, let us describe how the game of craps is played: A player rolls two dice. If the sum of the two faces on the first throw is 7 or 11, he wins the amount bet. If the sum turns up to be a 4, 5, 6, 8, 9 or 10, the player continues to roll until he obtains (1) a 7 in which case he loses, or (2) the sum he obtained on the first throw; in this case he wins. Our APL program for craps is: \\nablaCRAPS [1]A \\leftarrow 10 [2]AGAIN:A \\leftarrow A, B \\leftarrow +/?2\\rho6 [3]\\rightarrow( ( (1 =\\rhoA)\\wedge\\simB \\epsilon 7 11 2 3 12) \\vee (1 \\not =\\rhoA) \\sim \\wedge\\simB \\epsilon (A [1] , 7) ) /AGAIN \\sim \\sim [4]\\rightarrow( ( (1 =\\rhoA) \\wedge B \\epsilon 7 11) \\vee (1 \\not =\\rhoA) \\wedge B =A [1] ) /WIN [5]`YOU LOSE WITH' ; A [6]\\rightarrow0 [7]WIN:`YOU WIN WITH' ; A [8]\\nabla In step [1] weintializethe vector A to be the null vec-tor. In [2] we find the sum of two random numbers. The random numbers are positive integers between 1 and 6. Wecatenateall sums in the vector A. Step [3] checks two things: (1) whether it was the first roll and if the roll automatically gave you a win (7 or 11) or a loss (2, 3, 12), (2) whether you rolled more than once, and if the last roll gave you a 7 (loss) or the same sum as the one obtained on the first throw (win). If you do not win or lose in step [3] you must roll again (go to step 2). In step 4: If you won, you are sent to step 7, where it is printed out that you win and vector A is also printed out. If you do not win, step [5] will indicate that you are a loser.", "ref_id": 4521, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Using APL, simulate the game of craps.", "options": ["ablaCRAPS [1]A \\leftarrow 10 [2]AGAIN:A \\leftarrow A, B \\leftarrow +/?2\nho6 [3]\nightarrow( ( (1 =\nhoA)\\wedge\\simB \\epsilon 7 11 2 3 12) \u000bee (1 \not =\nhoA) \\sim \\wedge\\simB \\epsilon (A [1] , 7) ) /AGAIN \\sim \\sim [4]\nightarrow( ( (1 =\nhoA) \\wedge B \\epsilon 7 11) \u000bee (1 \not =\nhoA) \\wedge B =A [1] ) /WIN [5]`YOU LOSE WITH' ; A [6]\nightarrow0 [7]WIN:`YOU WIN WITH' ; A [8]\nabla", "ablaCRAPS [1]A \\leftarrow 10 [2]AGAIN:A \\leftarrow A, B \\leftarrow +/?2\nho6 [3]\nightarrow( ( (1 =\nhoA)\\wedge\\simB \\epsilon 7 11 2 3 12) \u000bee (1 \not =\nhoA) \\sim \\wedge\\simB \\epsilon (A [1] , 7) ) /AGAIN \\sim \\sim [4]\nightarrow( ( (1 =\nhoA) \\wedge B \\epsilon 2 3 12) \u000bee (1 \not =\nhoA) \\wedge B =A [1] ) /WIN [5]`YOU LOSE WITH' ; A [6]\nightarrow0 [7]WIN:`YOU WIN WITH' ; A [8]\nabla", "ablaCRAPS [1]A \\leftarrow 10 [2]AGAIN:A \\leftarrow A, B \\leftarrow +/?2\nho6 [3]\nightarrow( ( (1 =\nhoA)\\wedge\\simB \\epsilon 7 11 2 3 12) \u000bee (1 \not =\nhoA) \\sim \\wedge\\simB \\epsilon (A [1] , 7) ) /AGAIN \\sim \\sim [4]\nightarrow( ( (1 =\nhoA) \\wedge B \\epsilon 7 11 2 3 12) \u000bee (1 \not =\nhoA) \\wedge B =A [1] ) /WIN [5]`YOU LOSE WITH' ; A [6]\nightarrow0 [7]WIN:`YOU WIN WITH' ; A [8]\nabla", "ablaCRAPS [1]A \\leftarrow 10 [2]AGAIN:A \\leftarrow A, B \\leftarrow +/?2\nho6 [3]\nightarrow( ( (1 =\nhoA)\\wedge\\simB \\epsilon 7 11 2 3 12) \u000bee (1 \not =\nhoA) \\sim \\wedge\\simB \\epsilon (A [1] , 7) ) /AGAIN \\sim \\sim [4]\nightarrow( ( (1 =\nhoA) \\wedge B \\epsilon 7 11) \u000bee (1 \not =\nhoA) \\wedge B =A [1] ) /WIN [5]`YOU LOSE WITH' ; A [6]\nightarrow0 [7]WIN:`YOU WIN WITH' ; A [8]\nabla"], "answer": "A", "solution": "First of all, let us describe how the game of craps is played: A player rolls two dice. If the sum of the two faces on the first throw is 7 or 11, he wins the amount bet. If the sum turns up to be a 4, 5, 6, 8, 9 or 10, the player continues to roll until he obtains (1) a 7 in which case he loses, or (2) the sum he obtained on the first throw; in this case he wins. Our APL program for craps is: \\nablaCRAPS [1]A \\leftarrow 10 [2]AGAIN:A \\leftarrow A, B \\leftarrow +/?2\\rho6 [3]\\rightarrow( ( (1 =\\rhoA)\\wedge\\simB \\epsilon 7 11 2 3 12) \\vee (1 \\not =\\rhoA) \\sim \\wedge\\simB \\epsilon (A [1] , 7) ) /AGAIN \\sim \\sim [4]\\rightarrow( ( (1 =\\rhoA) \\wedge B \\epsilon 7 11) \\vee (1 \\not =\\rhoA) \\wedge B =A [1] ) /WIN [5]`YOU LOSE WITH' ; A [6]\\rightarrow0 [7]WIN:`YOU WIN WITH' ; A [8]\\nabla In step [1] weintializethe vector A to be the null vec-tor. In [2] we find the sum of two random numbers. The random numbers are positive integers between 1 and 6. Wecatenateall sums in the vector A. Step [3] checks two things: (1) whether it was the first roll and if the roll automatically gave you a win (7 or 11) or a loss (2, 3, 12), (2) whether you rolled more than once, and if the last roll gave you a 7 (loss) or the same sum as the one obtained on the first throw (win). If you do not win or lose in step [3] you must roll again (go to step 2). In step 4: If you won, you are sent to step 7, where it is printed out that you win and vector A is also printed out. If you do not win, step [5] will indicate that you are a loser."}, "question": "task_1"}}, {"data": {"text": "Question:\nWhat is the output for each of the following?\n\nOptions:\nA. nan\nB. nan\nC.             nan\nD. nan\n\nAnswer: A\n\nReference Solution:\nThe output is as follows:", "ref_id": 4522, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "What is the output for each of the following?", "options": ["nan", "nan", "nan", "nan"], "answer": "A", "solution": "The output is as follows:"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a FORTRAN program which determines whether or not the given square matrix (up to 20 \u00d7 20) is symmetrical.\n\nOptions:\nA. The program checks if the matrix is square by comparing the number of rows and columns.\nB. The FORTRAN program checks whether a matrix is symmetric by using two nested DO loops to verify if A(i, j) = A(j,i) for all i and j.\nC.             The program checks the symmetry of a matrix by comparing the sum of all elements.\nD. The program checks the symmetry of a matrix by multiplying it with its transpose and checking if the result is an identity matrix.\n\nAnswer: B\n\nReference Solution:\nBy definition, a matrix is symmetric if A(i, j) = A(j,i) for alliand j. Hence our approach is to use two nested DO loops to check this condition. In statement number 8, an implied DO loops is used to read in the elements of the matrix. The program looks as follows: INTEGERX (20, 20) 6READ(2, 31) N, ID CN IS MATRIX SIZE, ID IS THE IDENTIFICATION OF THE MATRIX IF (N) 99, 99, 8 8READ (2, 32)[{X (I, J), I = 1, N}, J = 1, N] DO 10 I = 1, N DO 10 J = 1, N IF [X (I, J) - X (J, I)]9, 10, 9 10CONTINUE WRITE (3, 33) ID GO TO 6 9WRITE (3, 34) ID GO TO 6 31FORMAT (I2, 3X, I3) 32FORMAT (I4) 33FORMAT(8HIMATRIX I3, 13H IS SYMMETRIC) 34FORMAT(8HIMATRIX I3, 17H IS NOT SYMMETRIC) 99STOP END", "ref_id": 4523, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a FORTRAN program which determines whether or not the given square matrix (up to 20 \u00d7 20) is symmetrical.", "options": ["The program checks if the matrix is square by comparing the number of rows and columns.", "The FORTRAN program checks whether a matrix is symmetric by using two nested DO loops to verify if A(i, j) = A(j,i) for all i and j.", "The program checks the symmetry of a matrix by comparing the sum of all elements.", "The program checks the symmetry of a matrix by multiplying it with its transpose and checking if the result is an identity matrix."], "answer": "B", "solution": "By definition, a matrix is symmetric if A(i, j) = A(j,i) for alliand j. Hence our approach is to use two nested DO loops to check this condition. In statement number 8, an implied DO loops is used to read in the elements of the matrix. The program looks as follows: INTEGERX (20, 20) 6READ(2, 31) N, ID CN IS MATRIX SIZE, ID IS THE IDENTIFICATION OF THE MATRIX IF (N) 99, 99, 8 8READ (2, 32)[{X (I, J), I = 1, N}, J = 1, N] DO 10 I = 1, N DO 10 J = 1, N IF [X (I, J) - X (J, I)]9, 10, 9 10CONTINUE WRITE (3, 33) ID GO TO 6 9WRITE (3, 34) ID GO TO 6 31FORMAT (I2, 3X, I3) 32FORMAT (I4) 33FORMAT(8HIMATRIX I3, 13H IS SYMMETRIC) 34FORMAT(8HIMATRIX I3, 17H IS NOT SYMMETRIC) 99STOP END"}, "question": "task_1"}}, {"data": {"text": "Question:\nDefine a process, and describe its states during its life cycle.\n\nOptions:\nA. A process is a series of tasks performed by the computer's hardware.\nB. A process is a piece of sequential machine code that is kept track of by creating a data structure in memory, called Process Control Block (PCB). The states of a process are: SUBMITTED, READY, RUNNING, WAITING, SWAPPED, and COMPLETED.\nC.             A process is a random piece of code that runs on a computer.\nD. The states of a process are: STARTED, PAUSED, RUNNING, FINISHED.\n\nAnswer: B\n\nReference Solution:\nA process is internally defined by the operating system. Normally, it is a piece of sequential machine code (a program segment) that is kept track of. This is done by creating a data structure in memory, called Process Control Block (PCB), to keep track of this runnable code segment. The PCB contains the required information about the process: Name or identifica-tion, memory location, size, priority, address of page table (if paged memory management is used), etc. The PCB may additionally contain the \"state\" of the process, and the context (or the address of the context) of process. The context of a process is the content of the CPU registers at the time of its suspension, so that it can later be resumed to run again. The states of a process, kept track of by the low-level CPU scheduler that is part of the operating system nucleus (kernel) are as shown below: SUBMITTED : The job for which the process needs to be created has been submitted by the user. This job may be waiting in a job spooling queue on the disk. Handled by the high-level job scheduler of the operating system, the job may cause one or more processes to be created. For example, if the job has a READ statement for input, a system program that does this read will have the corresponding process created for it. READY : The PCB for the process has been created and stored in a system table called \"ready list.\" The process has all the re-sources assigned (e.g. memory, devices, etc.) except the CPU. RUNNING : The process has been assigned the CPU resource as well, and is running (executing) . At this point, the entry asso-ciated with the state of the process in its PCB may be marked running, or simply nothing is done. WAITING : The process has been suspended and its PCB has been entered into a queue (the device list, or blocked list) associ-ated with the device for which the I/O is requested. After the I/O is complete, the process is awakened. This means that its PCB is transferred from the device list to the ready list. This does not mean it starts running again. It may later be assigned the CPU to run, depending how the ready list (or queue) of PCBs are manipulated. SWAPPED : The job for which the process has been created has been rescheduled by the high-level job scheduler. This is typi-cally done when the low-level scheduler encounters a problem with the process (e.g. infinite loop, requested additional memory is simply not available, executed too long, more impor-tant processes with higher priorities caused it preemption, etc.). The low-level scheduler calls upon the swapper (or inter-mediate level scheduler) to copy the process code from main memory to disk and release all other resources held by that process. Afterwards, the job for which the process is swapped (sometimes referred to as HOLD state), is rescheduled by the high-level scheduler. Except for the partial output which may or may not be retained (e.g. how do you retain half a page printed?), unfortunately this is as if the job is submitted again. COMPLETED : The process has completed its computations and input- o utput and released the resources held. Its output may be placed on disk and associated with the job for which it is originally created. The solid arrows correspond to the state changes that are important, and normally handled by the low-level scheduler. The dashed arrows indicate the swapping that is not always imple-mented (that is, when a problem is encountered, the process may simply be terminated). The state change from RUNNING to READY state, shown with broken arrow, takes place in time-shared sys-tems where the PCB is placed at the end of the ready queue (list) after the time quantum expires.", "ref_id": 4524, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Define a process, and describe its states during its life cycle.", "options": ["A process is a series of tasks performed by the computer's hardware.", "A process is a piece of sequential machine code that is kept track of by creating a data structure in memory, called Process Control Block (PCB). The states of a process are: SUBMITTED, READY, RUNNING, WAITING, SWAPPED, and COMPLETED.", "A process is a random piece of code that runs on a computer.", "The states of a process are: STARTED, PAUSED, RUNNING, FINISHED."], "answer": "B", "solution": "A process is internally defined by the operating system. Normally, it is a piece of sequential machine code (a program segment) that is kept track of. This is done by creating a data structure in memory, called Process Control Block (PCB), to keep track of this runnable code segment. The PCB contains the required information about the process: Name or identifica-tion, memory location, size, priority, address of page table (if paged memory management is used), etc. The PCB may additionally contain the \"state\" of the process, and the context (or the address of the context) of process. The context of a process is the content of the CPU registers at the time of its suspension, so that it can later be resumed to run again. The states of a process, kept track of by the low-level CPU scheduler that is part of the operating system nucleus (kernel) are as shown below: SUBMITTED : The job for which the process needs to be created has been submitted by the user. This job may be waiting in a job spooling queue on the disk. Handled by the high-level job scheduler of the operating system, the job may cause one or more processes to be created. For example, if the job has a READ statement for input, a system program that does this read will have the corresponding process created for it. READY : The PCB for the process has been created and stored in a system table called \"ready list.\" The process has all the re-sources assigned (e.g. memory, devices, etc.) except the CPU. RUNNING : The process has been assigned the CPU resource as well, and is running (executing) . At this point, the entry asso-ciated with the state of the process in its PCB may be marked running, or simply nothing is done. WAITING : The process has been suspended and its PCB has been entered into a queue (the device list, or blocked list) associ-ated with the device for which the I/O is requested. After the I/O is complete, the process is awakened. This means that its PCB is transferred from the device list to the ready list. This does not mean it starts running again. It may later be assigned the CPU to run, depending how the ready list (or queue) of PCBs are manipulated. SWAPPED : The job for which the process has been created has been rescheduled by the high-level job scheduler. This is typi-cally done when the low-level scheduler encounters a problem with the process (e.g. infinite loop, requested additional memory is simply not available, executed too long, more impor-tant processes with higher priorities caused it preemption, etc.). The low-level scheduler calls upon the swapper (or inter-mediate level scheduler) to copy the process code from main memory to disk and release all other resources held by that process. Afterwards, the job for which the process is swapped (sometimes referred to as HOLD state), is rescheduled by the high-level scheduler. Except for the partial output which may or may not be retained (e.g. how do you retain half a page printed?), unfortunately this is as if the job is submitted again. COMPLETED : The process has completed its computations and input- o utput and released the resources held. Its output may be placed on disk and associated with the job for which it is originally created. The solid arrows correspond to the state changes that are important, and normally handled by the low-level scheduler. The dashed arrows indicate the swapping that is not always imple-mented (that is, when a problem is encountered, the process may simply be terminated). The state change from RUNNING to READY state, shown with broken arrow, takes place in time-shared sys-tems where the PCB is placed at the end of the ready queue (list) after the time quantum expires."}, "question": "task_1"}}, {"data": {"text": "Question:\nDebug the following PL/I program. The program is given as a sourcelisting i.e. a written record of the PL/I program suppliedby the computer. STNT 1PROCEDUREOPTION(MAIN); 2DECLARE(A(10),B(10))FIXED (5), (X,Y,Z) FIXED (4), C CHARACTER(5) ; 3PUTPAGE? PUT SKIP(3)EDIT('C','X','Y','Z' , 'W' , 'V','A','R') (COL(20),A,COL(30),A,COL (40),A, COL(50) ,A,COL(60) ,A,COL(70) , A,COL(85) ,A,COL(95) ,A; 5GET EDIT (X, Y,C,W) (X(2) ,F(4) ,X(3) ,F(4) , X(7) ,A(5) , F(2)); 6GET SKIP; 7IF X = 0 & Y = 0 THEN GOTO NOMORE; 8IF X>Y THEN Z=2\\textasteriskcenteredX+Y;ELSE Z=2\\textasteriskcentered(X+Y)-18; 9V=SQRT(40)(Y-2)-W\\textasteriskcenteredX)/(X-Y); 10L \\vert :DO I = \\vert TO W; 11A(I)=X+Y+3\\textasteriskcenteredI; B(I)=X - Y-3\\textasteriskcenteredI; 12IF 1=1 PUT SKIP(2)EDIT; EDIT(C,X,Y,Z, 13W,V,A(I),B(I)) (COL(20),A(5),COL(30),F(4) , COL(40) , F(4),COL(50),F(4),COL(60) ,F(2), COL(70),E(13,6) COL(85),F (6),COL(95),F(6)); 14ELSE PUT SKIP EDIT(A(I),B(I))(COL(85),F(5), COL(95),F (5)); 15FIND LI; 16GO TO IN; 17NOMORE; END BUGS;\n\nOptions:\nA. Procedural errors and missing elements\nB. Infinite loops\nC.             Invalid variables\nD. Syntax errors\n\nAnswer: A\n\nReference Solution:\nThis program reads sets of edit-directed data, performs some calculationsand prints the results. The written program contains the following errors: 1) Statement 1: The procedure has no name 2) Statement 1: OPTION should be OPTIONS 3) Statement 3: There should be a blank between PUT and PAGE. 4) Statement 7: There should be a blank between GO and TO. 5) Statement 9: There is no arithmetic operator be-tween the constant 40 andthe term (Y-2). 6) Statement 10: The 1 has beenmispunchedas\\vert . 7) Statement 11: The minus sign in X-Y is misplaced. 8) Statement 12: The keyword THEN is omitted from the IF statement. 9) Statement 16: There is no statement in the programlabelledIN. 10) Statement 17: BUGS appears nowhere else.", "ref_id": 4525, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Debug the following PL/I program. The program is given as a sourcelisting i.e. a written record of the PL/I program suppliedby the computer. STNT 1PROCEDUREOPTION(MAIN); 2DECLARE(A(10),B(10))FIXED (5), (X,Y,Z) FIXED (4), C CHARACTER(5) ; 3PUTPAGE? PUT SKIP(3)EDIT('C','X','Y','Z' , 'W' , 'V','A','R') (COL(20),A,COL(30),A,COL (40),A, COL(50) ,A,COL(60) ,A,COL(70) , A,COL(85) ,A,COL(95) ,A; 5GET EDIT (X, Y,C,W) (X(2) ,F(4) ,X(3) ,F(4) , X(7) ,A(5) , F(2)); 6GET SKIP; 7IF X = 0 & Y = 0 THEN GOTO NOMORE; 8IF X>Y THEN Z=2\\textasteriskcenteredX+Y;ELSE Z=2\\textasteriskcentered(X+Y)-18; 9V=SQRT(40)(Y-2)-W\\textasteriskcenteredX)/(X-Y); 10L \\vert :DO I = \\vert TO W; 11A(I)=X+Y+3\\textasteriskcenteredI; B(I)=X - Y-3\\textasteriskcenteredI; 12IF 1=1 PUT SKIP(2)EDIT; EDIT(C,X,Y,Z, 13W,V,A(I),B(I)) (COL(20),A(5),COL(30),F(4) , COL(40) , F(4),COL(50),F(4),COL(60) ,F(2), COL(70),E(13,6) COL(85),F (6),COL(95),F(6)); 14ELSE PUT SKIP EDIT(A(I),B(I))(COL(85),F(5), COL(95),F (5)); 15FIND LI; 16GO TO IN; 17NOMORE; END BUGS;", "options": ["Procedural errors and missing elements", "Infinite loops", "Invalid variables", "Syntax errors"], "answer": "A", "solution": "This program reads sets of edit-directed data, performs some calculationsand prints the results. The written program contains the following errors: 1) Statement 1: The procedure has no name 2) Statement 1: OPTION should be OPTIONS 3) Statement 3: There should be a blank between PUT and PAGE. 4) Statement 7: There should be a blank between GO and TO. 5) Statement 9: There is no arithmetic operator be-tween the constant 40 andthe term (Y-2). 6) Statement 10: The 1 has beenmispunchedas\\vert . 7) Statement 11: The minus sign in X-Y is misplaced. 8) Statement 12: The keyword THEN is omitted from the IF statement. 9) Statement 16: There is no statement in the programlabelledIN. 10) Statement 17: BUGS appears nowhere else."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program segment in C to display the following message: Hi from C C is a unique and exciting language\n\nOptions:\nA. main ( ) { printf (\"Hello from C\\textbackslashn\"); printf (\"C is a simple and boring language\"); }\nB. main ( ) { printf (\"Hi from C\\textbackslashn\"); printf (\"C is a challenging and complex language\"); }\nC.             main ( ) { printf (\"Hi from C\"); printf (\"C is a unique and exciting language\"); }\nD. main ( ) { printf (\"Hi from C\\textbackslashn\"); printf (\"C is a unique and exciting language\"); }\n\nAnswer: D\n\nReference Solution:\nTo display the above message the program segment is as follows: main ( ) { printf (\"Hi from C\\textbackslashn\"); printf (\"C is a unique and exciting language\"); } The \\textbackslashn in the firstprintf( ) statement is an escape sequence that causes the output line to be advanced. If it is not in-cluded then the program segment becomes, main ( ) { printf (\"Hi from C\"); printf (\"C is a unique and exciting language); } and will output both messages on the same line as follows: Hi from CC is a unique and exciting language", "ref_id": 4526, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program segment in C to display the following message: Hi from C C is a unique and exciting language", "options": ["main ( ) { printf (\"Hello from C\\textbackslashn\"); printf (\"C is a simple and boring language\"); }", "main ( ) { printf (\"Hi from C\\textbackslashn\"); printf (\"C is a challenging and complex language\"); }", "main ( ) { printf (\"Hi from C\"); printf (\"C is a unique and exciting language\"); }", "main ( ) { printf (\"Hi from C\\textbackslashn\"); printf (\"C is a unique and exciting language\"); }"], "answer": "D", "solution": "To display the above message the program segment is as follows: main ( ) { printf (\"Hi from C\\textbackslashn\"); printf (\"C is a unique and exciting language\"); } The \\textbackslashn in the firstprintf( ) statement is an escape sequence that causes the output line to be advanced. If it is not in-cluded then the program segment becomes, main ( ) { printf (\"Hi from C\"); printf (\"C is a unique and exciting language); } and will output both messages on the same line as follows: Hi from CC is a unique and exciting language"}, "question": "task_1"}}, {"data": {"text": "Question:\nAssuming the same declarations as in Problem 14, write PROCEDURE INSERT (var S1:string; S2:string, p:integer); which inserts string S2 into string S1 after position P.\n\nOptions:\nA. PROCEDURE APPEND (var S1: string; S2 : string)\nB. PROCEDURE ADD (var S1: string; S2 : string)\nC.             PROCEDURE INSERT (var S1: string; S2 : string)\nD. PROCEDURE CONCAT (var S1: string; S2 : string)\n\nAnswer: C\n\nReference Solution:\nThis is a more generalized version of the CONCAT Procedure. First, as usual, we check to see if the array of size 80 can accommodate both strings. If not, we print out the error message. Otherwise, we move last (length 1- p) elements forward by the length of the second string. This prepares space for the insertion of the second string. This operation is accomplished by the first FOR loop. Then, by the second FOR loop, we actually move S2 into S1, starting with position p + 1. Again, note that I - p indicates the cur-rent position of the character in S2 to be copied into S1. The only thing remaining then is to adjust the length of the string S1. PROCEDURE INSERT (var S1: string; S2 : string); VAR I: integer; BEGIN IF (S1.length + S2.length) > strsize then write1n ('insertion impossible-strings too long') ELSE BEGIN FOR I: = S1.length down to p + 1 DO S1.WORD [I+S2.length]:= S1.WORD[I] ; FOR I:= p+1 to p+S2.length DO S1.WORD [I]: =S2.WORD [I-p]; S1.length:=S1.length + S2.length END END;", "ref_id": 4527, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Assuming the same declarations as in Problem 14, write PROCEDURE INSERT (var S1:string; S2:string, p:integer); which inserts string S2 into string S1 after position P.", "options": ["PROCEDURE APPEND (var S1: string; S2 : string)", "PROCEDURE ADD (var S1: string; S2 : string)", "PROCEDURE INSERT (var S1: string; S2 : string)", "PROCEDURE CONCAT (var S1: string; S2 : string)"], "answer": "C", "solution": "This is a more generalized version of the CONCAT Procedure. First, as usual, we check to see if the array of size 80 can accommodate both strings. If not, we print out the error message. Otherwise, we move last (length 1- p) elements forward by the length of the second string. This prepares space for the insertion of the second string. This operation is accomplished by the first FOR loop. Then, by the second FOR loop, we actually move S2 into S1, starting with position p + 1. Again, note that I - p indicates the cur-rent position of the character in S2 to be copied into S1. The only thing remaining then is to adjust the length of the string S1. PROCEDURE INSERT (var S1: string; S2 : string); VAR I: integer; BEGIN IF (S1.length + S2.length) > strsize then write1n ('insertion impossible-strings too long') ELSE BEGIN FOR I: = S1.length down to p + 1 DO S1.WORD [I+S2.length]:= S1.WORD[I] ; FOR I:= p+1 to p+S2.length DO S1.WORD [I]: =S2.WORD [I-p]; S1.length:=S1.length + S2.length END END;"}, "question": "task_1"}}, {"data": {"text": "Question:\nI1I2I3\\cdot\\cdot\\cdot \\cdot\\cdot\\cdot J1J2J3\\cdot\\cdot\\cdot \\cdot\\cdot\\cdot \\cdot\\cdot\\cdot K1K2K3\\cdot\\cdot\\cdot \\cdot\\cdot\\cdot \\cdot\\cdot\\cdot ::: : : :: : : where I_s, J_s, K_s ... are integers, and all rows, columns, and diagonals have the equal integer sums. Write a program to create three 3 \u00d7 3 magic squares using a random number generator. Integers may range from 0 to 100. Use BASIC.\n\nOptions:\nA. INT(RND(100*X))\nB. RND(100*INT(X))\nC.             INT(100*RND(X))\nD. 100*INT(RND(X))\n\nAnswer: C\n\nReference Solution:\nThe statement INT(100\\textasteriskcenteredRND(X)) gives the programmer random integer numbers between 0 and 100. This statement is repeated 3 times to generate the three random integers L, K, J. The magic square is built then on the basis of those numbers by arranging them in the following manner: J + LL - (J+K)K + L K+L - JLJ+L - K L - KJ+K + LL - J Now, if you sum the numbers in rows, columns, and diagonals it will be seen that all the sums are the same and equal to 3L! For example, row 1: (J+L) + L-(J+K) + (K+L) = J + L + L - J - K + K + L = L + L + L = 3L The program looks as follows: 10 LET N = 1 15 LET J = INT(100\\textasteriskcenteredRND(X)) 20 LET K = INT(100\\textasteriskcenteredRND(X)) 25 LET L = INT(100\\textasteriskcenteredRND(X)) 30 LET P1 = J + L 35 LET Q1 = L - (J+K) 40 LET R1 = K +L 45 LET P2 = K + L -J 50 LET Q2 = L 55 LET R2 = J + L - K 60 LET P3 = L - K 65 LET Q3 = J + K + L 70 LET R3 = L - J 75 PRINT P1, Q1, R1 80 PRINT P2, Q2, R2 85 PRINT P3, Q3, R3 90 LET N = N + 1 95 IF N < = 3 THEN 15 100 STOP 105 END", "ref_id": 4528, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "I1I2I3\\cdot\\cdot\\cdot \\cdot\\cdot\\cdot J1J2J3\\cdot\\cdot\\cdot \\cdot\\cdot\\cdot \\cdot\\cdot\\cdot K1K2K3\\cdot\\cdot\\cdot \\cdot\\cdot\\cdot \\cdot\\cdot\\cdot ::: : : :: : : where I_s, J_s, K_s ... are integers, and all rows, columns, and diagonals have the equal integer sums. Write a program to create three 3 \u00d7 3 magic squares using a random number generator. Integers may range from 0 to 100. Use BASIC.", "options": ["INT(RND(100*X))", "RND(100*INT(X))", "INT(100*RND(X))", "100*INT(RND(X))"], "answer": "C", "solution": "The statement INT(100\\textasteriskcenteredRND(X)) gives the programmer random integer numbers between 0 and 100. This statement is repeated 3 times to generate the three random integers L, K, J. The magic square is built then on the basis of those numbers by arranging them in the following manner: J + LL - (J+K)K + L K+L - JLJ+L - K L - KJ+K + LL - J Now, if you sum the numbers in rows, columns, and diagonals it will be seen that all the sums are the same and equal to 3L! For example, row 1: (J+L) + L-(J+K) + (K+L) = J + L + L - J - K + K + L = L + L + L = 3L The program looks as follows: 10 LET N = 1 15 LET J = INT(100\\textasteriskcenteredRND(X)) 20 LET K = INT(100\\textasteriskcenteredRND(X)) 25 LET L = INT(100\\textasteriskcenteredRND(X)) 30 LET P1 = J + L 35 LET Q1 = L - (J+K) 40 LET R1 = K +L 45 LET P2 = K + L -J 50 LET Q2 = L 55 LET R2 = J + L - K 60 LET P3 = L - K 65 LET Q3 = J + K + L 70 LET R3 = L - J 75 PRINT P1, Q1, R1 80 PRINT P2, Q2, R2 85 PRINT P3, Q3, R3 90 LET N = N + 1 95 IF N < = 3 THEN 15 100 STOP 105 END"}, "question": "task_1"}}, {"data": {"text": "Question:\nDesign a program to play a simple game of solitaire. The game should begin with a deal of nine cards, face up. If any two have the same face value, they are covered with two new cards, also face up. This step is repeated until the deck has been .exhausted, except for one card. If this occurs, the dealer wins. If there are no more pairs showing, the dealer loses. The program should determine an approximation to the probabil-ity of winning.\n\nOptions:\nA. The program uses a linked list to represent the cards.\nB. The probabilities of winning or losing are determined by the initial deal of cards.\nC.             The program uses the concept of pointers for shuffling the deck.\nD. The program uses an array to represent the individual cards and utilizes the concept of pseudo-pointers for shuffling the deck. The probabilities of winning or losing are calculated after playing a sufficient number of games.\n\nAnswer: D\n\nReference Solution:\nTo start, we must decide upon how the individual cards are to be represented. We will use an array of 52 com-ponents, the numbers 1, 2, 3, ... representing the Ace, two, three, ... of spades, and the numbers 14, 15, 16, ... repre-senting the Ace, two, three, ... of hearts, and so on. To determine the suit of a particular card, the expression [(CARD(I) - 1)/13] can be used; a quotient of 0 means spades, a 1 means hearts, and so on. We may find the face value of a particular card via the expression [CARD(I) - 13 \u00d7 IS], where ISisthe suit. If this expression equals, say, 11, the card is a Jack. (Brackets signify the integer part of the expres-sions, ) To shuffle the deck, we can use \"pseudo-pointers.\" Start by filling the array CARD with the integers 1 through 52. Then, fill another array, RANPTR, with random digits be-tween 1 and 52, including duplicates. Then the shuffling consists of making interchanges, such as CARD (1) with CARD (RANPTR(1)), CARD (2) with CARD(RANPTR(2)), etc. You can generate a new set of random digits for each game to re-shuffle the deck. The program is presented below. Comments explain some of the major control sections. The probabilities outputted at the end are meaningful only if a sufficient number of games are played. Play 25 games and see what outcomes you get. INTEGER RANPTR, CARD, PILE, CHOICE DIMENSION PILE(52), CARD(52), RANPTR(52) DO 10 N = 1,52 CARD (N) = N 10CONTINUE CGENERATE RANDOM NUMBERS TO SHUFFLE DECK 12DO 15 J = 1,52 RANPTR(J) = INT (52\\textasteriskcenteredRANDOM(X) + 1) ITEMP = CARD(J) CARD(J) = CARD(RANPTR(J)) CARD(RANPTR(J)) = ITEMP 15CONTINUE CTYPE PLAY IF YOU WISH TO CONTINUE 20READ (5,100) CHOICE 100FORMAT(A5) IF(CHOICE.NE.'PLAY') GO TO 95 I = 1 CREPEAT UNTIL I IS GREATER THAN 9 21CONTINUE PILE(I) = CARD(I) I = I + 1 IF(I.LE.9) GO TO 21 25K = 1 26L = K + 1 28IF(PILE(K).NE.PILE(L)) GO TO 30 CTHEN DEAL TWO CARDS TO COVER PAIR PILE(K) = CARD(I) PILE(L) = CARD(I + 1) I = I + 2 IF(I.LT.51) GO TO 25 NGAME = NGAME + 1 NWIN = NWIN + 1 WRITE(5,101) 101FORMAT(1X, 'DEALER WINS!') GO TO 12 CCHECK ALL VALUES OF K AND L L = L + 1 IF(L.LE.9) GO TO 28 K = K + 1 IF(K.LE.8) GO TO 26 NGAME = NGAME + 1 NLOSS = NLOSS + 1 WRITE(5,102) 102FORMAT(1X, 'SORRY, DEALER LOSES.') GO TO 12 95PWIN = FLOAT (NWIN)/FLOAT (NGAME) 95PWIN = FLOAT (NWIN)/FLOAT (NGAME) PLOSS = FLOAT (NLOSS)/FLOAT (NGAME) PLOSS = FLOAT (NLOSS)/FLOAT (NGAME) WRITE(5,103) NGAME, PWIN 103FORMAT(1X, 'PROBABILITY OF WINNING AFTER', 1I5, 'GAMES IS', F5.4) WRITE(5,104) PLOSS 104FORMAT(1X, 'PROBABILITY OF LOSING IS', F5.4) STOP END", "ref_id": 4529, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Design a program to play a simple game of solitaire. The game should begin with a deal of nine cards, face up. If any two have the same face value, they are covered with two new cards, also face up. This step is repeated until the deck has been .exhausted, except for one card. If this occurs, the dealer wins. If there are no more pairs showing, the dealer loses. The program should determine an approximation to the probabil-ity of winning.", "options": ["The program uses a linked list to represent the cards.", "The probabilities of winning or losing are determined by the initial deal of cards.", "The program uses the concept of pointers for shuffling the deck.", "The program uses an array to represent the individual cards and utilizes the concept of pseudo-pointers for shuffling the deck. The probabilities of winning or losing are calculated after playing a sufficient number of games."], "answer": "D", "solution": "To start, we must decide upon how the individual cards are to be represented. We will use an array of 52 com-ponents, the numbers 1, 2, 3, ... representing the Ace, two, three, ... of spades, and the numbers 14, 15, 16, ... repre-senting the Ace, two, three, ... of hearts, and so on. To determine the suit of a particular card, the expression [(CARD(I) - 1)/13] can be used; a quotient of 0 means spades, a 1 means hearts, and so on. We may find the face value of a particular card via the expression [CARD(I) - 13 \u00d7 IS], where ISisthe suit. If this expression equals, say, 11, the card is a Jack. (Brackets signify the integer part of the expres-sions, ) To shuffle the deck, we can use \"pseudo-pointers.\" Start by filling the array CARD with the integers 1 through 52. Then, fill another array, RANPTR, with random digits be-tween 1 and 52, including duplicates. Then the shuffling consists of making interchanges, such as CARD (1) with CARD (RANPTR(1)), CARD (2) with CARD(RANPTR(2)), etc. You can generate a new set of random digits for each game to re-shuffle the deck. The program is presented below. Comments explain some of the major control sections. The probabilities outputted at the end are meaningful only if a sufficient number of games are played. Play 25 games and see what outcomes you get. INTEGER RANPTR, CARD, PILE, CHOICE DIMENSION PILE(52), CARD(52), RANPTR(52) DO 10 N = 1,52 CARD (N) = N 10CONTINUE CGENERATE RANDOM NUMBERS TO SHUFFLE DECK 12DO 15 J = 1,52 RANPTR(J) = INT (52\\textasteriskcenteredRANDOM(X) + 1) ITEMP = CARD(J) CARD(J) = CARD(RANPTR(J)) CARD(RANPTR(J)) = ITEMP 15CONTINUE CTYPE PLAY IF YOU WISH TO CONTINUE 20READ (5,100) CHOICE 100FORMAT(A5) IF(CHOICE.NE.'PLAY') GO TO 95 I = 1 CREPEAT UNTIL I IS GREATER THAN 9 21CONTINUE PILE(I) = CARD(I) I = I + 1 IF(I.LE.9) GO TO 21 25K = 1 26L = K + 1 28IF(PILE(K).NE.PILE(L)) GO TO 30 CTHEN DEAL TWO CARDS TO COVER PAIR PILE(K) = CARD(I) PILE(L) = CARD(I + 1) I = I + 2 IF(I.LT.51) GO TO 25 NGAME = NGAME + 1 NWIN = NWIN + 1 WRITE(5,101) 101FORMAT(1X, 'DEALER WINS!') GO TO 12 CCHECK ALL VALUES OF K AND L L = L + 1 IF(L.LE.9) GO TO 28 K = K + 1 IF(K.LE.8) GO TO 26 NGAME = NGAME + 1 NLOSS = NLOSS + 1 WRITE(5,102) 102FORMAT(1X, 'SORRY, DEALER LOSES.') GO TO 12 95PWIN = FLOAT (NWIN)/FLOAT (NGAME) 95PWIN = FLOAT (NWIN)/FLOAT (NGAME) PLOSS = FLOAT (NLOSS)/FLOAT (NGAME) PLOSS = FLOAT (NLOSS)/FLOAT (NGAME) WRITE(5,103) NGAME, PWIN 103FORMAT(1X, 'PROBABILITY OF WINNING AFTER', 1I5, 'GAMES IS', F5.4) WRITE(5,104) PLOSS 104FORMAT(1X, 'PROBABILITY OF LOSING IS', F5.4) STOP END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a PL/I procedure that reads an integer N > 1 and calculatesthe sequence Y =[ ^N\\sum_i= 1{i(N -i)^2} ] / N The program should output N and the corresponding Y on eachline.\n\nOptions:\nA. N =3Y =0.500; N =11Y =82.500; N =26Y =1300.000\nB. N =2Y =10.500; N =10Y =100.500; N =25Y =2500.000\nC.             N =2Y =0.500; N =10Y =82.500; N =25Y =1300.000\nD. N =2Y =1.500; N =10Y =92.500; N =25Y =1400.000\n\nAnswer: C\n\nReference Solution:\nWe will set up a DO loop to calculate the terms as in-dicated by the summationsymbol, (\\sum). Program control passes to the end of the program whenthe value of N is less than or equal to zero. In this example, we will input N = 2, N = 10, and N = 25. SEQ: PROC OPTIONS (MAIN); DCL Y FIXED (10,3); LOOP: GET DATA (N); / \\textasteriskcentered TEST FOR END OF DATA \\textasteriskcentered / IF N < = 0 THEN GO TO FINISH; / \\textasteriskcentered INITIALIZE Y AND COMPUTE THE SUM \\textasteriskcentered / Y = 0; SUMLOOP: DO J = 1 TO N; Y = Y + J \\textasteriskcentered (N - J) \\textasteriskcentered (N - J); END SUMLOOP; Y = Y/N; / \\textasteriskcentered PRINT ANSWERS \\textasteriskcentered / PUT SKIP DATA (N,Y) ; GO TO LOOP; FINISH: END SEQ; Sample input: N = 2; N = 10; N = 25; N = 0; Sample output: N =2Y =0.500; N =10Y =82.500; N =25Y =1300.000;", "ref_id": 4530, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a PL/I procedure that reads an integer N > 1 and calculatesthe sequence Y =[ ^N\\sum_i= 1{i(N -i)^2} ] / N The program should output N and the corresponding Y on eachline.", "options": ["N =3Y =0.500; N =11Y =82.500; N =26Y =1300.000", "N =2Y =10.500; N =10Y =100.500; N =25Y =2500.000", "N =2Y =0.500; N =10Y =82.500; N =25Y =1300.000", "N =2Y =1.500; N =10Y =92.500; N =25Y =1400.000"], "answer": "C", "solution": "We will set up a DO loop to calculate the terms as in-dicated by the summationsymbol, (\\sum). Program control passes to the end of the program whenthe value of N is less than or equal to zero. In this example, we will input N = 2, N = 10, and N = 25. SEQ: PROC OPTIONS (MAIN); DCL Y FIXED (10,3); LOOP: GET DATA (N); / \\textasteriskcentered TEST FOR END OF DATA \\textasteriskcentered / IF N < = 0 THEN GO TO FINISH; / \\textasteriskcentered INITIALIZE Y AND COMPUTE THE SUM \\textasteriskcentered / Y = 0; SUMLOOP: DO J = 1 TO N; Y = Y + J \\textasteriskcentered (N - J) \\textasteriskcentered (N - J); END SUMLOOP; Y = Y/N; / \\textasteriskcentered PRINT ANSWERS \\textasteriskcentered / PUT SKIP DATA (N,Y) ; GO TO LOOP; FINISH: END SEQ; Sample input: N = 2; N = 10; N = 25; N = 0; Sample output: N =2Y =0.500; N =10Y =82.500; N =25Y =1300.000;"}, "question": "task_1"}}, {"data": {"text": "Question:\na_11x_1 + a_12x2+ a_13x3+ a_14x_4 = y_1 a_21x_1 + a_22x_2 + a_23x_3 + a_24x_4 = y_2 a_31x_1 + a_32x_2 + a_33x_3 + a_34x_4 = y_3 a_41x_1 + a_42x_2 + a_43x_3 + a_44x_4 = y_4 Hint: feel free to make use of built-in matrix instructions.\n\nOptions:\nA. X = (A+1)\bulletY\nB. X = A\bulletY\nC.             X = (A^2)\bulletY\nD. X = (A-1)\bulletY\n\nAnswer: D\n\nReference Solution:\nThe above system of equations can be written in the matrix form as A\\bulletX = Y, and the solution is X = (A-1)\\bulletY, where A is a 4\u00d74 matrix of the coefficients of X's, and both X and Y are 4\u00d71 vectors. The symbol A^-1 stands for the inverse matrix of A. Here is an example of the validity of the above procedure: The system of equation x_1 - x_2 = 5 2x_1 - 3x_2 = 13 is solved to obtain the values of x_1 and x_2: x_1 = 5 + x_2; 2(5 + x_2) -3x_2 = 13; x_2 = (13 - 10) / -1 = -3 \\thereforex_1 = 5 -3 = 2. Now, using the matrix procedure: A = \\mid 1-1 \\mid ;A^-1 =\\mid 3-1 \\midY = \\mid5\\mid \\mid 2-3 \\mid\\mid 2-1 \\mid\\mid 13 \\mid X = (A^-1)\\bullet Y = \\mid 3-1 \\mid \\bullet\\mid5\\mid = \\mid 3\u00d75 + (-1)13 \\mid = \\mid15-13 \\mid \\mid 2-1 \\mid\\mid13\\mid\\mid 2\u00d75 + (-1)13 \\mid\\mid10-13 \\mid X = \\mid 2\\mid \\Rightarrow 7, X_1 = 2, X_2 = -3. \\mid-3 \\mid Both methods yield the same results. The program looks as follows: 10DIM X (4, 1), Y (4, 1), A (4, 4), B (4, 4) 20MAT READ Y 30MAT READ A 40MAT B = INV (A) 50MAT X = B\\textasteriskcenteredY 60MAT PRINT X; 70END", "ref_id": 4531, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "a_11x_1 + a_12x2+ a_13x3+ a_14x_4 = y_1 a_21x_1 + a_22x_2 + a_23x_3 + a_24x_4 = y_2 a_31x_1 + a_32x_2 + a_33x_3 + a_34x_4 = y_3 a_41x_1 + a_42x_2 + a_43x_3 + a_44x_4 = y_4 Hint: feel free to make use of built-in matrix instructions.", "options": ["X = (A+1)\bulletY", "X = A\bulletY", "X = (A^2)\bulletY", "X = (A-1)\bulletY"], "answer": "D", "solution": "The above system of equations can be written in the matrix form as A\\bulletX = Y, and the solution is X = (A-1)\\bulletY, where A is a 4\u00d74 matrix of the coefficients of X's, and both X and Y are 4\u00d71 vectors. The symbol A^-1 stands for the inverse matrix of A. Here is an example of the validity of the above procedure: The system of equation x_1 - x_2 = 5 2x_1 - 3x_2 = 13 is solved to obtain the values of x_1 and x_2: x_1 = 5 + x_2; 2(5 + x_2) -3x_2 = 13; x_2 = (13 - 10) / -1 = -3 \\thereforex_1 = 5 -3 = 2. Now, using the matrix procedure: A = \\mid 1-1 \\mid ;A^-1 =\\mid 3-1 \\midY = \\mid5\\mid \\mid 2-3 \\mid\\mid 2-1 \\mid\\mid 13 \\mid X = (A^-1)\\bullet Y = \\mid 3-1 \\mid \\bullet\\mid5\\mid = \\mid 3\u00d75 + (-1)13 \\mid = \\mid15-13 \\mid \\mid 2-1 \\mid\\mid13\\mid\\mid 2\u00d75 + (-1)13 \\mid\\mid10-13 \\mid X = \\mid 2\\mid \\Rightarrow 7, X_1 = 2, X_2 = -3. \\mid-3 \\mid Both methods yield the same results. The program looks as follows: 10DIM X (4, 1), Y (4, 1), A (4, 4), B (4, 4) 20MAT READ Y 30MAT READ A 40MAT B = INV (A) 50MAT X = B\\textasteriskcenteredY 60MAT PRINT X; 70END"}, "question": "task_1"}}, {"data": {"text": "Question:\nIn BASIC the RND function is used to generate a random number between 0 and 1. What statements would you use to: (a) generate integral random number between 0 and X - 1? (b) generate integral random number between 1 and X? (c) simulate the toss of a cubical die? (d) simulate a binary random choice taking values 1 or 2?\n\nOptions:\nA. (a) LET T = INT(X+RND), (b) LET V = INT(X+RND), (c) LET W = INT(6+RND), (d) LET N = INT(2+RND)\nB. (a) LET T = INT(X*RND), (b) LET V = INT(1 + X*RND), (c) LET W = INT(1 + 6*RND), (d) LET N = INT(1 + 2*RND)\nC.             (a) LET T = RND(X), (b) LET V = 1+RND(X), (c) LET W = 1+RND(6), (d) LET N = 1+RND(2)\nD. (a) LET T = INT(RND/X), (b) LET V = INT(1 + RND/X), (c) LET W = INT(1 + RND/6), (d) LET N = INT(1 + RND/2)\n\nAnswer: B\n\nReference Solution:\n(a) 1\\O LET T = INT(X\\textasteriskcenteredRND) (b) 2\\O LET V = INT(1 + X\\textasteriskcenteredRND) (c) 3\\O LET W = INT(1 + 6\\textasteriskcenteredRND) (d) 4\\O LET N = INT(1 + 2\\textasteriskcenteredRND)", "ref_id": 4532, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "In BASIC the RND function is used to generate a random number between 0 and 1. What statements would you use to: (a) generate integral random number between 0 and X - 1? (b) generate integral random number between 1 and X? (c) simulate the toss of a cubical die? (d) simulate a binary random choice taking values 1 or 2?", "options": ["(a) LET T = INT(X+RND), (b) LET V = INT(X+RND), (c) LET W = INT(6+RND), (d) LET N = INT(2+RND)", "(a) LET T = INT(X*RND), (b) LET V = INT(1 + X*RND), (c) LET W = INT(1 + 6*RND), (d) LET N = INT(1 + 2*RND)", "(a) LET T = RND(X), (b) LET V = 1+RND(X), (c) LET W = 1+RND(6), (d) LET N = 1+RND(2)", "(a) LET T = INT(RND/X), (b) LET V = INT(1 + RND/X), (c) LET W = INT(1 + RND/6), (d) LET N = INT(1 + RND/2)"], "answer": "B", "solution": "(a) 1\\O LET T = INT(X\\textasteriskcenteredRND) (b) 2\\O LET V = INT(1 + X\\textasteriskcenteredRND) (c) 3\\O LET W = INT(1 + 6\\textasteriskcenteredRND) (d) 4\\O LET N = INT(1 + 2\\textasteriskcenteredRND)"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a BASIC program which generates and prints out an Inputted number of random digits (0 through 9 inclusive).\n\nOptions:\nA. INT(RND)/10\nB. 10*RND+INT\nC.             RND*10\nD. INT(10*RND)\n\nAnswer: D\n\nReference Solution:\nWe use the RND function. [Some texts use RND with an argument; others use no argument. Consult your BASIC manual for details of your particular implementation.] Since 0 < RND <1, 0 < 10\\textasteriskcenteredRND < 10, and thus INT(10\\textasteriskcenteredRND) takes values 0, 1, 2, ..., 9 1\\O\\O REM RANDOM DIGITS 11\\O PRINT \"HOW M&NY RANDOM DIGITS DO YOU WANT\"; 12\\O INPUT N 13\\O PRINT 14\\O FOR K = 1 TO N 15\\O PRINT INT(1\\O\\textasteriskcenteredRND) 16\\O NEXT K 17\\O PRINT 18\\O GO TO 11\\O 999 END", "ref_id": 4533, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a BASIC program which generates and prints out an Inputted number of random digits (0 through 9 inclusive).", "options": ["INT(RND)/10", "10*RND+INT", "RND*10", "INT(10*RND)"], "answer": "D", "solution": "We use the RND function. [Some texts use RND with an argument; others use no argument. Consult your BASIC manual for details of your particular implementation.] Since 0 < RND <1, 0 < 10\\textasteriskcenteredRND < 10, and thus INT(10\\textasteriskcenteredRND) takes values 0, 1, 2, ..., 9 1\\O\\O REM RANDOM DIGITS 11\\O PRINT \"HOW M&NY RANDOM DIGITS DO YOU WANT\"; 12\\O INPUT N 13\\O PRINT 14\\O FOR K = 1 TO N 15\\O PRINT INT(1\\O\\textasteriskcenteredRND) 16\\O NEXT K 17\\O PRINT 18\\O GO TO 11\\O 999 END"}, "question": "task_1"}}, {"data": {"text": "Question:\nIf we have a list of tabular values represented by a one-dimensionalar-ray, then the first differences of the list areformed by subtracting each element except the last [sincenothing follows the last element] from the element immediatelyfollowing it. Suppose we have a one--dimensionalarray named X that contains 50 elements. Compute the 49 elements of another array named DX from DX(I) = X(I + 1) - X(I) I = 1,2,...,49. Write a program segment to perform this calculation.\n\nOptions:\nA. DIMENSIONX(50), DX(49) DO 50 I = 1, 49 50DX(I) = X(I + 1) - X(I) STOP END\nB. DIMENSIONX(50), DX(49) DO 50 I = 1, 50 50DX(I) = X(I + 1) - X(I) STOP END\nC.             DIMENSIONX(50), DX(50) DO 50 I = 1, 49 50DX(I) = X(I) - X(I+1) STOP END\nD. DIMENSIONX(49), DX(50) DO 50 I = 1, 49 50DX(I) = X(I + 1) - X(I) STOP END\n\nAnswer: A\n\nReference Solution:\nDimension both arrays according to the given dimensions and then writea simple DO loop to define the difference array DX. Thus we get: DIMENSIONX(50), DX(49) DO 50 I = 1, 49 50DX(I) = X(I + 1) - X(I) STOP END", "ref_id": 4534, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "If we have a list of tabular values represented by a one-dimensionalar-ray, then the first differences of the list areformed by subtracting each element except the last [sincenothing follows the last element] from the element immediatelyfollowing it. Suppose we have a one--dimensionalarray named X that contains 50 elements. Compute the 49 elements of another array named DX from DX(I) = X(I + 1) - X(I) I = 1,2,...,49. Write a program segment to perform this calculation.", "options": ["DIMENSIONX(50), DX(49) DO 50 I = 1, 49 50DX(I) = X(I + 1) - X(I) STOP END", "DIMENSIONX(50), DX(49) DO 50 I = 1, 50 50DX(I) = X(I + 1) - X(I) STOP END", "DIMENSIONX(50), DX(50) DO 50 I = 1, 49 50DX(I) = X(I) - X(I+1) STOP END", "DIMENSIONX(49), DX(50) DO 50 I = 1, 49 50DX(I) = X(I + 1) - X(I) STOP END"], "answer": "A", "solution": "Dimension both arrays according to the given dimensions and then writea simple DO loop to define the difference array DX. Thus we get: DIMENSIONX(50), DX(49) DO 50 I = 1, 49 50DX(I) = X(I + 1) - X(I) STOP END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite an APL program to solve the following system of equations in three unknowns using Cramer's Rule. x + y + z = 6 x + y -2z = -3 2x + y - z = 1 Also, show an easier method of solving the above system using the symbol [+] from APL.\n\nOptions:\nA. A \\leftarrow 6-31 B \\leftarrow 33\\rho 11111-2 3 1 -1 A[\\div] B\nB. A \\leftarrow 6-31 B \\leftarrow 33\\rho 11111-2 2 1 -1 A[\\div] B\nC.             A \\leftarrow 3-61 B \\leftarrow 33\\rho 11112-2 2 1 -1 A[\\div] B\nD. A \\leftarrow 6-31 B \\leftarrow 33\\rho 11111-3 2 1 -1 A[\\div] B\n\nAnswer: B\n\nReference Solution:\nThe determinant A of the form \\mida11a_12a_13 \\mid A=\\mida_21a_22a_23 \\mid \\mida_31a_32a_33 \\mid can be evaluated as follows: \\vertA\\vert = a11a22a_33 + a12a_23 a_31 + a13a_21 a_32 -a11a23a_32 -a12a_21 a_33 -a13a_22 a_31 According to Cramer's Rule, the system a_1x + b_1y + c_1z = d_1 a_2x + b_2y + c_2z = d2 a_3x + b_3y + c_3z = d_3 has the following solutions in term of determinants: d_1b_1c1a_1d_1c_1a_1b1d_1 d_2b_2c2a_2d_2c_2a_2b2d_2 x =d_3b_3c_3,y =a_3d_3c_3,z =a_3b3d_3 a_1b1c_1a_1b1c_1a_1b1c_1 a_2b2c_2a_2b2c_2a_2b2c2 a_3b3c_3a_3b3c_3a_3b3c3 Thus, a defined function for the evaluation of a determinant must be developed first: \\nabla Z\\leftarrow DeterminantX [1]A \\leftarrow 33\\rhoC [2]Z \\leftarrow ((A [1; 1] \u00d7 A [2; 2] \u00d7 A [3; 3]) + (A [1; 2] \u00d7 A [2; 3] \u00d7 A [3; 1]) + (A [1; 3] \u00d7 A [2; 1] \u00d7 A [3; 2]) [3]Z \\leftarrow Z-(A[1; 1] \u00d7 A [2; 3] \u00d7 A [3; 2]) + (A_\\nabla [1; 2] \u00d7 A [2; 1] \u00d7 A [3; 3]) + (A [1; 3] \u00d7 A [2; 2] \u00d7 A [3; 1]) Note that this defined function comes directly from the method of evaluation of the determinant explained previously. The following function computes the values of x, y, z. \\nabla Solution [1]'Enter the coefficients and constant' [2]So \\leftarrow 34\\rho [] [3]D \\leftarrow E \\leftarrow F 33\\uparrow So [4]R \\leftarrow DeterminantD [5]\\rightarrow (R = 0) / END [6]X \\leftarrow [Determinant D [; 1] \\leftarrow So [; 4]] \\div R [7]Y \\leftarrow [Determinant E [; 2] \\leftarrow So [; 4] \\div R [8]Z \\leftarrow [Determinant F [; 3] \\leftarrow So [; 4] \\div R [9]'The Solution is: ' ; x, y, z [10]\\rightarrow 0 [11]END: \"No unique solution \" [12]\\nabla Note that the function solution uses the function Determinant in steps [4], [6], [7] and [8]. Applied to the given system of equations x + y + z = 6 x + y - 2z = -3 2x + y - z = 1 The function solution works as follows:The coefficient and values of system's equations 111611-2-321-11. are entered first; Step [2] reshapes the vector: \\mid 1116 \\mid So =\\mid 11-2-3 \\mid \\mid 21-11 \\mid Step [3] takes the 3 \u00d7 3 matrix from So : \\mid 111 \\mid D =\\mid 11-2 \\mid \\mid 21-1 \\mid Step [4] computes the determinant of D. Steps [6], [7], and [8] are all very similar. The fourth column of So is replaced with the appropriate column of D. [For x, it is the first column, for y, it is the second column, for z, it is the third column.] Dividing the determinants of D by R will yield the appropriate solutions. The symbols A [\\div] B are used in APL for solving systems of equations. A is a vector that contains the constant term (value) from each equation in the system. B is a matrix that contains all the coefficients of the system's variables. ([\\div] is formed by typing in [], backspacing, and typing in \\div ). To solve the given system, (1), one just types the following statements: A \\leftarrow 6-31 B \\leftarrow 33\\rho 11111-2 2 1 -1 A[\\div] B.", "ref_id": 4535, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write an APL program to solve the following system of equations in three unknowns using Cramer's Rule. x + y + z = 6 x + y -2z = -3 2x + y - z = 1 Also, show an easier method of solving the above system using the symbol [+] from APL.", "options": ["A \\leftarrow 6-31 B \\leftarrow 33\\rho 11111-2 3 1 -1 A[\\div] B", "A \\leftarrow 6-31 B \\leftarrow 33\\rho 11111-2 2 1 -1 A[\\div] B", "A \\leftarrow 3-61 B \\leftarrow 33\\rho 11112-2 2 1 -1 A[\\div] B", "A \\leftarrow 6-31 B \\leftarrow 33\\rho 11111-3 2 1 -1 A[\\div] B"], "answer": "B", "solution": "The determinant A of the form \\mida11a_12a_13 \\mid A=\\mida_21a_22a_23 \\mid \\mida_31a_32a_33 \\mid can be evaluated as follows: \\vertA\\vert = a11a22a_33 + a12a_23 a_31 + a13a_21 a_32 -a11a23a_32 -a12a_21 a_33 -a13a_22 a_31 According to Cramer's Rule, the system a_1x + b_1y + c_1z = d_1 a_2x + b_2y + c_2z = d2 a_3x + b_3y + c_3z = d_3 has the following solutions in term of determinants: d_1b_1c1a_1d_1c_1a_1b1d_1 d_2b_2c2a_2d_2c_2a_2b2d_2 x =d_3b_3c_3,y =a_3d_3c_3,z =a_3b3d_3 a_1b1c_1a_1b1c_1a_1b1c_1 a_2b2c_2a_2b2c_2a_2b2c2 a_3b3c_3a_3b3c_3a_3b3c3 Thus, a defined function for the evaluation of a determinant must be developed first: \\nabla Z\\leftarrow DeterminantX [1]A \\leftarrow 33\\rhoC [2]Z \\leftarrow ((A [1; 1] \u00d7 A [2; 2] \u00d7 A [3; 3]) + (A [1; 2] \u00d7 A [2; 3] \u00d7 A [3; 1]) + (A [1; 3] \u00d7 A [2; 1] \u00d7 A [3; 2]) [3]Z \\leftarrow Z-(A[1; 1] \u00d7 A [2; 3] \u00d7 A [3; 2]) + (A_\\nabla [1; 2] \u00d7 A [2; 1] \u00d7 A [3; 3]) + (A [1; 3] \u00d7 A [2; 2] \u00d7 A [3; 1]) Note that this defined function comes directly from the method of evaluation of the determinant explained previously. The following function computes the values of x, y, z. \\nabla Solution [1]'Enter the coefficients and constant' [2]So \\leftarrow 34\\rho [] [3]D \\leftarrow E \\leftarrow F 33\\uparrow So [4]R \\leftarrow DeterminantD [5]\\rightarrow (R = 0) / END [6]X \\leftarrow [Determinant D [; 1] \\leftarrow So [; 4]] \\div R [7]Y \\leftarrow [Determinant E [; 2] \\leftarrow So [; 4] \\div R [8]Z \\leftarrow [Determinant F [; 3] \\leftarrow So [; 4] \\div R [9]'The Solution is: ' ; x, y, z [10]\\rightarrow 0 [11]END: \"No unique solution \" [12]\\nabla Note that the function solution uses the function Determinant in steps [4], [6], [7] and [8]. Applied to the given system of equations x + y + z = 6 x + y - 2z = -3 2x + y - z = 1 The function solution works as follows:The coefficient and values of system's equations 111611-2-321-11. are entered first; Step [2] reshapes the vector: \\mid 1116 \\mid So =\\mid 11-2-3 \\mid \\mid 21-11 \\mid Step [3] takes the 3 \u00d7 3 matrix from So : \\mid 111 \\mid D =\\mid 11-2 \\mid \\mid 21-1 \\mid Step [4] computes the determinant of D. Steps [6], [7], and [8] are all very similar. The fourth column of So is replaced with the appropriate column of D. [For x, it is the first column, for y, it is the second column, for z, it is the third column.] Dividing the determinants of D by R will yield the appropriate solutions. The symbols A [\\div] B are used in APL for solving systems of equations. A is a vector that contains the constant term (value) from each equation in the system. B is a matrix that contains all the coefficients of the system's variables. ([\\div] is formed by typing in [], backspacing, and typing in \\div ). To solve the given system, (1), one just types the following statements: A \\leftarrow 6-31 B \\leftarrow 33\\rho 11111-2 2 1 -1 A[\\div] B."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a Fortran program to calculate the odds of winning in a game of craps.\n\nOptions:\nA. A program using only one function to simulate the entire game\nB. A program using four function subprograms\nC.             A Fortran program without using random numbers\nD. A Fortran program using three function subprograms, one to generate random numbers, one to simulate the throw of dice, and one to simulate a sequence of throws\n\nAnswer: D\n\nReference Solution:\nCraps is played with a pair of dice. The rules are as follows: 1) If, on his first throw a player throws a 7 or 11 he wins the bet. 2) If, on his first throw, a player throws a 2, 3, or 12 he loses the bet. 3) If, on his first throw, a player throws any of the re-maining points he continues to throw: a) If he obtains the same score as on the first throw before throwing a 7, he wins. b) If he throws a 7 before obtaining the same score as on the first throw, he loses. The program is written using a function to generate ran-dom numbers arising out of a uniform distribution on ]0,1[. Once the random number generator has been created, an-other function subprogram uses it to obtain two random num-bers between zero and 1. These represent the throw of the dice as follows: X\\in [0, 1/6] (1/6, 2/6](2/6, 3/6] (3/6, 4/6] (4/6, 5/6] (5/6. 1] V (x) 123456 Thus X = .45820000 corresponds to a spot value of 3. A single throw of the dice is obtained by adding the two func-tional values of X. Finally, one sequence of throws result-ing in either a win or a loss will be done by a third func-tion subprogram. In the program, note the following: 1)The number of games is G. 2)The seed for the random number generator is KSEED. 10READ(5,100)G, KSEED, IOUT WRITE(6,200)G, KSEED X = XRAND(KSEED) CGENERATE G RANDOM PLAYS KSUM = 0 DO 15 I = 1,G K = KSCORE(O) KSUM = KSUM + K IF (IOUT. EQ. 1) WRITE(6,300)I, K 15CONTINUE CCALCULATE FINAL PERCENTAGE OF WINS XNUM = FLOAT(KSUM) XDENOM = FLOAT(G) FRACT = XNUM/XDENOM WRITE(6,400)G, FRACT 100FORMAT(3110) 200FORMAT(41H1 COMPUTER SIMULATION OF 1A GAME OF CRAPS/,25H0 SIMULATION 2BASED UPON, I5, 13H RANDOM PLAYS/, 39H0 KSEED =, I10//) 300FORMAT(10X, 2HI =, I5, 10X, 7HKSCORE = 1I1) 400FORMAT(3 2H0 THE PERCENTAGE OF WINS 1AFTER, I5, 10H PLAYS IS, F8.6) GO TO 10 END FUNCTION KSCORE(KSEED) CTHIS SUBPROGRAM GENERATES THE OUTCOME OF CONE PLAY OF CRAPS. KSCORE = 0 IMPLIES A CLOSS AND KSCORE = 1 IMPLIES A WIN. K = KTOSS(KSEED) IF ((K.EQ.7).OR.(K.EQ.11)) GO TO 2 IF((K.EQ.2).OR.(K.EQ.3).OR.(K.EQ.12)) GO TO 3 CIF K DOES NOT EQUAL 2, 3, 12, 7 OR 11. CTHE PLAY CONTINUES G = K 10K = KTOSS(KSEED) IF(K.EQ.G) GO TO 2 IF(K.EQ.7) GO TO 3 GO TO 10 2KSCORE = 1 RETURN 3KSCORE = 0 RETURN END FUNCTION KTOSS(KSEED) CTHIS FUNCTION GENERATES THE OUTCOME OF A CRANDOM TOSS OF TWO DICE KTOSS = 0 DO 10 I = 1,2 X = XRAND(KSEED) IF(X.GT. 0.1666667) GO TO 1 KTOSS = KTOSS + 1 GO TO 10 IF(X.GT. 0.33333333) GO TO 2 KTOSS = KTOSS + 2 GO TO 10 2IF(X.GT. 0.5) GO TO 3 KTOSS = KTOSS + 3 GO TO 10 3IF(X.GT. 0.6666667) GO TO 4 KTOSS = KTOSS + 4 GO TO 10 4IF(X.GT. 0.8333333) GO TO 5 KTOSS = KTOSS + 5 GO TO 10 5KTOSS = KTOSS + 6 10CONTINUE RETURN END FUNCTION XRAND(KX) CTHIS FUNCTION GENERATES A UNIFORMLY CDISTRIBUTED RANDOM NUMBER BETWEEN ZERO CAND ONE. IF(KX. GT. 0) IX = KX IY = 65539 \\textasteriskcenteredIX IF(IY.LT.0) IY = IY + 2147483647 + 1 XRAND = .4656613E - 9\\textasteriskcenteredFLOAT(IY) IX = IY RETURN END", "ref_id": 4536, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a Fortran program to calculate the odds of winning in a game of craps.", "options": ["A program using only one function to simulate the entire game", "A program using four function subprograms", "A Fortran program without using random numbers", "A Fortran program using three function subprograms, one to generate random numbers, one to simulate the throw of dice, and one to simulate a sequence of throws"], "answer": "D", "solution": "Craps is played with a pair of dice. The rules are as follows: 1) If, on his first throw a player throws a 7 or 11 he wins the bet. 2) If, on his first throw, a player throws a 2, 3, or 12 he loses the bet. 3) If, on his first throw, a player throws any of the re-maining points he continues to throw: a) If he obtains the same score as on the first throw before throwing a 7, he wins. b) If he throws a 7 before obtaining the same score as on the first throw, he loses. The program is written using a function to generate ran-dom numbers arising out of a uniform distribution on ]0,1[. Once the random number generator has been created, an-other function subprogram uses it to obtain two random num-bers between zero and 1. These represent the throw of the dice as follows: X\\in [0, 1/6] (1/6, 2/6](2/6, 3/6] (3/6, 4/6] (4/6, 5/6] (5/6. 1] V (x) 123456 Thus X = .45820000 corresponds to a spot value of 3. A single throw of the dice is obtained by adding the two func-tional values of X. Finally, one sequence of throws result-ing in either a win or a loss will be done by a third func-tion subprogram. In the program, note the following: 1)The number of games is G. 2)The seed for the random number generator is KSEED. 10READ(5,100)G, KSEED, IOUT WRITE(6,200)G, KSEED X = XRAND(KSEED) CGENERATE G RANDOM PLAYS KSUM = 0 DO 15 I = 1,G K = KSCORE(O) KSUM = KSUM + K IF (IOUT. EQ. 1) WRITE(6,300)I, K 15CONTINUE CCALCULATE FINAL PERCENTAGE OF WINS XNUM = FLOAT(KSUM) XDENOM = FLOAT(G) FRACT = XNUM/XDENOM WRITE(6,400)G, FRACT 100FORMAT(3110) 200FORMAT(41H1 COMPUTER SIMULATION OF 1A GAME OF CRAPS/,25H0 SIMULATION 2BASED UPON, I5, 13H RANDOM PLAYS/, 39H0 KSEED =, I10//) 300FORMAT(10X, 2HI =, I5, 10X, 7HKSCORE = 1I1) 400FORMAT(3 2H0 THE PERCENTAGE OF WINS 1AFTER, I5, 10H PLAYS IS, F8.6) GO TO 10 END FUNCTION KSCORE(KSEED) CTHIS SUBPROGRAM GENERATES THE OUTCOME OF CONE PLAY OF CRAPS. KSCORE = 0 IMPLIES A CLOSS AND KSCORE = 1 IMPLIES A WIN. K = KTOSS(KSEED) IF ((K.EQ.7).OR.(K.EQ.11)) GO TO 2 IF((K.EQ.2).OR.(K.EQ.3).OR.(K.EQ.12)) GO TO 3 CIF K DOES NOT EQUAL 2, 3, 12, 7 OR 11. CTHE PLAY CONTINUES G = K 10K = KTOSS(KSEED) IF(K.EQ.G) GO TO 2 IF(K.EQ.7) GO TO 3 GO TO 10 2KSCORE = 1 RETURN 3KSCORE = 0 RETURN END FUNCTION KTOSS(KSEED) CTHIS FUNCTION GENERATES THE OUTCOME OF A CRANDOM TOSS OF TWO DICE KTOSS = 0 DO 10 I = 1,2 X = XRAND(KSEED) IF(X.GT. 0.1666667) GO TO 1 KTOSS = KTOSS + 1 GO TO 10 IF(X.GT. 0.33333333) GO TO 2 KTOSS = KTOSS + 2 GO TO 10 2IF(X.GT. 0.5) GO TO 3 KTOSS = KTOSS + 3 GO TO 10 3IF(X.GT. 0.6666667) GO TO 4 KTOSS = KTOSS + 4 GO TO 10 4IF(X.GT. 0.8333333) GO TO 5 KTOSS = KTOSS + 5 GO TO 10 5KTOSS = KTOSS + 6 10CONTINUE RETURN END FUNCTION XRAND(KX) CTHIS FUNCTION GENERATES A UNIFORMLY CDISTRIBUTED RANDOM NUMBER BETWEEN ZERO CAND ONE. IF(KX. GT. 0) IX = KX IY = 65539 \\textasteriskcenteredIX IF(IY.LT.0) IY = IY + 2147483647 + 1 XRAND = .4656613E - 9\\textasteriskcenteredFLOAT(IY) IX = IY RETURN END"}, "question": "task_1"}}, {"data": {"text": "Question:\nAssuming the same declarations as in Problem 14, write PROCEDURECONCAT(S1,S2:string;varS3:string) which concatenates strings S1 and S2 and puts the result in S3.\n\nOptions:\nA. S3 = S1.length + S2.length;\nB. S3 = S1 + S2;\nC.             PROCEDUREC0NCAT(SI,S2:string:VAR S3:string); Var I : integer; BEGIN IF( S1.length + S2.length) >strsizeTHEN write1n ('concatenation impossible-strings too long') ELSE BEGIN FORI: =1 TO S1.length DO S3[I]: =SI[I]; FORI: =1 TO S2\bulletlength DO S3 [S1 \textbullet length + I] := S2[I] ; END END;\nD. PROCEDURE CONCAT(S1,S2:string;VAR S3:string); BEGIN IF(S1 + S2) > 80 THEN write1n ('concatenation impossible-strings too long') ELSE S3 = S1 + S2; END;\n\nAnswer: C\n\nReference Solution:\nTo concatenate strings S1 and S2 means to create a new string which consists of S1 and S2 appended to it. In the following program, the lengths of the two strings are first added to see if the resulting string could fit in the array \"housing\" it, which can hold only 80 characters. If this is the case , S3 is first set to S1, and then, starting with position S1.length+1, the significant characters of S2 are copied into S3. PROCEDUREC0NCAT(SI,S2:string:VAR S3:string); Var I : integer; BEGIN IF( S1.length + S2.length) >strsizeTHEN write1n ('concatenation impossible-strings too long') ELSE BEGIN FORI: =1 TO S1.length DO S3\\bulletWord [I]: =SI\\bulletWord[I]; FORI: =1 TO S2\\bulletlength DO S3 \\bullet Word [S1 \\textbullet length + I] := S2\\bulletWord [I] ; END END;", "ref_id": 4537, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Assuming the same declarations as in Problem 14, write PROCEDURECONCAT(S1,S2:string;varS3:string) which concatenates strings S1 and S2 and puts the result in S3.", "options": ["S3 = S1.length + S2.length;", "S3 = S1 + S2;", "PROCEDUREC0NCAT(SI,S2:string:VAR S3:string); Var I : integer; BEGIN IF( S1.length + S2.length) >strsizeTHEN write1n ('concatenation impossible-strings too long') ELSE BEGIN FORI: =1 TO S1.length DO S3[I]: =SI[I]; FORI: =1 TO S2\bulletlength DO S3 [S1 \textbullet length + I] := S2[I] ; END END;", "PROCEDURE CONCAT(S1,S2:string;VAR S3:string); BEGIN IF(S1 + S2) > 80 THEN write1n ('concatenation impossible-strings too long') ELSE S3 = S1 + S2; END;"], "answer": "C", "solution": "To concatenate strings S1 and S2 means to create a new string which consists of S1 and S2 appended to it. In the following program, the lengths of the two strings are first added to see if the resulting string could fit in the array \"housing\" it, which can hold only 80 characters. If this is the case , S3 is first set to S1, and then, starting with position S1.length+1, the significant characters of S2 are copied into S3. PROCEDUREC0NCAT(SI,S2:string:VAR S3:string); Var I : integer; BEGIN IF( S1.length + S2.length) >strsizeTHEN write1n ('concatenation impossible-strings too long') ELSE BEGIN FORI: =1 TO S1.length DO S3\\bulletWord [I]: =SI\\bulletWord[I]; FORI: =1 TO S2\\bulletlength DO S3 \\bullet Word [S1 \\textbullet length + I] := S2\\bulletWord [I] ; END END;"}, "question": "task_1"}}, {"data": {"text": "Question:\nExplain structures in C. Give an example and show how they can be referenced.\n\nOptions:\nA. Structures in C are created by a struct statement. It provides a format for future variable declarations. The variable created that will use the structure students is called stud. We can reference individual students as stud [0].name, stud [0].id, and stud [0].gpa.\nB. The variable created that will use the structure students is called students.\nC.             We can reference individual students as stud.name, stud.id, and stud.gpa.\nD. Structures in C are created by a typedef statement.\n\nAnswer: A\n\nReference Solution:\nStructures in C are created by astructstatement. It is similar to the typedef statement in the sense that it does not create a variable we can use but provides a format for future variable declarations. Suppose we want to create a structure of students in which we want to store their name, id and theirgpa. The following format is used. #define MAX_NAME 30 #define MAX_ID 10 #define NUMBER _ of _ STUDENTS 100 structstudents { char name [MAX_NAME]; char id [MAX_ID]; float gpa; } stud[NUMBER _ of _ STUDENTS]; In the above declaration stud is the variable created that will use the structure students. Students in this case are called a tag and each subfield within the structure i.e. name, id,gpa, etc., are called a member. We can also define the variableNYCstudof type students for example, structstudentsNYCstud; We can reference individual students in the following manner. stud [O].name; stud [0].id; stud [0].gpa; Thus if we want to printgpaof all students along with their names then for(i= 0;i< NUMBER _ of _ STUDENTS; ++i) printf(\"%s%1.1f\\textbackslashn\", stud [i].name, stud [i].gpa); prints the name andgpaof each student.", "ref_id": 4538, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Explain structures in C. Give an example and show how they can be referenced.", "options": ["Structures in C are created by a struct statement. It provides a format for future variable declarations. The variable created that will use the structure students is called stud. We can reference individual students as stud [0].name, stud [0].id, and stud [0].gpa.", "The variable created that will use the structure students is called students.", "We can reference individual students as stud.name, stud.id, and stud.gpa.", "Structures in C are created by a typedef statement."], "answer": "A", "solution": "Structures in C are created by astructstatement. It is similar to the typedef statement in the sense that it does not create a variable we can use but provides a format for future variable declarations. Suppose we want to create a structure of students in which we want to store their name, id and theirgpa. The following format is used. #define MAX_NAME 30 #define MAX_ID 10 #define NUMBER _ of _ STUDENTS 100 structstudents { char name [MAX_NAME]; char id [MAX_ID]; float gpa; } stud[NUMBER _ of _ STUDENTS]; In the above declaration stud is the variable created that will use the structure students. Students in this case are called a tag and each subfield within the structure i.e. name, id,gpa, etc., are called a member. We can also define the variableNYCstudof type students for example, structstudentsNYCstud; We can reference individual students in the following manner. stud [O].name; stud [0].id; stud [0].gpa; Thus if we want to printgpaof all students along with their names then for(i= 0;i< NUMBER _ of _ STUDENTS; ++i) printf(\"%s%1.1f\\textbackslashn\", stud [i].name, stud [i].gpa); prints the name andgpaof each student."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a skeletal format of C programs.\n\nOptions:\nA. [variable declarations] [externals] main ( ) { [program conditions] } [additional functions]\nB. [constant declarations] [externals] main ( ) { [program statements] } [additional functions]\nC.             [constant declarations] [internals] main ( ) { [program statements] } [additional methods]\nD. [variables] [functions] main ( ) { [program logic] } [additional classes]\n\nAnswer: B\n\nReference Solution:\nThe following figure provides a skeletal format of C programs. The terms appearing within the square brackets, [], are optional. They can be omitted from the programs if they are not required. [constant declarations] [externals] main ( ) { [program statements] } [additional functions]", "ref_id": 4539, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a skeletal format of C programs.", "options": ["[variable declarations] [externals] main ( ) { [program conditions] } [additional functions]", "[constant declarations] [externals] main ( ) { [program statements] } [additional functions]", "[constant declarations] [internals] main ( ) { [program statements] } [additional methods]", "[variables] [functions] main ( ) { [program logic] } [additional classes]"], "answer": "B", "solution": "The following figure provides a skeletal format of C programs. The terms appearing within the square brackets, [], are optional. They can be omitted from the programs if they are not required. [constant declarations] [externals] main ( ) { [program statements] } [additional functions]"}, "question": "task_1"}}, {"data": {"text": "Question:\nGive a brief summary of various types of operating systems.\n\nOptions:\nA. Client-Server, Peer-to-Peer, Hybrid, Cloud\nB. Monolithic, Microkernel, Exokernel, Hybrid\nC.             Single-user, Multi-user, Multiprocessing, Multitasking\nD. Batch, Interactive, Time-shared, Real-Time, Distributed\n\nAnswer: D\n\nReference Solution:\nBatch: Runs a collection of jobs sequentially with little or no interaction with the user. Good for large jobs such as automatic generation of monthly reports. Interactive : Composed of many short transactions where the result of the next transaction depends on the current one. The user is informed of the result (normal completion, error) at the end of each transaction and takes the appropriate steps accord-ingly. Time-shared : Uses multiprogramming and CPU scheduling where each job (or process) is given a small time quantum to allow interactive use of the computer by multiple users. Usually, a command processor is provided (Job Control Language-JCL, Shell, Digital Command Language- DCL) for interpreting the commands entered from the terminals or consoles . Real-Time : The system must respond (a program must complete the execution ) within a predetermined (fixed) amount of time for correct function . Often used for dedicated (non time-shared) applications with priorities assigned to jobs as required. Distributed : Distributes the computational load among several CPUs (processors) that do not share common clock or memory. Processors communicate with each other using high-speed buses within a small area (aroom or cabinet) in tightly-coupled sys-tems. The communication takes place via telephone lines or net-work in loosely-coupled systems.", "ref_id": 4540, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Give a brief summary of various types of operating systems.", "options": ["Client-Server, Peer-to-Peer, Hybrid, Cloud", "Monolithic, Microkernel, Exokernel, Hybrid", "Single-user, Multi-user, Multiprocessing, Multitasking", "Batch, Interactive, Time-shared, Real-Time, Distributed"], "answer": "D", "solution": "Batch: Runs a collection of jobs sequentially with little or no interaction with the user. Good for large jobs such as automatic generation of monthly reports. Interactive : Composed of many short transactions where the result of the next transaction depends on the current one. The user is informed of the result (normal completion, error) at the end of each transaction and takes the appropriate steps accord-ingly. Time-shared : Uses multiprogramming and CPU scheduling where each job (or process) is given a small time quantum to allow interactive use of the computer by multiple users. Usually, a command processor is provided (Job Control Language-JCL, Shell, Digital Command Language- DCL) for interpreting the commands entered from the terminals or consoles . Real-Time : The system must respond (a program must complete the execution ) within a predetermined (fixed) amount of time for correct function . Often used for dedicated (non time-shared) applications with priorities assigned to jobs as required. Distributed : Distributes the computational load among several CPUs (processors) that do not share common clock or memory. Processors communicate with each other using high-speed buses within a small area (aroom or cabinet) in tightly-coupled sys-tems. The communication takes place via telephone lines or net-work in loosely-coupled systems."}, "question": "task_1"}}, {"data": {"text": "Question:\nWhat are the various methods by which PL/I debugs or notesdefects in a program while processing it?\n\nOptions:\nA. Syntax checking, Code optimization, Memory allocation\nB. CONVERSION condition, Overflow and underflow, Division by zero, Indicating the end of input data, ON statement\nC.             Error messages, Code review, Testing\nD. Code compilation, Linking, Loading\n\nAnswer: B\n\nReference Solution:\nAfter a program has been compiled, it enters the execution stage. Here, many situations exist that can cause errors and prevent execution. PL/Ihasfacilities for moni-toring program executions. 1) The CONVERSION condition Suppose Y is define as a numeric variable, but the input format specificationis non-numeric. In this case the system stops the program at thispoint and CONVERSION message is printed out. 2) Overflow and underflow: These conditions occur when a numerical value turns out to be too large ortoo small to beaccomodatedin the ma-chine. If a fixed point number hasmore than 15 digits, the computer prints FIXEDOVERFLOW. With floatingpoint numbers the OVERFLOW condition is raised. This means thecomputer notes the error and automatically increases the limit on the sizeof that number, and continues the program. Finally if a very small valueis divided by a very large number and the number is less (in absolutevalue) than 10^-75, UNDERFLOW oc-curs and an appropriate messageis printed. 3) Division by zero is a special type of overflow. When it is attempted, the ZERODIVIDE condition is printed and the programstops. For example, if X, Y are variables and X = Y, then the instructionSQRT(40\\textasteriskcentered(Y - W)/(X - Y)) will stop the program. 4) The usual method of indicating the end of input data is to insert a trailercard with a value that cannot be in the data set. An instruction to exitwhen this value is read is inserted in the main program. If some indica-tionfor the termination of processing is not included, the system will respondwith an ENDFILE condition. 5) Suppose we expect an execution-halting error but wish the processingto continue after it has occurred. This is done through PL/I's ON statement whose general form is ON condition action(1) In (1), 'condition' is some keyword (UNDERFLOW, ENDFILE, etc.). 'action' issome instruction to be performed when the stated condition occurs. Thus, if we want to make sure that SQRT(Y/X) is executed even when X = 0, we insert the statement, ON ZERODIVIDE X = 9999. This should be placed before computations involving X are executed. In (1) the action specified can be any single statement except DECLARE, IP, PROCEDURE, END, DO or another ON. Ex-cept for the ON statement which is a part of the program, the other conditions discussedabove abort the program. But PL/I also gives a diagnosis as to whythe abortion occurred. The next creative run may well produce a normal program.", "ref_id": 4541, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "What are the various methods by which PL/I debugs or notesdefects in a program while processing it?", "options": ["Syntax checking, Code optimization, Memory allocation", "CONVERSION condition, Overflow and underflow, Division by zero, Indicating the end of input data, ON statement", "Error messages, Code review, Testing", "Code compilation, Linking, Loading"], "answer": "B", "solution": "After a program has been compiled, it enters the execution stage. Here, many situations exist that can cause errors and prevent execution. PL/Ihasfacilities for moni-toring program executions. 1) The CONVERSION condition Suppose Y is define as a numeric variable, but the input format specificationis non-numeric. In this case the system stops the program at thispoint and CONVERSION message is printed out. 2) Overflow and underflow: These conditions occur when a numerical value turns out to be too large ortoo small to beaccomodatedin the ma-chine. If a fixed point number hasmore than 15 digits, the computer prints FIXEDOVERFLOW. With floatingpoint numbers the OVERFLOW condition is raised. This means thecomputer notes the error and automatically increases the limit on the sizeof that number, and continues the program. Finally if a very small valueis divided by a very large number and the number is less (in absolutevalue) than 10^-75, UNDERFLOW oc-curs and an appropriate messageis printed. 3) Division by zero is a special type of overflow. When it is attempted, the ZERODIVIDE condition is printed and the programstops. For example, if X, Y are variables and X = Y, then the instructionSQRT(40\\textasteriskcentered(Y - W)/(X - Y)) will stop the program. 4) The usual method of indicating the end of input data is to insert a trailercard with a value that cannot be in the data set. An instruction to exitwhen this value is read is inserted in the main program. If some indica-tionfor the termination of processing is not included, the system will respondwith an ENDFILE condition. 5) Suppose we expect an execution-halting error but wish the processingto continue after it has occurred. This is done through PL/I's ON statement whose general form is ON condition action(1) In (1), 'condition' is some keyword (UNDERFLOW, ENDFILE, etc.). 'action' issome instruction to be performed when the stated condition occurs. Thus, if we want to make sure that SQRT(Y/X) is executed even when X = 0, we insert the statement, ON ZERODIVIDE X = 9999. This should be placed before computations involving X are executed. In (1) the action specified can be any single statement except DECLARE, IP, PROCEDURE, END, DO or another ON. Ex-cept for the ON statement which is a part of the program, the other conditions discussedabove abort the program. But PL/I also gives a diagnosis as to whythe abortion occurred. The next creative run may well produce a normal program."}, "question": "task_1"}}, {"data": {"text": "Question:\nWhat is meant by character string variables, characterstring constants? Give and explain the rules governing declaration, valueacquisition (GET) and value disposition (PUT).\n\nOptions:\nA. A character string variable is declared using the INTEGER attribute.\nB. The GET statement declares the value of the variable.\nC.             The attribute FIXED indicates that the length specification shows the maximum possible length.\nD. A character string variable is declared using the CHARACTER attribute followed by a decimal integer in parentheses denoting its length. The GET statement acquires the value of the variable, and the PUT statement disposes the value. The attribute VARYING indicates that the length specification shows the maximum possible length.\n\nAnswer: D\n\nReference Solution:\nConsider the following PL/I statement DECLARE STUDENT_NAME CHARACTER (15); GET LIST (STUDENT_NAME); On the data card there is: 'JIMMYbCARTERb', 'TEDbKENNEDYb', b 'RlCHARDbNIXONb'. The declaration specifies STUDENT_NAME as the name of a characterstring variable. A character string variable has character string dataas its value. The GET LIST statement acquires the value 'JIMMYbCARTERbas the value of the vari-able STUDENT_NAME.This constanthas a length of only 13 characters, but the variable is declared a lengthof 15 char-acters. Therefore 2 blanks characters will be added. The storagewill therefore contain: JIMMYbCARTERbbb A character string variable must always be explicitly declared in a program. There are no default rules to asso-ciate character string variables. The character attribute is the word CHARACTER followed by a decimalinteger enclosed in parentheses. The integer value denotes the lengthof the character string. e.g.CHARACTER(10) CHAR(18) CHAR If no length is specified in the attribute as above, the PL/I machine assumesa length of one. The keyword CHARACTER may also be used in abbreviatedform CHAR as shown above. In addition to the character attribute, the attribute VARYING may be usedto indicate that the length specification shows the maximum possible length. But the variable may actually take any length up to the maximum. An abbreviation Of VARYING is VAR. e.g.DECLARE STUDENT_NAME CHARACTER(15) VARYING; GET LIST (STUDENT_NAME); The above GET LIST statement, with the same DATA card as be-fore acquiresthe constant JIMMYbCARTERb The length is 13. But now the 2 extra blanks are .not added in the storage becauseof the specification of the VARYING attribute. If the length attribute specified in the declaration is less than the lengthof the character string constant, then the right-most excess charactersare truncated. e.g.DECLARE CITY_NAME CHAR(5); GET LIST (CITY_NAME); The information punched on the data card is 'CHICAGO' which is 7 characterslong. But as the length attribute is 5, CITY_NAME acquires the valueCHICA. Note that the GET and PUT statements are the same as for numericvariables but the character string constants on the data card must beenclosed within quotes. Also, when we want to output a character string con-stant which is notdeclared in the declare statement, it must be enclosed within quotes e.g.PUT LIST ('THE VALUE IS',- --); PUT LIST ('CUSTOMERS NAME', 'NEW PURCHASE', 'BALANCE');", "ref_id": 4542, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "What is meant by character string variables, characterstring constants? Give and explain the rules governing declaration, valueacquisition (GET) and value disposition (PUT).", "options": ["A character string variable is declared using the INTEGER attribute.", "The GET statement declares the value of the variable.", "The attribute FIXED indicates that the length specification shows the maximum possible length.", "A character string variable is declared using the CHARACTER attribute followed by a decimal integer in parentheses denoting its length. The GET statement acquires the value of the variable, and the PUT statement disposes the value. The attribute VARYING indicates that the length specification shows the maximum possible length."], "answer": "D", "solution": "Consider the following PL/I statement DECLARE STUDENT_NAME CHARACTER (15); GET LIST (STUDENT_NAME); On the data card there is: 'JIMMYbCARTERb', 'TEDbKENNEDYb', b 'RlCHARDbNIXONb'. The declaration specifies STUDENT_NAME as the name of a characterstring variable. A character string variable has character string dataas its value. The GET LIST statement acquires the value 'JIMMYbCARTERbas the value of the vari-able STUDENT_NAME.This constanthas a length of only 13 characters, but the variable is declared a lengthof 15 char-acters. Therefore 2 blanks characters will be added. The storagewill therefore contain: JIMMYbCARTERbbb A character string variable must always be explicitly declared in a program. There are no default rules to asso-ciate character string variables. The character attribute is the word CHARACTER followed by a decimalinteger enclosed in parentheses. The integer value denotes the lengthof the character string. e.g.CHARACTER(10) CHAR(18) CHAR If no length is specified in the attribute as above, the PL/I machine assumesa length of one. The keyword CHARACTER may also be used in abbreviatedform CHAR as shown above. In addition to the character attribute, the attribute VARYING may be usedto indicate that the length specification shows the maximum possible length. But the variable may actually take any length up to the maximum. An abbreviation Of VARYING is VAR. e.g.DECLARE STUDENT_NAME CHARACTER(15) VARYING; GET LIST (STUDENT_NAME); The above GET LIST statement, with the same DATA card as be-fore acquiresthe constant JIMMYbCARTERb The length is 13. But now the 2 extra blanks are .not added in the storage becauseof the specification of the VARYING attribute. If the length attribute specified in the declaration is less than the lengthof the character string constant, then the right-most excess charactersare truncated. e.g.DECLARE CITY_NAME CHAR(5); GET LIST (CITY_NAME); The information punched on the data card is 'CHICAGO' which is 7 characterslong. But as the length attribute is 5, CITY_NAME acquires the valueCHICA. Note that the GET and PUT statements are the same as for numericvariables but the character string constants on the data card must beenclosed within quotes. Also, when we want to output a character string con-stant which is notdeclared in the declare statement, it must be enclosed within quotes e.g.PUT LIST ('THE VALUE IS',- --); PUT LIST ('CUSTOMERS NAME', 'NEW PURCHASE', 'BALANCE');"}, "question": "task_1"}}, {"data": {"text": "Question:\nExplain, by means of examples, the following functions used in the handling of matrices: 1) Reversal function. 2) Rotation function.\n\nOptions:\nA. The reversal function converts a matrix to its inverse.\nB. The rotation function shuffles the rows and columns of a matrix.\nC.             The reversal function reverses the order of rows or columns in a matrix, and the rotation function cyclically shifts the elements in a row or column of a matrix.\nD. The reversal function reorders the elements in a matrix randomly.\n\nAnswer: C\n\nReference Solution:\nAPL is ideally suited for matrix manipulation. The above functions help in the storage and processing of data which is in matrix form. Suppose we wish to represent the first 12 whole numbers as a 3 \u00d7 4 matrix. Key in M \\leftarrow 3 4 \\rho \u0285 12(1) A matrix is entered by using \\rho(rho), the shape operator. The iota function ( \u0285 ) tells the computer to list the first 12 positive integers. The general form of (1) is: M \\leftarrow m n \\rho x_1 x_2 .... x_mn(2) Comparing (1) and (2) we see that m, the number of rows, is 3, and n, the number of columns, is 4. The matrix of (1) is: \\mid1234\\mid M =\\mid5678\\mid(3) \\mid9101112\\mid a) Reversal function: The general form of the revers-al function is \\textphi [K]M. Here K = 1 or K = 2. When K = 1, (3) becomes \\mid9101112 \\mid M' =\\mid5678\\mid(4) \\mid1234\\mid Thus, \\textphi [1] M reverses the order of the rows. When K = 2, the order of the columns is reversed. Applying \\textphi [2] M to (3): \\mid 4321\\mid M\" =\\mid 8765\\mid(5) \\mid1211109\\mid If we apply \\textphi [2] M to (4): \\mid1211109\\mid \\mid 8765\\mid(6) \\mid 4321\\mid While \\textphi [1] M on (5) yields \\mid1211109\\mid \\mid 8765\\mid.(7) \\mid 4321\\mid Matrices (6) and (7) are equal. b) Rotation function: This is a dyadic function of the form S \\textphi [K] M. Here S is a vector with as many compon-ents as there are elements in the dimension being rotated. Suppose we want to shift i) all first elements in each row of (1) one ele-ment. from top to bottom. ii) all second elements by two elements from top to bottom and iii) all other elements remain the same. Then, applying the rotation function to (1) 1 2 0 0 \\textphi [1] M \\mid91034\\mid \\mid5278\\mid \\mid161112\\mid To illustrate rotation of columns apply -2 1 0 \\textphi [2]M. The minus indicates a rotation from right to left. The effect of this function is as follows: i) all the first elements in each column to be cyclically shifted two elements from left to right. ii) all second elements in every column to be cyc-lically shifted one element from right to left. iii) a zero shift in the third elements. The upshot of all this on M is \\mid3412\\mid \\mid6785\\mid \\mid9101112\\mid Thus, APL is useful for rotating matrices.", "ref_id": 4543, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Explain, by means of examples, the following functions used in the handling of matrices: 1) Reversal function. 2) Rotation function.", "options": ["The reversal function converts a matrix to its inverse.", "The rotation function shuffles the rows and columns of a matrix.", "The reversal function reverses the order of rows or columns in a matrix, and the rotation function cyclically shifts the elements in a row or column of a matrix.", "The reversal function reorders the elements in a matrix randomly."], "answer": "C", "solution": "APL is ideally suited for matrix manipulation. The above functions help in the storage and processing of data which is in matrix form. Suppose we wish to represent the first 12 whole numbers as a 3 \u00d7 4 matrix. Key in M \\leftarrow 3 4 \\rho \u0285 12(1) A matrix is entered by using \\rho(rho), the shape operator. The iota function ( \u0285 ) tells the computer to list the first 12 positive integers. The general form of (1) is: M \\leftarrow m n \\rho x_1 x_2 .... x_mn(2) Comparing (1) and (2) we see that m, the number of rows, is 3, and n, the number of columns, is 4. The matrix of (1) is: \\mid1234\\mid M =\\mid5678\\mid(3) \\mid9101112\\mid a) Reversal function: The general form of the revers-al function is \\textphi [K]M. Here K = 1 or K = 2. When K = 1, (3) becomes \\mid9101112 \\mid M' =\\mid5678\\mid(4) \\mid1234\\mid Thus, \\textphi [1] M reverses the order of the rows. When K = 2, the order of the columns is reversed. Applying \\textphi [2] M to (3): \\mid 4321\\mid M\" =\\mid 8765\\mid(5) \\mid1211109\\mid If we apply \\textphi [2] M to (4): \\mid1211109\\mid \\mid 8765\\mid(6) \\mid 4321\\mid While \\textphi [1] M on (5) yields \\mid1211109\\mid \\mid 8765\\mid.(7) \\mid 4321\\mid Matrices (6) and (7) are equal. b) Rotation function: This is a dyadic function of the form S \\textphi [K] M. Here S is a vector with as many compon-ents as there are elements in the dimension being rotated. Suppose we want to shift i) all first elements in each row of (1) one ele-ment. from top to bottom. ii) all second elements by two elements from top to bottom and iii) all other elements remain the same. Then, applying the rotation function to (1) 1 2 0 0 \\textphi [1] M \\mid91034\\mid \\mid5278\\mid \\mid161112\\mid To illustrate rotation of columns apply -2 1 0 \\textphi [2]M. The minus indicates a rotation from right to left. The effect of this function is as follows: i) all the first elements in each column to be cyclically shifted two elements from left to right. ii) all second elements in every column to be cyc-lically shifted one element from right to left. iii) a zero shift in the third elements. The upshot of all this on M is \\mid3412\\mid \\mid6785\\mid \\mid9101112\\mid Thus, APL is useful for rotating matrices."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program using APL that evaluates the focal length of a lens.\n\nOptions:\nA. LENGTH 12.16918\nB. LENGTH 11.16918\nC.             LENGTH 13.16918\nD. LENGTH 10.16918\n\nAnswer: A\n\nReference Solution:\nThe formula for the focal length of a lens is F = [(N) (R1) (R2)] / [(N - 1) ((N(R1 + R2) - T (N - 1))] whereF is the focal length N is the index of refraction of the glass T is the thickness of the lens R1 and R2 are the radii of curvatures. Let us first give the program a name: LENGTH. Its procedure looks as follows: \\nablaLENGTH [1]NUMBER \\leftarrow N \u00d7 R1 \u00d7 R2 [2]DENOM\\leftarrow (N - 1) \u00d7 (N \u00d7 R1 \\div R2) - T \u00d7 N - 1 [3]FOCAL\\leftarrow NUMBER \\div DENOM [4]FOCAL [5]\\nabla When writing an APL program, one must first enter the definition mode. This is achieved by typing the upside- down triangle, called \"DEL\", followed by a program name. The next DEL met in the procedure of the program indicates its end. The value of the numerator is stored under NUMER, and the value obtained in the denominator-under DENOM. The so-lution is stored under the variable FOCAL. Line [4] tells the computer to print FOCAL when execution begins. Line [5] which contains a DEL, indicates that the definition mode is complete. The following is a sample output: N \\leftarrow 1.3275 T \\leftarrow 0.375 R1 \\leftarrow 8.0 R2 \\leftarrow 7.85 LENGTH 12.16918 [Note that for special types of lenses, the radii of curvature can take on negative values as well. This illus-tration is the most general case to demonstrate the useful-ness of APL.]", "ref_id": 4544, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program using APL that evaluates the focal length of a lens.", "options": ["LENGTH 12.16918", "LENGTH 11.16918", "LENGTH 13.16918", "LENGTH 10.16918"], "answer": "A", "solution": "The formula for the focal length of a lens is F = [(N) (R1) (R2)] / [(N - 1) ((N(R1 + R2) - T (N - 1))] whereF is the focal length N is the index of refraction of the glass T is the thickness of the lens R1 and R2 are the radii of curvatures. Let us first give the program a name: LENGTH. Its procedure looks as follows: \\nablaLENGTH [1]NUMBER \\leftarrow N \u00d7 R1 \u00d7 R2 [2]DENOM\\leftarrow (N - 1) \u00d7 (N \u00d7 R1 \\div R2) - T \u00d7 N - 1 [3]FOCAL\\leftarrow NUMBER \\div DENOM [4]FOCAL [5]\\nabla When writing an APL program, one must first enter the definition mode. This is achieved by typing the upside- down triangle, called \"DEL\", followed by a program name. The next DEL met in the procedure of the program indicates its end. The value of the numerator is stored under NUMER, and the value obtained in the denominator-under DENOM. The so-lution is stored under the variable FOCAL. Line [4] tells the computer to print FOCAL when execution begins. Line [5] which contains a DEL, indicates that the definition mode is complete. The following is a sample output: N \\leftarrow 1.3275 T \\leftarrow 0.375 R1 \\leftarrow 8.0 R2 \\leftarrow 7.85 LENGTH 12.16918 [Note that for special types of lenses, the radii of curvature can take on negative values as well. This illus-tration is the most general case to demonstrate the useful-ness of APL.]"}, "question": "task_1"}}, {"data": {"text": "Question:\nList the common types of registers used in the computer and statetheir purpose.\n\nOptions:\nA. Control Register, Status Register, Instruction Register, Program Counter\nB. Input Register, Output Register, Cache Register, Buffer Register, Data Register\nC.             Stack Register, Queue Register, Instruction Register, Data Register, Buffer Register\nD. Program Counter, Instruction Register, Memory Address Register, Memory Buffer Register, Accumulator, General Purpose Registers, Index Register, Condition Code Register, Stack Pointer\n\nAnswer: D\n\nReference Solution:\nThere are nine types of registers in the computer. 1.Program Counter:This register holds the address of the instruction tobe executed. As the name implies, it is also a counter since instructions arelisted in memory sequentially (for the most part). 2.Instruction Register:This register holds the binary code of the instructionto be executed. 3.Memory Address Register (MAR):This register holds the address ofany type of data (instruction, operand, etc.) to be stored in, or recalled from, memory. 4.Memory Buffer Register (MBR):This register holds the data written frommemory until the appropriate register is ready to accept it. The MBR alsostores information that is to be transferred from a register into main memory. 5.Accumulator:This register stores temporary data during calculations. The accumulator always holds one of the operands in arithmeticoperations. 6.General Purpose Registers:These registers usually serve as temporarystorage for data and addresses. In some computers, the user mayspecify them as accumulators or program counters. If he wishes, the programmermay also use these registers for arithmetic calculations. 7.Index Register:This register holds a relative address which, when addedto the memory address, forms an effective address, that states the actuallocation of data. Thus, if the contents of the Index Register are changed, the same instructions can be used to handle data from different locations. Generally, the contents of the index register (XR or X) are addedto the numerical ad-dress of a symbol to calculate its absolute (actual) address in main memory. This numerical address is com-prised of adisplacement and the contents of a base register. The base register holdsthe address at which the program was stored in main memory upon itsentry. The displacement is the distance (i.e. the number of bytes) which aninstruction is from the start of the program. Thus, by adding the contentsof the index register, the contents of the base register, and the dis-placement, the absolute address of an instruction can be calculated. 8.Condition Code Register:This register holds one-bit flags which representthe state of conditions inside the CPU. The states of these flags arethe basis for computer decision making in conditional instructions such as\"Jump to Location 31 if Accumulator is greater than zero.\" 9.Stack Pointer:This register contains the address of the top of the stack. It can be incremented or decre-mented depending upon whether datais put onto, or taken off of, the stack.", "ref_id": 4545, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "List the common types of registers used in the computer and statetheir purpose.", "options": ["Control Register, Status Register, Instruction Register, Program Counter", "Input Register, Output Register, Cache Register, Buffer Register, Data Register", "Stack Register, Queue Register, Instruction Register, Data Register, Buffer Register", "Program Counter, Instruction Register, Memory Address Register, Memory Buffer Register, Accumulator, General Purpose Registers, Index Register, Condition Code Register, Stack Pointer"], "answer": "D", "solution": "There are nine types of registers in the computer. 1.Program Counter:This register holds the address of the instruction tobe executed. As the name implies, it is also a counter since instructions arelisted in memory sequentially (for the most part). 2.Instruction Register:This register holds the binary code of the instructionto be executed. 3.Memory Address Register (MAR):This register holds the address ofany type of data (instruction, operand, etc.) to be stored in, or recalled from, memory. 4.Memory Buffer Register (MBR):This register holds the data written frommemory until the appropriate register is ready to accept it. The MBR alsostores information that is to be transferred from a register into main memory. 5.Accumulator:This register stores temporary data during calculations. The accumulator always holds one of the operands in arithmeticoperations. 6.General Purpose Registers:These registers usually serve as temporarystorage for data and addresses. In some computers, the user mayspecify them as accumulators or program counters. If he wishes, the programmermay also use these registers for arithmetic calculations. 7.Index Register:This register holds a relative address which, when addedto the memory address, forms an effective address, that states the actuallocation of data. Thus, if the contents of the Index Register are changed, the same instructions can be used to handle data from different locations. Generally, the contents of the index register (XR or X) are addedto the numerical ad-dress of a symbol to calculate its absolute (actual) address in main memory. This numerical address is com-prised of adisplacement and the contents of a base register. The base register holdsthe address at which the program was stored in main memory upon itsentry. The displacement is the distance (i.e. the number of bytes) which aninstruction is from the start of the program. Thus, by adding the contentsof the index register, the contents of the base register, and the dis-placement, the absolute address of an instruction can be calculated. 8.Condition Code Register:This register holds one-bit flags which representthe state of conditions inside the CPU. The states of these flags arethe basis for computer decision making in conditional instructions such as\"Jump to Location 31 if Accumulator is greater than zero.\" 9.Stack Pointer:This register contains the address of the top of the stack. It can be incremented or decre-mented depending upon whether datais put onto, or taken off of, the stack."}, "question": "task_1"}}, {"data": {"text": "Question:\nDevelop a FORTRAN subroutine that sorts a list of N elements and arranges them in ascending order.\n\nOptions:\nA. SUBROUTINE SORT (Y, N) DIMENSION Y (1) CY IS THE ARRAY TO BE SORTED N1 = N - 1 DO 10 I = 1, N1 J = I + 1 DO 20 K = J, N IF (Y (I).LE.Y (K)) GO TO 20 TEMP = Y (I) Y (I) = Y (K) Y (K) = TEMP 20CONTINUE 10CONTINUE RETURN END\nB. SUBROUTINE SORT (Y, N) DIMENSION Y (1) CY IS THE ARRAY TO BE SORTED N1 = N - 1 DO 10 I = 1, N1 J = I + 1 DO 20 K = J, N IF (Y (I).LT.Y (K)) GO TO 20 TEMP = Y (I) Y (I) = Y (K) Y (K) = TEMP 20CONTINUE 10CONTINUE RETURN END\nC.             SUBROUTINE SORT (Y, N) DIMENSION Y (N) DO 10 I = 1, N J = I + 1 DO 20 K = J, N IF (Y (I).GT.Y (K)) GO TO 20 Y (I) = Y (K) Y (K) = TEMP 20CONTINUE 10CONTINUE RETURN END\nD. SUBROUTINE SORT (Y, N) DIMENSION Y (1) DO 10 I = 1, N J = I + 1 DO 20 K = J, N IF (Y (I).GE.Y (K)) GO TO 20 TEMP = Y (I) Y (I) = Y (K) Y (K) = TEMP 20CONTINUE 10CONTINUE RETURN END\n\nAnswer: A\n\nReference Solution:\nThis method is called a selection sort. It is not the most efficient method in terms of computer time, but it is simple to understand. It compares the first value of the array Y (N) to each successive value. If the first value is greater than the Nth value, they are interchanged. Then, the second value is compared to the others in succession, and so on. The subroutine is as follows: SUBROUTINE SORT (Y, N) DIMENSION Y (1) CY IS THE ARRAY TO BE SORTED N1 = N - 1 DO 10 I = 1, N1 J = I + 1 DO 20 K = J, N IF (Y (I).LE.Y (K)) GO TO 20 TEMP = Y (I) Y (I) = Y (K) Y (K) = TEMP 20CONTINUE 10CONTINUE RETURN END", "ref_id": 4546, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Develop a FORTRAN subroutine that sorts a list of N elements and arranges them in ascending order.", "options": ["SUBROUTINE SORT (Y, N) DIMENSION Y (1) CY IS THE ARRAY TO BE SORTED N1 = N - 1 DO 10 I = 1, N1 J = I + 1 DO 20 K = J, N IF (Y (I).LE.Y (K)) GO TO 20 TEMP = Y (I) Y (I) = Y (K) Y (K) = TEMP 20CONTINUE 10CONTINUE RETURN END", "SUBROUTINE SORT (Y, N) DIMENSION Y (1) CY IS THE ARRAY TO BE SORTED N1 = N - 1 DO 10 I = 1, N1 J = I + 1 DO 20 K = J, N IF (Y (I).LT.Y (K)) GO TO 20 TEMP = Y (I) Y (I) = Y (K) Y (K) = TEMP 20CONTINUE 10CONTINUE RETURN END", "SUBROUTINE SORT (Y, N) DIMENSION Y (N) DO 10 I = 1, N J = I + 1 DO 20 K = J, N IF (Y (I).GT.Y (K)) GO TO 20 Y (I) = Y (K) Y (K) = TEMP 20CONTINUE 10CONTINUE RETURN END", "SUBROUTINE SORT (Y, N) DIMENSION Y (1) DO 10 I = 1, N J = I + 1 DO 20 K = J, N IF (Y (I).GE.Y (K)) GO TO 20 TEMP = Y (I) Y (I) = Y (K) Y (K) = TEMP 20CONTINUE 10CONTINUE RETURN END"], "answer": "A", "solution": "This method is called a selection sort. It is not the most efficient method in terms of computer time, but it is simple to understand. It compares the first value of the array Y (N) to each successive value. If the first value is greater than the Nth value, they are interchanged. Then, the second value is compared to the others in succession, and so on. The subroutine is as follows: SUBROUTINE SORT (Y, N) DIMENSION Y (1) CY IS THE ARRAY TO BE SORTED N1 = N - 1 DO 10 I = 1, N1 J = I + 1 DO 20 K = J, N IF (Y (I).LE.Y (K)) GO TO 20 TEMP = Y (I) Y (I) = Y (K) Y (K) = TEMP 20CONTINUE 10CONTINUE RETURN END"}, "question": "task_1"}}, {"data": {"text": "Question:\nDescribe the output of the following program. L = 0 DO 1 K = 1, 25\n\nOptions:\nA. 4324\nB. 4900\nC.             3795\nD. 5525\n\nAnswer: D\n\nReference Solution:\nThis problem is a good example of the usage of the CONTROL STATEMENT \"DO\". DO statements are always of the form DO ri= j, k, or DO ri= j, k, l, where r-statement number,i- variable name,j,k, l,-variable names or positive integers. A DO statement is interpreted as follows: do all FORTRAN statements down to and including the one numbered r, first using the value ofi= j, theni= j + l,i= j + 2l, and so on, untilibecomes larger than k. If l is missing, it is assumed that l = 1. Therefore, the program takes L = 0 and K = 1 as initial values and then, according to DO statement, executes the formula L = L + K{_\\ast}K 25 times with the value of K being increased by 1 each time. The program then writes the value of L which is finally obtained. Arithmetical execution of the program is as follows: L = 0 + 1 \\bullet 1 = 1 L = 1 + 2 \\bullet 2 = 5 L = 5 + 3 \\bullet 3 = 14 L = 14 + 4 \\bullet 4 = 30 L = 30 + 5 \\bullet 5 = 55 L = 55 + 6 \\bullet 6 = 91 L = 91 + 7 \\bullet 7 = 140 L = 140 + 8 \\bullet 8 = 204 L = 204 + 9 \\bullet 9 = 285 L = 285 + 10 \\bullet 10 = 385 L = 385 + 11 \\bullet 11 = 506 L = 506 + 12 \\bullet 12 = 650 L = 650 + 13 \\bullet 13 = 819 L = 819 + 14 \\bullet 14 = 1015 L = 1015 + 15 \\bullet 15 = 1240 L = 1240 + 16 \\bullet 16 = 1496 L = 1496 + 17 \\bullet 17 = 1785 L = 1785 + 18 \\bullet 18 = 2109 L = 2109 + 19 \\bullet 19 = 2470 L = 2470 + 20 \\bullet 20 = 2870 L = 2870 + 21 \\bullet 21 = 3311 L = 3311 + 22 \\bullet 22 = 3795 L = 3795 + 23 \\bullet 23 = 4324 L = 4324 + 24 \\bullet 24 = 4900 L = 4900 + 25 \\bullet 25 = 5525 5525 is the desired result, which will be printed.", "ref_id": 4547, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Describe the output of the following program. L = 0 DO 1 K = 1, 25", "options": ["4324", "4900", "3795", "5525"], "answer": "D", "solution": "This problem is a good example of the usage of the CONTROL STATEMENT \"DO\". DO statements are always of the form DO ri= j, k, or DO ri= j, k, l, where r-statement number,i- variable name,j,k, l,-variable names or positive integers. A DO statement is interpreted as follows: do all FORTRAN statements down to and including the one numbered r, first using the value ofi= j, theni= j + l,i= j + 2l, and so on, untilibecomes larger than k. If l is missing, it is assumed that l = 1. Therefore, the program takes L = 0 and K = 1 as initial values and then, according to DO statement, executes the formula L = L + K{_\\ast}K 25 times with the value of K being increased by 1 each time. The program then writes the value of L which is finally obtained. Arithmetical execution of the program is as follows: L = 0 + 1 \\bullet 1 = 1 L = 1 + 2 \\bullet 2 = 5 L = 5 + 3 \\bullet 3 = 14 L = 14 + 4 \\bullet 4 = 30 L = 30 + 5 \\bullet 5 = 55 L = 55 + 6 \\bullet 6 = 91 L = 91 + 7 \\bullet 7 = 140 L = 140 + 8 \\bullet 8 = 204 L = 204 + 9 \\bullet 9 = 285 L = 285 + 10 \\bullet 10 = 385 L = 385 + 11 \\bullet 11 = 506 L = 506 + 12 \\bullet 12 = 650 L = 650 + 13 \\bullet 13 = 819 L = 819 + 14 \\bullet 14 = 1015 L = 1015 + 15 \\bullet 15 = 1240 L = 1240 + 16 \\bullet 16 = 1496 L = 1496 + 17 \\bullet 17 = 1785 L = 1785 + 18 \\bullet 18 = 2109 L = 2109 + 19 \\bullet 19 = 2470 L = 2470 + 20 \\bullet 20 = 2870 L = 2870 + 21 \\bullet 21 = 3311 L = 3311 + 22 \\bullet 22 = 3795 L = 3795 + 23 \\bullet 23 = 4324 L = 4324 + 24 \\bullet 24 = 4900 L = 4900 + 25 \\bullet 25 = 5525 5525 is the desired result, which will be printed."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a BASIC program to find and print the difference, product, and quotient for pairs of complex numbers which are inputted from a ter-minal. Again, treat a single complex number as an ordered pair of real numbers.\n\nOptions:\nA. Use the notation for dividing complex numbers\nB. Use the notation for adding complex numbers. If Z_1 = (a, b) and Z_2 = (c, d), the difference, product, and quotient of Z_1 and Z_2 are respectively Z_1 - Z_2 = (a-c, b-d), Z_1 * Z_2 = (ac -bd, ad + be), Z_1 / Z_2 = [(ac +bd) / (c^2 + d^2), (bc- ad) / (c^2 + d^2)]\nC.             Use the notation for subtracting complex numbers\nD. Use the notation for multiplying complex numbers\n\nAnswer: B\n\nReference Solution:\nWe use the same notation developed in the previous problem for adding complex numbers. If Z_1 = (a, b) and Z_2 = (c, d), then the difference, product, and quotient of Z_1 and Z_2 are respectively Z_1 - Z_2 = (a-c, b-d) Z_1 \\textasteriskcentered Z_2 = (ac -bd, ad + be) Z_1 / Z_2 = [(ac +bd) / (c^2 + d^2), (bc- ad) / (c^2 + d^2)] 1\\O PRINT \\textquotedblleftTHIS PROGRAM FINDS THE DIFFERENCE,\"; 15 PRINT \"PRODUCT, AND QUOTIENT OF TWO\"; 17 PRINT \"COMPLEX NUMBERS IN A,B FORM\"; 2\\O PRINT 3\\O PRINT \"TYPE IN THE FIRST NUMBER\" 4\\O INPUT A,B 5\\O IF A = 999 THEN 999 6\\O PRINT \"TYPE IN THE SECOND NUMBER\" 7\\O INPUT C,D 8\\O PRINT \"THE DIFFERENCE IS (\"; A-C;\",\";B-D;\")\" 9\\O PRINT \"THE PRODUCT IS (\"; 95 PRINT A\\textasteriskcenteredC - B\\textasteriskcenteredD;\",\";A\\textasteriskcenteredD+B\\textasteriskcenteredC;\")\" 96 PRINT \"THE QUOTIENT IS (\"; 98 PRINT (A\\textasteriskcenteredC+B\\textasteriskcenteredD)/(C_\\uparrow2+D_\\uparrow2); \",\"; (B\\textasteriskcenteredC-A\\textasteriskcenteredD)/(C_\\uparrow2+D_\\uparrow2); \")\" 99 GO TO 20 999 END", "ref_id": 4548, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a BASIC program to find and print the difference, product, and quotient for pairs of complex numbers which are inputted from a ter-minal. Again, treat a single complex number as an ordered pair of real numbers.", "options": ["Use the notation for dividing complex numbers", "Use the notation for adding complex numbers. If Z_1 = (a, b) and Z_2 = (c, d), the difference, product, and quotient of Z_1 and Z_2 are respectively Z_1 - Z_2 = (a-c, b-d), Z_1 * Z_2 = (ac -bd, ad + be), Z_1 / Z_2 = [(ac +bd) / (c^2 + d^2), (bc- ad) / (c^2 + d^2)]", "Use the notation for subtracting complex numbers", "Use the notation for multiplying complex numbers"], "answer": "B", "solution": "We use the same notation developed in the previous problem for adding complex numbers. If Z_1 = (a, b) and Z_2 = (c, d), then the difference, product, and quotient of Z_1 and Z_2 are respectively Z_1 - Z_2 = (a-c, b-d) Z_1 \\textasteriskcentered Z_2 = (ac -bd, ad + be) Z_1 / Z_2 = [(ac +bd) / (c^2 + d^2), (bc- ad) / (c^2 + d^2)] 1\\O PRINT \\textquotedblleftTHIS PROGRAM FINDS THE DIFFERENCE,\"; 15 PRINT \"PRODUCT, AND QUOTIENT OF TWO\"; 17 PRINT \"COMPLEX NUMBERS IN A,B FORM\"; 2\\O PRINT 3\\O PRINT \"TYPE IN THE FIRST NUMBER\" 4\\O INPUT A,B 5\\O IF A = 999 THEN 999 6\\O PRINT \"TYPE IN THE SECOND NUMBER\" 7\\O INPUT C,D 8\\O PRINT \"THE DIFFERENCE IS (\"; A-C;\",\";B-D;\")\" 9\\O PRINT \"THE PRODUCT IS (\"; 95 PRINT A\\textasteriskcenteredC - B\\textasteriskcenteredD;\",\";A\\textasteriskcenteredD+B\\textasteriskcenteredC;\")\" 96 PRINT \"THE QUOTIENT IS (\"; 98 PRINT (A\\textasteriskcenteredC+B\\textasteriskcenteredD)/(C_\\uparrow2+D_\\uparrow2); \",\"; (B\\textasteriskcenteredC-A\\textasteriskcenteredD)/(C_\\uparrow2+D_\\uparrow2); \")\" 99 GO TO 20 999 END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a BASIC program which converts inches to feet and inches.\n\nOptions:\nA. 1\\O READ I 2\\O LET F = INT(I/12) 3\\O LET I1 = I - F\textasteriskcentered12 4\\O PRINT I \"INCHES = \"; F;\"FEET\"; I1; \"INCHES\" 45 GO TO 1\\O 5\\O DATA 9, 86, 47, 37, 947, 48\\O 6\\O END\nB. 1\\O READ I 2\\O LET F = INT(I/12) 3\\O LET I1 = F\textasteriskcentered12 - I 4\\O PRINT I \"INCHES = \"; F;\"FEET\"; I1; \"INCHES\" 45 GO TO 1\\O 5\\O DATA 9, 86, 47, 37, 947, 48\\O 6\\O END\nC.             1\\O READ I 2\\O LET F = I/12 3\\O LET I1 = I - F\textasteriskcentered12 4\\O PRINT I \"INCHES = \"; F;\"FEET\"; I1; \"INCHES\" 45 GO TO 1\\O 5\\O DATA 9, 86, 47, 37, 947, 48\\O 6\\O END\nD. 1\\O READ I 2\\O LET F = INT(I\textasteriskcentered12) 3\\O LET I1 = I - F\textasteriskcentered12 4\\O PRINT I \"INCHES = \"; F;\"FEET\"; I1; \"INCHES\" 45 GO TO 1\\O 5\\O DATA 9, 86, 47, 37, 947, 48\\O 6\\O END\n\nAnswer: A\n\nReference Solution:\nUse the INT function 1\\O READ I 2\\O LET F = INT(I/12) 3\\O LET I1 = I - F\\textasteriskcentered12 4\\O PRINT I \"INCHES = \"; F;\"FEET\"; I1; \"INCHES\" 45 GO TO 1\\O 5\\O DATA 9, 86, 47, 37, 947, 48\\O 6\\O END", "ref_id": 4549, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a BASIC program which converts inches to feet and inches.", "options": ["1\\O READ I 2\\O LET F = INT(I/12) 3\\O LET I1 = I - F\textasteriskcentered12 4\\O PRINT I \"INCHES = \"; F;\"FEET\"; I1; \"INCHES\" 45 GO TO 1\\O 5\\O DATA 9, 86, 47, 37, 947, 48\\O 6\\O END", "1\\O READ I 2\\O LET F = INT(I/12) 3\\O LET I1 = F\textasteriskcentered12 - I 4\\O PRINT I \"INCHES = \"; F;\"FEET\"; I1; \"INCHES\" 45 GO TO 1\\O 5\\O DATA 9, 86, 47, 37, 947, 48\\O 6\\O END", "1\\O READ I 2\\O LET F = I/12 3\\O LET I1 = I - F\textasteriskcentered12 4\\O PRINT I \"INCHES = \"; F;\"FEET\"; I1; \"INCHES\" 45 GO TO 1\\O 5\\O DATA 9, 86, 47, 37, 947, 48\\O 6\\O END", "1\\O READ I 2\\O LET F = INT(I\textasteriskcentered12) 3\\O LET I1 = I - F\textasteriskcentered12 4\\O PRINT I \"INCHES = \"; F;\"FEET\"; I1; \"INCHES\" 45 GO TO 1\\O 5\\O DATA 9, 86, 47, 37, 947, 48\\O 6\\O END"], "answer": "A", "solution": "Use the INT function 1\\O READ I 2\\O LET F = INT(I/12) 3\\O LET I1 = I - F\\textasteriskcentered12 4\\O PRINT I \"INCHES = \"; F;\"FEET\"; I1; \"INCHES\" 45 GO TO 1\\O 5\\O DATA 9, 86, 47, 37, 947, 48\\O 6\\O END"}, "question": "task_1"}}, {"data": {"text": "Question:\nYou are in a room with 29 other people. You are asked to write a program which computes the probability of at least two people having the samebirthdate.\n\nOptions:\nA. Q = 1 - P\nB. Q = P / 1\nC.             Q = P - 1\nD. Q = 1 + P\n\nAnswer: A\n\nReference Solution:\nDenote the requested probability by Q. Then Q = 1 - P where P is the probability of no two identical birthdates. From elementary probability theory P = (365/365) \u00d7 [(365-1)/365] \u00d7...\u00d7 [(365-29)/365] = (365 \u00d7 364 \u00d7 363 \u00d7 ... \u00d7 336)/365^30 Here, the probability is 365/365 that one person will not have two identical birthdates. Given two people, the probability is 364/365 since the first person has 365 choices and the second only has 364. Continuing, we obtain P. The program appears as follows : 1\\O LET P = 1 2\\O FOR D = 365 TO 336 STEP -1 3\\O LET P = P \\textasteriskcentered D/365 4\\O NEXT D 5\\O LET Q = 1 - P 6\\O PRINT \"THE PROBABILITY OF TWO OR MORE\" 7\\O PRINT \"IDENTICAL BIRTHDATES AMONG 30 PEOPLE IS\"; Q 8\\O END", "ref_id": 4550, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "You are in a room with 29 other people. You are asked to write a program which computes the probability of at least two people having the samebirthdate.", "options": ["Q = 1 - P", "Q = P / 1", "Q = P - 1", "Q = 1 + P"], "answer": "A", "solution": "Denote the requested probability by Q. Then Q = 1 - P where P is the probability of no two identical birthdates. From elementary probability theory P = (365/365) \u00d7 [(365-1)/365] \u00d7...\u00d7 [(365-29)/365] = (365 \u00d7 364 \u00d7 363 \u00d7 ... \u00d7 336)/365^30 Here, the probability is 365/365 that one person will not have two identical birthdates. Given two people, the probability is 364/365 since the first person has 365 choices and the second only has 364. Continuing, we obtain P. The program appears as follows : 1\\O LET P = 1 2\\O FOR D = 365 TO 336 STEP -1 3\\O LET P = P \\textasteriskcentered D/365 4\\O NEXT D 5\\O LET Q = 1 - P 6\\O PRINT \"THE PROBABILITY OF TWO OR MORE\" 7\\O PRINT \"IDENTICAL BIRTHDATES AMONG 30 PEOPLE IS\"; Q 8\\O END"}, "question": "task_1"}}, {"data": {"text": "Question:\nInsurance companies have worked out probability tables to estimate the chances a person has of living until a certain age. A study of just over a million people was made, and in 1941, a mortality table was published. It listed the number of persons still alive at. age 0,1,2,3, ..., 99. LetL(X) = number of persons living at age X then,P(X) = probability that a person of age X will live for one more year = [L(X+1)] / [L(X)] Develop a program in BASIC that allows the user to input the year of birth, the present age, and some year after the year of birth. The output should list the age, the year, and the chances of that person living until that year.\n\nOptions:\nA. 0.85\nB. 0.80\nC.             0.83\nD. 0.90\n\nAnswer: C\n\nReference Solution:\nTo make the problem more meaningful, let us present a con-crete example. Suppose we want to calculate the chances of a 35-year old born in 1945 living until the year 2000. Adding the person's age to hisbirthdate gives us the year 1980. This person must live for 20 more years to reach 2000. His chances of making it are [L(35+20)] / [L(35)] = [L(55)] / [L(35)] = P(X) If we look at the data tables given in the program, we find that L(55) = 754191 and L(35) = 906554. So the answer is [754191/ 906554] = .8319316 or, approximately 0.83. The strategy for our computer program is fairly easy. The program reads in the values, figures out the probability, and returns the answer. To terminate the procedure, input a negative value for the year of birth. We list the data (as it is stored in array L) in a DATA statement at the end of the program. The first entry is L(0), the total number of persons included in the study. 1\\O DIM M(99,4) 15 FOR J = 0 TO 99 2\\O READ M (J,0) 25 IF J = 0 THEN 30 28 LET M(J-1,1) = M(J-1,0) - M(J,0) 3\\O NEXT J 32 LET M(99,1) = M(99,0) 33 REM INPUT YEAR OF BIRTH, AGE, AND EXPECTED YEAR 35 PRINT \"INPUT YEAR OF BIRTH, AGE, AND EXPECTED YEAR'' 4\\O INPUT B,A,X 45 IF B < 0 THEN 99 48 REM N IS THE PRESENT YEAR; M IS THE 49 REM YEARS BETWEEN PRESENT AND EXPECTED. 5\\O LET N = B + A 52 LET M = X - N 55 LET P = L (A+M) / L(A) 58 PRINT 6\\O PRINT \"CHANCES OF LIVING UNTIL YEAR\"; X; \"ARE\"; P 65 GO TO 35 7\\O DATA 1023102, 1000000, 994230, 990114, 986767 72 DATA 983817, 981102, 978541, 976124, 973869 74 DATA 971804, 969890, 968038, 966179, 964266 76 DATA 962270, 960201, 958098, 955942, 953743 78 DATA 951483, 949171, 946789, 944337, 941806 8\\O DATA 939197, 936492, 933692, 930788, 927763 82 DATA 924609, 921317, 917880, 914282, 910515 84 DATA 906554, 902393, 898007, 893382, 888504 86 DATA 883342, 877883, 872098, 865967, 859464 87 DATA 852554, 845214, 837413, 829114, 820292 88 DATA 810900, 800910, 790282, 778981, 766967 89 DATA 754191, 740631, 726241, 710990, 694843 9\\O DATA 677771, 659749, 640761, 620782, 599824 91 DATA 577882, 554975, 531133, 506403, 480850 92 DATA 454548, 427593, 400112, 372240, 344136 93 DATA 315982, 287973, 260322, 233251, 206989 94 DATA 181765, 157799, 135297, 114440, 93378 95 DATA 78221, 63036, 49838, 38593, 29215 96 DATA 21577, 15514, 10833, 7327, 4787 97 DATA 3011, 1818, 1005, 454, 125 99 END", "ref_id": 4551, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Insurance companies have worked out probability tables to estimate the chances a person has of living until a certain age. A study of just over a million people was made, and in 1941, a mortality table was published. It listed the number of persons still alive at. age 0,1,2,3, ..., 99. LetL(X) = number of persons living at age X then,P(X) = probability that a person of age X will live for one more year = [L(X+1)] / [L(X)] Develop a program in BASIC that allows the user to input the year of birth, the present age, and some year after the year of birth. The output should list the age, the year, and the chances of that person living until that year.", "options": ["0.85", "0.80", "0.83", "0.90"], "answer": "C", "solution": "To make the problem more meaningful, let us present a con-crete example. Suppose we want to calculate the chances of a 35-year old born in 1945 living until the year 2000. Adding the person's age to hisbirthdate gives us the year 1980. This person must live for 20 more years to reach 2000. His chances of making it are [L(35+20)] / [L(35)] = [L(55)] / [L(35)] = P(X) If we look at the data tables given in the program, we find that L(55) = 754191 and L(35) = 906554. So the answer is [754191/ 906554] = .8319316 or, approximately 0.83. The strategy for our computer program is fairly easy. The program reads in the values, figures out the probability, and returns the answer. To terminate the procedure, input a negative value for the year of birth. We list the data (as it is stored in array L) in a DATA statement at the end of the program. The first entry is L(0), the total number of persons included in the study. 1\\O DIM M(99,4) 15 FOR J = 0 TO 99 2\\O READ M (J,0) 25 IF J = 0 THEN 30 28 LET M(J-1,1) = M(J-1,0) - M(J,0) 3\\O NEXT J 32 LET M(99,1) = M(99,0) 33 REM INPUT YEAR OF BIRTH, AGE, AND EXPECTED YEAR 35 PRINT \"INPUT YEAR OF BIRTH, AGE, AND EXPECTED YEAR'' 4\\O INPUT B,A,X 45 IF B < 0 THEN 99 48 REM N IS THE PRESENT YEAR; M IS THE 49 REM YEARS BETWEEN PRESENT AND EXPECTED. 5\\O LET N = B + A 52 LET M = X - N 55 LET P = L (A+M) / L(A) 58 PRINT 6\\O PRINT \"CHANCES OF LIVING UNTIL YEAR\"; X; \"ARE\"; P 65 GO TO 35 7\\O DATA 1023102, 1000000, 994230, 990114, 986767 72 DATA 983817, 981102, 978541, 976124, 973869 74 DATA 971804, 969890, 968038, 966179, 964266 76 DATA 962270, 960201, 958098, 955942, 953743 78 DATA 951483, 949171, 946789, 944337, 941806 8\\O DATA 939197, 936492, 933692, 930788, 927763 82 DATA 924609, 921317, 917880, 914282, 910515 84 DATA 906554, 902393, 898007, 893382, 888504 86 DATA 883342, 877883, 872098, 865967, 859464 87 DATA 852554, 845214, 837413, 829114, 820292 88 DATA 810900, 800910, 790282, 778981, 766967 89 DATA 754191, 740631, 726241, 710990, 694843 9\\O DATA 677771, 659749, 640761, 620782, 599824 91 DATA 577882, 554975, 531133, 506403, 480850 92 DATA 454548, 427593, 400112, 372240, 344136 93 DATA 315982, 287973, 260322, 233251, 206989 94 DATA 181765, 157799, 135297, 114440, 93378 95 DATA 78221, 63036, 49838, 38593, 29215 96 DATA 21577, 15514, 10833, 7327, 4787 97 DATA 3011, 1818, 1005, 454, 125 99 END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program to find the remainder of the quotient of two integer numbers. Test the program with sample data.\n\nOptions:\nA. R = N - INT(N/D)*D\nB. R = N + D\nC.             R = N * D\nD. R = N / D\n\nAnswer: A\n\nReference Solution:\nThe remainder is given by R = N - INT(N/D)\\textasteriskcenteredD where N = numerator, D = denominator, and integer quotient is INT(N/D), (This statement will work properly only on those systems where INT(X) function determines the largest integer number that does not exceed X. For a few systems where INT(X) just truncates fractional parts of X, the statement would need some modification.) 5 PRINT \"NUMERATOR\", \"DENOM\", \"REMAINDER\", \"INT UOT\" 1\\O READ N,D 15 REM FIND REMAINDER WHEN 'N' IS DIVIDED BY ' DJ 2\\O LET R = N - INT(N/D)\\textasteriskcenteredD 3\\O PRINT N,D,R, INT(N/D) 4\\O GO TO 1\\O 5\\O DATA 93, 12, 1\\O\\O 25, 365, 52, 365, 7 6\\O END Sample Output: NUMERATOR DENOM REMAINDER INT QUOT 93 12 9 7 100 25 4 0 365 52 1 7 365 7 1 52", "ref_id": 4552, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program to find the remainder of the quotient of two integer numbers. Test the program with sample data.", "options": ["R = N - INT(N/D)*D", "R = N + D", "R = N * D", "R = N / D"], "answer": "A", "solution": "The remainder is given by R = N - INT(N/D)\\textasteriskcenteredD where N = numerator, D = denominator, and integer quotient is INT(N/D), (This statement will work properly only on those systems where INT(X) function determines the largest integer number that does not exceed X. For a few systems where INT(X) just truncates fractional parts of X, the statement would need some modification.) 5 PRINT \"NUMERATOR\", \"DENOM\", \"REMAINDER\", \"INT UOT\" 1\\O READ N,D 15 REM FIND REMAINDER WHEN 'N' IS DIVIDED BY ' DJ 2\\O LET R = N - INT(N/D)\\textasteriskcenteredD 3\\O PRINT N,D,R, INT(N/D) 4\\O GO TO 1\\O 5\\O DATA 93, 12, 1\\O\\O 25, 365, 52, 365, 7 6\\O END Sample Output: NUMERATOR DENOM REMAINDER INT QUOT 93 12 9 7 100 25 4 0 365 52 1 7 365 7 1 52"}, "question": "task_1"}}, {"data": {"text": "Question:\nThe following BASIC program is supposed to calculate the sum of the squares of the first 10 digits. Find the syntactical and logical errors. 10PROGRAM TO CALCULATE SUM OF SQUARES OF 20FIRST TEN DIGITS. 30LET SUM = 0 40LET J = 1 50LET S = J 60IF J = 10 THEN GO TO 90 70LET J = J + 1 80GO TO 50 90PRINT S 100END.\n\nOptions:\nA. Statements 30 and 40 are not prefaced by REM, SUMM is an invalid variable name, 60IF X = 10 THEN GO, END is not succeeded by a period, squares have been calculated\nB. Statements 10 and 20 are not prefaced by REM, SUM is an invalid variable name, 60IF X = 10 THEN GO, END is not succeeded by a period, squares have been calculated\nC.             Statements 10 and 20 are not prefaced by REM, SUM is an invalid variable name, 60IF X = 10 THEN GO, END is succeeded by a period, squares have not been calculated\nD. Statements 10 and 20 are prefaced by REM, SUM is a valid variable name, 60IF X = 10 THEN GO, END is succeeded by a period, squares have not been calculated\n\nAnswer: C\n\nReference Solution:\nSyntax errors are errors in the grammar of the programming language being used. They are detected by the compiler and hence the program is returned even before it is executed, i.e., no output is printed. Statements 10 and 20 are comment lines. But they are not prefaced by REM (the obligatory method of informing the BASIC compiler that a remark is forthcoming) . Hence the compiler treats 10 and 20 as instructions, which cannot be done. Compilation stops and the program is ejected at line 10. Statement 30 initializes the variable SUM. Unfortunately BASIC allows only two character variable names (of the form letter digit). Hence SUM is an invalid variable name and compilation ceases. Statement 60 is: 60IF J = 10 THEN GO TO 90(1) Now when the compiler begins translation of this statement into machine language it classifies 60 as of the form 60IF X = 10 THEN 90(2) Comparing (2) and (1), the place where 90 should be is taken by GO. Thus the compiler reads 60IF X = 10 THEN GO Since GO is not a statement number the instruction is nonsense. The program remains uncompiled. Finally in 100, END is succeeded by a period. The compiler is aware that END signifies that compilation is over and execution can begin but END. is not recognized. (Note that this last is an error only if, when the compiler has started on a line, it works through to the last column. If the compiler stops translating a line after receiving a sound construc-tion, then the period will make no difference.) After all the above errors have been corrected the program is ready for execution. It looks like this: 10REM PROGRAM TO CALCULATE SUM OF SQUARES OF 20REM FIRST TEN DIGITS 30LET S = 0 40LET J = 1 50LET S = J 60IF J = 10 THEN 90 70LET J = J + 1 80GO TO 50 90PRINT S 100END The program is executed, but the output is 10. The program gives a wrong result. Logical errors are errors in the meaning of the program. The program is grammatically sound (otherwise the compiler would have rejected it). But its meaning is not what the programmer intended. As an analogy consider the English language sentence The selfish house slept furiously. The statement has nouns and verbs in the right order and the descriptive words are acceptable too. The punctuation is accurate. But the total sentence is almost meaningless. ('Almost' since it could appear in a poem or modern novel). Examining the program for logical flaws, observe that squares have not been calculated. Thus the program must be corrected if the desired result is to be obtained: Statement 50 should be as follows: 50LET S = S + J\\uparrow2 or 50LET S = S + J\\textasteriskcenteredJ .", "ref_id": 4553, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "The following BASIC program is supposed to calculate the sum of the squares of the first 10 digits. Find the syntactical and logical errors. 10PROGRAM TO CALCULATE SUM OF SQUARES OF 20FIRST TEN DIGITS. 30LET SUM = 0 40LET J = 1 50LET S = J 60IF J = 10 THEN GO TO 90 70LET J = J + 1 80GO TO 50 90PRINT S 100END.", "options": ["Statements 30 and 40 are not prefaced by REM, SUMM is an invalid variable name, 60IF X = 10 THEN GO, END is not succeeded by a period, squares have been calculated", "Statements 10 and 20 are not prefaced by REM, SUM is an invalid variable name, 60IF X = 10 THEN GO, END is not succeeded by a period, squares have been calculated", "Statements 10 and 20 are not prefaced by REM, SUM is an invalid variable name, 60IF X = 10 THEN GO, END is succeeded by a period, squares have not been calculated", "Statements 10 and 20 are prefaced by REM, SUM is a valid variable name, 60IF X = 10 THEN GO, END is succeeded by a period, squares have not been calculated"], "answer": "C", "solution": "Syntax errors are errors in the grammar of the programming language being used. They are detected by the compiler and hence the program is returned even before it is executed, i.e., no output is printed. Statements 10 and 20 are comment lines. But they are not prefaced by REM (the obligatory method of informing the BASIC compiler that a remark is forthcoming) . Hence the compiler treats 10 and 20 as instructions, which cannot be done. Compilation stops and the program is ejected at line 10. Statement 30 initializes the variable SUM. Unfortunately BASIC allows only two character variable names (of the form letter digit). Hence SUM is an invalid variable name and compilation ceases. Statement 60 is: 60IF J = 10 THEN GO TO 90(1) Now when the compiler begins translation of this statement into machine language it classifies 60 as of the form 60IF X = 10 THEN 90(2) Comparing (2) and (1), the place where 90 should be is taken by GO. Thus the compiler reads 60IF X = 10 THEN GO Since GO is not a statement number the instruction is nonsense. The program remains uncompiled. Finally in 100, END is succeeded by a period. The compiler is aware that END signifies that compilation is over and execution can begin but END. is not recognized. (Note that this last is an error only if, when the compiler has started on a line, it works through to the last column. If the compiler stops translating a line after receiving a sound construc-tion, then the period will make no difference.) After all the above errors have been corrected the program is ready for execution. It looks like this: 10REM PROGRAM TO CALCULATE SUM OF SQUARES OF 20REM FIRST TEN DIGITS 30LET S = 0 40LET J = 1 50LET S = J 60IF J = 10 THEN 90 70LET J = J + 1 80GO TO 50 90PRINT S 100END The program is executed, but the output is 10. The program gives a wrong result. Logical errors are errors in the meaning of the program. The program is grammatically sound (otherwise the compiler would have rejected it). But its meaning is not what the programmer intended. As an analogy consider the English language sentence The selfish house slept furiously. The statement has nouns and verbs in the right order and the descriptive words are acceptable too. The punctuation is accurate. But the total sentence is almost meaningless. ('Almost' since it could appear in a poem or modern novel). Examining the program for logical flaws, observe that squares have not been calculated. Thus the program must be corrected if the desired result is to be obtained: Statement 50 should be as follows: 50LET S = S + J\\uparrow2 or 50LET S = S + J\\textasteriskcenteredJ ."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a BASIC program which calls for the input of an arbitrary number, and then prints out whether the number read in is positive, negative, or zero.\n\nOptions:\nA. Use of FOR ... NEXT loop\nB. Use of DO ... LOOP structure\nC.             Use of WHILE ... WEND loop\nD. Use of several IF ... THEN clauses\n\nAnswer: D\n\nReference Solution:\nThis problem represents an aspect of elementary decision making. The implementation of these decisions is best handled by use of several IF ... THEN clauses. 1\\O\\O REM DETERMINE IF X IS POSITIVE, NEGATIVE 11\\O REM OR ZERO 12\\O PRINT \"WHEN I ASK, YOU ENTER A NUMBER AND\"; 13\\O PRINT \"I WILL TELL YOU WHETHER YOUR NUMBER\"; 14\\O PRINT \"IS POSITIVE, NEGATIVE, OR ZERO.\" 15\\O PRINT 16\\O PRINT \"WHAT IS YOUR NUMBER?\"; 17\\O INPUT X 18\\O IF X > \\O THEN 19\\O 181 IF X < \\O THEN 21\\O 182 IF X = \\O THEN 23\\O 19\\O PRINT X; \"IS POSITIVE\" 2\\O\\O GO TO 15\\O 21\\O PRINT X; \"IS NEGATIVE\" 22\\O GO TO 15\\O 23\\O PRINT X; \"IS ZERO\" 24\\O GO TO 15\\O 999 END", "ref_id": 4554, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a BASIC program which calls for the input of an arbitrary number, and then prints out whether the number read in is positive, negative, or zero.", "options": ["Use of FOR ... NEXT loop", "Use of DO ... LOOP structure", "Use of WHILE ... WEND loop", "Use of several IF ... THEN clauses"], "answer": "D", "solution": "This problem represents an aspect of elementary decision making. The implementation of these decisions is best handled by use of several IF ... THEN clauses. 1\\O\\O REM DETERMINE IF X IS POSITIVE, NEGATIVE 11\\O REM OR ZERO 12\\O PRINT \"WHEN I ASK, YOU ENTER A NUMBER AND\"; 13\\O PRINT \"I WILL TELL YOU WHETHER YOUR NUMBER\"; 14\\O PRINT \"IS POSITIVE, NEGATIVE, OR ZERO.\" 15\\O PRINT 16\\O PRINT \"WHAT IS YOUR NUMBER?\"; 17\\O INPUT X 18\\O IF X > \\O THEN 19\\O 181 IF X < \\O THEN 21\\O 182 IF X = \\O THEN 23\\O 19\\O PRINT X; \"IS POSITIVE\" 2\\O\\O GO TO 15\\O 21\\O PRINT X; \"IS NEGATIVE\" 22\\O GO TO 15\\O 23\\O PRINT X; \"IS ZERO\" 24\\O GO TO 15\\O 999 END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a function to evaluate f(x) = e ^\\rule{1em}{1pt}(x)2 (1 - x^3 /3). Show calculation of f(3).\n\nOptions:\nA. Y = F(3.0)\nB. Y = F(5.0)\nC.             Y = F(4.0)\nD. Y = F(2.0)\n\nAnswer: A\n\nReference Solution:\nThe simplest type of function is the so-called statement function. Making use of this concept, we can immediately write: F(x) = EXP(\\rule{1em}{1pt}X{_\\ast}X){_\\ast} (1. \\rule{1em}{1pt} (X{_\\ast}{_\\ast}3)/3.) Y = F(3.0)", "ref_id": 4555, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a function to evaluate f(x) = e ^\\rule{1em}{1pt}(x)2 (1 - x^3 /3). Show calculation of f(3).", "options": ["Y = F(3.0)", "Y = F(5.0)", "Y = F(4.0)", "Y = F(2.0)"], "answer": "A", "solution": "The simplest type of function is the so-called statement function. Making use of this concept, we can immediately write: F(x) = EXP(\\rule{1em}{1pt}X{_\\ast}X){_\\ast} (1. \\rule{1em}{1pt} (X{_\\ast}{_\\ast}3)/3.) Y = F(3.0)"}, "question": "task_1"}}, {"data": {"text": "Question:\nSuppose we have a list consisting of people's names, sexes, eye colors, heights, weights, and telephone numbers. Sup pose in addition that we wish to look up the telephone num-bers of three particular people, namely Robert J. Coyle, Mary Holmes, and Victor E. Lee. Write a computer program in PL / I to accomplish this.\n\nOptions:\nA. Java program\nB. PL/I program\nC.             C++ program\nD. Python program\n\nAnswer: B\n\nReference Solution:\nWe use mnemonic notation for the alphanumeric data in the problem by using identifiers like NAME, SEX, and COLOR. We abbreviate phone numbers as NUMBER, and we desig-nate the height of the person by H and the weight by W. The program proceeds as follows. We start by declaring our four character strings and then transmitting the data to the program. Notice that in the GET LIST statement, we transmit to the program all 6 variables, even though we want only the name and phone number of that person. In the next three statements in the program, we make tests to determine if the name is Coyle, Holmes, or Lee. Note that the names must be put in quotation marks. If any of the tests yield TRUE, we go to PRINT where the desired message is printed. If any of the tests fail, we drop through to the next step. / \\textasteriskcentered PHONE NUMBERS \\textasteriskcentered / DECLARE NAME CHARACTER (15), SEX CHARACTER (7), COLOR CHARACTER (6), NUMBER CHARACTER (9); START: GET LIST (NAME, SEX, COLOR, H, W, NUMBER); IF NAME = 'ROBT J. COYLE' THEN GO TO PRINT; IF NAME = 'MARY HOLMES' THEN GO TO PRINT; IF NAME = 'VICTOR E. LEE' THEN GO TO PRINT; GO TO START; PRINT: PUT EDIT ('PHONE NO. OF', NAME, 'IS', NUMBER) (A (20), A (15), A (3), A (9)); PUT SKIP (2); GO TO START;", "ref_id": 4556, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Suppose we have a list consisting of people's names, sexes, eye colors, heights, weights, and telephone numbers. Sup pose in addition that we wish to look up the telephone num-bers of three particular people, namely Robert J. Coyle, Mary Holmes, and Victor E. Lee. Write a computer program in PL / I to accomplish this.", "options": ["Java program", "PL/I program", "C++ program", "Python program"], "answer": "B", "solution": "We use mnemonic notation for the alphanumeric data in the problem by using identifiers like NAME, SEX, and COLOR. We abbreviate phone numbers as NUMBER, and we desig-nate the height of the person by H and the weight by W. The program proceeds as follows. We start by declaring our four character strings and then transmitting the data to the program. Notice that in the GET LIST statement, we transmit to the program all 6 variables, even though we want only the name and phone number of that person. In the next three statements in the program, we make tests to determine if the name is Coyle, Holmes, or Lee. Note that the names must be put in quotation marks. If any of the tests yield TRUE, we go to PRINT where the desired message is printed. If any of the tests fail, we drop through to the next step. / \\textasteriskcentered PHONE NUMBERS \\textasteriskcentered / DECLARE NAME CHARACTER (15), SEX CHARACTER (7), COLOR CHARACTER (6), NUMBER CHARACTER (9); START: GET LIST (NAME, SEX, COLOR, H, W, NUMBER); IF NAME = 'ROBT J. COYLE' THEN GO TO PRINT; IF NAME = 'MARY HOLMES' THEN GO TO PRINT; IF NAME = 'VICTOR E. LEE' THEN GO TO PRINT; GO TO START; PRINT: PUT EDIT ('PHONE NO. OF', NAME, 'IS', NUMBER) (A (20), A (15), A (3), A (9)); PUT SKIP (2); GO TO START;"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a basic assembler language program to compute a wo-man's weekly work hours in fixed point binary, and convert the result back to decimal.\n\nOptions:\nA. Assembler language program to calculate daily work hours\nB. Assembler language program to calculate salary\nC.             Assembler language program to calculate monthly work hours\nD. Assembler language program to compute weekly work hours and convert it to decimal\n\nAnswer: D\n\nReference Solution:\nL4,= F '6'PLACE NO. OF DAYS WORKED IN L4,= F '6'PLACE NO. OF DAYS WORKED IN REGISTER4. SR5, 5CLEAR REGISTER 5 - IT WILL STORE TOTAL HOURS WORKED NXTHRSREADCARD CRDIN, CRDEOFREAD HOURS WORKED PACK DBLE, CRDHRSEACH DAY CONVERT EBCDIC DATA TO PACKED DECIMAL IN DOUBLE-WORD AREA CVB7, DBLCONVERT PACKED DECIMAL TO BINARY IN REGISTER 7 AR5, 7STORE SUM OF HOURS IN RE-GISTER 5 BCT4, NXTHRSDECREASE REGISTER 4 BY 1 AND GO TO INSTRUCTION LABELLED NXTHRS.- CVD 5, DBLECONVERT BINARY HOURS BACK TO DECIMAL. ZAPWKHRS, DBLESTORE HOURS IN AREA CALLED WKHRS CRDE OF \\textbullet \\textbullet \\textbullet \\textasteriskcenteredDATA DEFINITION FOR INPUT AREAS CARDINDS\\varphiCL80 \\varphi \\varphi CRDHRSDSCL3 DSCL77 \\textasteriskcenteredDATADEFINITION FOR WORK AREAS DBLEDSD WKHRSDSDC 3 You should note that the CVB (convert to binary) and the CVD (convert to decimal) instructions must have a double word (indicated by D in data definition) as the se-cond operand. For the CVB instruction the data in the doubleword is converted to binary and then placed in the register specified as operand 1. The reverse is done for the CVD instruction where data in the register is converted to packed decimal form and placed in the doubleword. The BCT (branch and count) instruction will decrement the con-tents of Register 4 by one each time it is encountered. It will then branch to the label specified as operand 2. When Register 4 finally contains a zero, control will go to the next sequential instruction; the CVD instruction. At this point we have found the total sum of the hours worked for that week.", "ref_id": 4557, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a basic assembler language program to compute a wo-man's weekly work hours in fixed point binary, and convert the result back to decimal.", "options": ["Assembler language program to calculate daily work hours", "Assembler language program to calculate salary", "Assembler language program to calculate monthly work hours", "Assembler language program to compute weekly work hours and convert it to decimal"], "answer": "D", "solution": "L4,= F '6'PLACE NO. OF DAYS WORKED IN L4,= F '6'PLACE NO. OF DAYS WORKED IN REGISTER4. SR5, 5CLEAR REGISTER 5 - IT WILL STORE TOTAL HOURS WORKED NXTHRSREADCARD CRDIN, CRDEOFREAD HOURS WORKED PACK DBLE, CRDHRSEACH DAY CONVERT EBCDIC DATA TO PACKED DECIMAL IN DOUBLE-WORD AREA CVB7, DBLCONVERT PACKED DECIMAL TO BINARY IN REGISTER 7 AR5, 7STORE SUM OF HOURS IN RE-GISTER 5 BCT4, NXTHRSDECREASE REGISTER 4 BY 1 AND GO TO INSTRUCTION LABELLED NXTHRS.- CVD 5, DBLECONVERT BINARY HOURS BACK TO DECIMAL. ZAPWKHRS, DBLESTORE HOURS IN AREA CALLED WKHRS CRDE OF \\textbullet \\textbullet \\textbullet \\textasteriskcenteredDATA DEFINITION FOR INPUT AREAS CARDINDS\\varphiCL80 \\varphi \\varphi CRDHRSDSCL3 DSCL77 \\textasteriskcenteredDATADEFINITION FOR WORK AREAS DBLEDSD WKHRSDSDC 3 You should note that the CVB (convert to binary) and the CVD (convert to decimal) instructions must have a double word (indicated by D in data definition) as the se-cond operand. For the CVB instruction the data in the doubleword is converted to binary and then placed in the register specified as operand 1. The reverse is done for the CVD instruction where data in the register is converted to packed decimal form and placed in the doubleword. The BCT (branch and count) instruction will decrement the con-tents of Register 4 by one each time it is encountered. It will then branch to the label specified as operand 2. When Register 4 finally contains a zero, control will go to the next sequential instruction; the CVD instruction. At this point we have found the total sum of the hours worked for that week."}, "question": "task_1"}}, {"data": {"text": "Question:\nDefine buffer and interrupt. What is the distinctionbetween thetwo?\n\nOptions:\nA. Buffers are storage areas for temporary data, while interrupts are signals that cause a task to resume.\nB. Buffers are areas of memory used to increase the processor's speed, while interrupts are external signals that stop a task.\nC.             Buffers are parts of the processor used for data input and output, while interrupts are signals that indicate the completion of a task.\nD. Buffers are areas of memory used to compensate for speed discrepancies between the processor and I/O devices, while interrupts are internal control signals that divert the machine's attention to perform another task.\n\nAnswer: D\n\nReference Solution:\nInboth inputand output of data or physical records, the memory hasreserved buffers. These are areas of core memory outside the main processor'smemory used to compensate for the discrepancy between the rela-tivelyquick speed of the processor and the slower electromechanical I/O devices such as printers or card readers. An economical use of buffers is through logical switching. Say we have twofixed-length buffers, one each for input and output. We want to output somerecords that are presently sitting in an input buffer by using an outputbuffer. If the status of the output buffer is idle, and if it has adequate length, a simple change of machine addresses, giving the output buffer theinput buffer's address, will send the input into the output stream. There is no physical movement of data, across memory space, but only an addressswitch, hence the name logical switch-ing. This concept is used in multiprogrammingsystems. An interrupt is an internal control signal that diverts the machine's attention awayfrom one task and causes it to perform another. These interrupts are associatedwith various priorities within the CPU. If the interrupt facility is disabled, the interrupt request will be ig-nored. If the output of an important programis expect-ed, the other programs in the system will be temporarily halteduntil the important one is completed. It is through the interrupt that thistask of halting is per-formed . Buffers and interrupts are both features of time-sharing and multiprogrammingsystems. The reason for their implementation is so that nopart of the CPU or I/O accessories will be left idle.", "ref_id": 4558, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Define buffer and interrupt. What is the distinctionbetween thetwo?", "options": ["Buffers are storage areas for temporary data, while interrupts are signals that cause a task to resume.", "Buffers are areas of memory used to increase the processor's speed, while interrupts are external signals that stop a task.", "Buffers are parts of the processor used for data input and output, while interrupts are signals that indicate the completion of a task.", "Buffers are areas of memory used to compensate for speed discrepancies between the processor and I/O devices, while interrupts are internal control signals that divert the machine's attention to perform another task."], "answer": "D", "solution": "Inboth inputand output of data or physical records, the memory hasreserved buffers. These are areas of core memory outside the main processor'smemory used to compensate for the discrepancy between the rela-tivelyquick speed of the processor and the slower electromechanical I/O devices such as printers or card readers. An economical use of buffers is through logical switching. Say we have twofixed-length buffers, one each for input and output. We want to output somerecords that are presently sitting in an input buffer by using an outputbuffer. If the status of the output buffer is idle, and if it has adequate length, a simple change of machine addresses, giving the output buffer theinput buffer's address, will send the input into the output stream. There is no physical movement of data, across memory space, but only an addressswitch, hence the name logical switch-ing. This concept is used in multiprogrammingsystems. An interrupt is an internal control signal that diverts the machine's attention awayfrom one task and causes it to perform another. These interrupts are associatedwith various priorities within the CPU. If the interrupt facility is disabled, the interrupt request will be ig-nored. If the output of an important programis expect-ed, the other programs in the system will be temporarily halteduntil the important one is completed. It is through the interrupt that thistask of halting is per-formed . Buffers and interrupts are both features of time-sharing and multiprogrammingsystems. The reason for their implementation is so that nopart of the CPU or I/O accessories will be left idle."}, "question": "task_1"}}, {"data": {"text": "Question:\nClassify the six kinds of APL function.\n\nOptions:\nA. APL functions can be classified based on their complexity.\nB. APL functions can be either simple or complex.\nC.             APL functions are categorized by their usage in the program.\nD. APL functions can be niladic, monadic, and dyadic and each of these can be either limited or unlimited.\n\nAnswer: D\n\nReference Solution:\nIn APL, function are classified on the basis of two main criteria: i) The number of arguments contained in the header (the header is the name of the program; it follows the \\nablaop-erator) . ii) Whether the function is limited or unlimited. A func-tion is limited if it cannot be used as in a compound expression. Per contra, an unlimited function can be used within another function without causing an error condition. i) APL functions can contain zero, one or two arguments are called niladic , monadic and dyadic functions respectively. Thus we see that there are six kinds of APL functions: three kinds, depending on the number of arguments and the choice of \"limited\" or \"unlimited\" for each kind. Examples of each type follows: \\nablaINFLATION [1]'ENTER BASE-YEAR INDEX' [2]CHEAP \\leftarrow [] [3]'ENTER PRESENT INDEX' [4]TOOMUCH \\leftarrow [] [5]PERCENT \\leftarrow 100 \u00d7 TOOMUCH \\div CHEAP [6]\"DISTRESS:\" PERCENT [7]\\nabla The function INFLATION isniladicbecause it has no arguments. It is limited because it is not used in the main body of the program. b)Niladicand unlimited: \\nablaH \\leftarrow HEIGHT [1]H \\leftarrow H \\div 2.0 [2]\\nabla HEIGHT is a program concerning the effects of wearing padded shoes. The function is unlimited because its results will be stored in H which is contained in both the header and main program. c) Monadic and limited: \\nablaSQUARE N [1]N \\textasteriskcentered 2 [2]\\nabla Here the function SQUARE which computes the square of a number is a function of one variable. Thus it is monadic. It is limited since it cannot be used in the program. d) Monadic and unlimited: \\nablaC \\leftarrow CUBE N [1]C \\leftarrow N \\textasteriskcentered 3 [2]\\nabla The function CUBE which computes the cube of a number is a function of one variable and therefore monadic. Now CUBE can be used as an argument in other APL functions. Hence it is unlimited. e) Dyadic and unlimited: \\nablaR \\leftarrow N ROUNDOFF D [1]M \\leftarrow N + 5 \u00d7 10\\textasteriskcentered - (D + 1) [2]M \\leftarrow LM \u00d7 10\\textasteriskcenteredD [3]R \\leftarrow M \u00d7 10\\textasteriskcentered - D [4]\\nabla Theroundofffunction rounds off a given integer to a required number of decimal places D. It is a function of both N and D and is therefore dyadic, f) Dyadic and limited: \\nablaR CYVOL H [1]'THE VOLUME OF THE CYLINDER IS: ' [2]V \\leftarrow 3.14159 \u00d7 H \u00d7 R\\textasteriskcentered2 [3]V [4]\\nabla Here CYVOL is a function of H and R but it does not oc-cur in the body of the program.", "ref_id": 4559, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Classify the six kinds of APL function.", "options": ["APL functions can be classified based on their complexity.", "APL functions can be either simple or complex.", "APL functions are categorized by their usage in the program.", "APL functions can be niladic, monadic, and dyadic and each of these can be either limited or unlimited."], "answer": "D", "solution": "In APL, function are classified on the basis of two main criteria: i) The number of arguments contained in the header (the header is the name of the program; it follows the \\nablaop-erator) . ii) Whether the function is limited or unlimited. A func-tion is limited if it cannot be used as in a compound expression. Per contra, an unlimited function can be used within another function without causing an error condition. i) APL functions can contain zero, one or two arguments are called niladic , monadic and dyadic functions respectively. Thus we see that there are six kinds of APL functions: three kinds, depending on the number of arguments and the choice of \"limited\" or \"unlimited\" for each kind. Examples of each type follows: \\nablaINFLATION [1]'ENTER BASE-YEAR INDEX' [2]CHEAP \\leftarrow [] [3]'ENTER PRESENT INDEX' [4]TOOMUCH \\leftarrow [] [5]PERCENT \\leftarrow 100 \u00d7 TOOMUCH \\div CHEAP [6]\"DISTRESS:\" PERCENT [7]\\nabla The function INFLATION isniladicbecause it has no arguments. It is limited because it is not used in the main body of the program. b)Niladicand unlimited: \\nablaH \\leftarrow HEIGHT [1]H \\leftarrow H \\div 2.0 [2]\\nabla HEIGHT is a program concerning the effects of wearing padded shoes. The function is unlimited because its results will be stored in H which is contained in both the header and main program. c) Monadic and limited: \\nablaSQUARE N [1]N \\textasteriskcentered 2 [2]\\nabla Here the function SQUARE which computes the square of a number is a function of one variable. Thus it is monadic. It is limited since it cannot be used in the program. d) Monadic and unlimited: \\nablaC \\leftarrow CUBE N [1]C \\leftarrow N \\textasteriskcentered 3 [2]\\nabla The function CUBE which computes the cube of a number is a function of one variable and therefore monadic. Now CUBE can be used as an argument in other APL functions. Hence it is unlimited. e) Dyadic and unlimited: \\nablaR \\leftarrow N ROUNDOFF D [1]M \\leftarrow N + 5 \u00d7 10\\textasteriskcentered - (D + 1) [2]M \\leftarrow LM \u00d7 10\\textasteriskcenteredD [3]R \\leftarrow M \u00d7 10\\textasteriskcentered - D [4]\\nabla Theroundofffunction rounds off a given integer to a required number of decimal places D. It is a function of both N and D and is therefore dyadic, f) Dyadic and limited: \\nablaR CYVOL H [1]'THE VOLUME OF THE CYLINDER IS: ' [2]V \\leftarrow 3.14159 \u00d7 H \u00d7 R\\textasteriskcentered2 [3]V [4]\\nabla Here CYVOL is a function of H and R but it does not oc-cur in the body of the program."}, "question": "task_1"}}, {"data": {"text": "Question:\nShow how i ) the compression function ii) the expansion function iii) Take and Drop functions are used in APL.\n\nOptions:\nA. Compression is used to compress the size of the matrix, expansion is used to increase the size of the matrix, and Take and Drop functions are used to manipulate elements within the matrix\nB. Compression is used to remove unnecessary data from the matrix, expansion is used to fill in missing data in the matrix, and Take and Drop functions are used to rearrange the elements in the matrix\nC.             Compression is used to reduce the complexity of the matrix, expansion is used to increase the complexity of the matrix, and Take and Drop functions are used to simplify the matrix\nD. Compression is used to select rows or columns from a given matrix, expansion is used to insert rows and columns of zeros in numeric matrices or blanks in character matrices, and Take and Drop functions are used to select a submatrix from a given matrix.\n\nAnswer: D\n\nReference Solution:\nAssume the following matrix has been stored in memory \\mid61220144153\\mid \\mid282284441370\\mid M =\\mid4961451184169474\\mid \\mid1729405851210961208\\mid i) Compression is a dyadic function used to select rows or columns from a given matrix. Its general form is L/ [K]M. L is a binary vector composed of ones and zeros. M is a matrix, K is an index indicating which dimension of M is to be compressed and / separates the two arguments. Suppose it is desired to select the first and third rows only of (1). The function 1 0 1 0 / [1]M gives 61220144153 4961451184169474 The K index indicates the dimension of compression, i.e., [1] = row compression and [2] = column compression. The command 0 1 0 1/[2]M yields, when applied to (1) : 2441 145169 40585961 (The first column here represents all numbers between 1 and 50,000 that are equal to the sum of the factorials of their digits. For example, 145 = 1! + 4! + 5!. The second column gives two pairs of numbers that are the reverse of one another and whose product is a square.) ii) Expansion is a dyadic function used to insert rows and columns of zeros into numeric matrices and rows and columns of blanks into character matrices. Its general form is L/ [K]M LetG = B S H A H T W A D E Q B A R T This is a matrix of names; the first character is the initi-al and the remainder is the last name. To make M more legible, perform the function: 1 0 1111\\textbackslash [2]G, which yields B S H A H T W A D E Q B A R T iii) Take and drop: These are dyadic functions used for selecting a submatrix from a given matrix. Their gen-eral form is L+M and L+M. L is a vector containing two components. The first component represents the number of rows to be taken or dropped while the second component gives the number of columns taken or dropped. Suppose we want to select Ramajunam's number (1729) from M. This is a 1\u00d71 sub-matrix. The command 3 - 4\\downarrowM causes the top three rows (3) and the right four columns (-4) to be dropped (\\downarrow). The result is 1729.", "ref_id": 4560, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Show how i ) the compression function ii) the expansion function iii) Take and Drop functions are used in APL.", "options": ["Compression is used to compress the size of the matrix, expansion is used to increase the size of the matrix, and Take and Drop functions are used to manipulate elements within the matrix", "Compression is used to remove unnecessary data from the matrix, expansion is used to fill in missing data in the matrix, and Take and Drop functions are used to rearrange the elements in the matrix", "Compression is used to reduce the complexity of the matrix, expansion is used to increase the complexity of the matrix, and Take and Drop functions are used to simplify the matrix", "Compression is used to select rows or columns from a given matrix, expansion is used to insert rows and columns of zeros in numeric matrices or blanks in character matrices, and Take and Drop functions are used to select a submatrix from a given matrix."], "answer": "D", "solution": "Assume the following matrix has been stored in memory \\mid61220144153\\mid \\mid282284441370\\mid M =\\mid4961451184169474\\mid \\mid1729405851210961208\\mid i) Compression is a dyadic function used to select rows or columns from a given matrix. Its general form is L/ [K]M. L is a binary vector composed of ones and zeros. M is a matrix, K is an index indicating which dimension of M is to be compressed and / separates the two arguments. Suppose it is desired to select the first and third rows only of (1). The function 1 0 1 0 / [1]M gives 61220144153 4961451184169474 The K index indicates the dimension of compression, i.e., [1] = row compression and [2] = column compression. The command 0 1 0 1/[2]M yields, when applied to (1) : 2441 145169 40585961 (The first column here represents all numbers between 1 and 50,000 that are equal to the sum of the factorials of their digits. For example, 145 = 1! + 4! + 5!. The second column gives two pairs of numbers that are the reverse of one another and whose product is a square.) ii) Expansion is a dyadic function used to insert rows and columns of zeros into numeric matrices and rows and columns of blanks into character matrices. Its general form is L/ [K]M LetG = B S H A H T W A D E Q B A R T This is a matrix of names; the first character is the initi-al and the remainder is the last name. To make M more legible, perform the function: 1 0 1111\\textbackslash [2]G, which yields B S H A H T W A D E Q B A R T iii) Take and drop: These are dyadic functions used for selecting a submatrix from a given matrix. Their gen-eral form is L+M and L+M. L is a vector containing two components. The first component represents the number of rows to be taken or dropped while the second component gives the number of columns taken or dropped. Suppose we want to select Ramajunam's number (1729) from M. This is a 1\u00d71 sub-matrix. The command 3 - 4\\downarrowM causes the top three rows (3) and the right four columns (-4) to be dropped (\\downarrow). The result is 1729."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite Declare statements for the following variables or con-stants, making use of the rules of PL/I regarding attributes. Also explain the reasons why you selected the particularat-tributes. The variables are given as follows: a) A variable named PERCENT which takes values from 0\\textbullet00 to 100\\textbullet00.PERCENT is an array of 8 elements. b) A variable named AMOUNT which represents dollars and cents, from 0\\textbullet00 to 1 million dollars. c) A variable named NUMBER which represents Avogadro's number= 6\\textbullet022\u00d710^23 d) A variable named TOTAL which represents integer numbersfrom 1 to 4000, to be stored in a binary form.\n\nOptions:\nA. DCL AMOUNT FIXED(10, 2) DEC REAL; DCL NUMBER FLOAT(5) REAL DECIMAL; DCL TOTAL FIXED(10) BINARY REAL;\nB. DCL PERCENT(1:8) FIXED (6,2) REAL DEC; DCL AMOUNT FIXED(8, 3) DEC REAL; DCL NUMBER FLOAT(3) REAL DECIMAL; DCL TOTAL FIXED(11) BINARY REAL;\nC.             DCL PERCENT(1:8) FIXED (5,2) REAL DEC; DCL AMOUNT FIXED(9, 2) DEC REAL; DCL NUMBER FLOAT(4) REAL DECIMAL; DCL TOTAL FIXED(12) BINARY REAL;\nD. DCL PERCENT(1:8) FIXED (5,3) REAL DEC; DCL AMOUNT FIXED(9, 1) DEC REAL; DCL NUMBER FLOAT(4) REAL DECIMAL; DCL TOTAL FIXED(13) BINARY REAL;\n\nAnswer: C\n\nReference Solution:\na) We can Declare PERCENT as follows: DCLPERCENT(1:8) FIXED (5,2) REAL DEC; Here, the parentheses (1:8) shows that PERCENT is an array. FIXED specifies the Scale. (5, 2) specifies the precision, which is of the form XXX\\textbulletXX. REAL specifies the Mode DEC specifies the Base. b) We can Declare AMOUNT as follows: DCL AMOUNTFIXED(9, 2) DEC REAL; In the above, the words FIXED, DEC and REAL specify the scale, the Base and the Mode respectively.Also, (9, 2) can represent num-bers from -9,999,999\\textbullet99 to +9,999,999\\textbullet99.Thus, our range of 0\\textbullet00 to 1,000,000\\textbullet00 canbe easilyaccomodatedin this range. c) We can Declare NUMBER as follows: DCL NUMBERFLOAT(4) REAL DECIMAL; In the above, the value of the variable NUMBER is equal to 6\\textbullet022 \u00d7 10^23. Hence, if we tried to use the FIXED Scale, we would have to specify its scaleand precision as follows: FIXED (26, 3). This huge number of almost all digits of zero, is very cum-bersome to use, store, etc. Hence, we use instead the Floating point scale as above. The specificationFloat(4) means that the number is of the form X\\textbulletXXX, i.e., 4 digits, with the remaining multiplier of powers of ten implicitly provided. A printoutof the NUMBER would be: 6\\textbullet022E + 23. d) We declare TOTAL as follows: DCL TOTALFIXED(12) BINARY REAL; In the above, we have specified the Scale as FIXED, the Mode as REAL, and, the Base as BINARY. The reason for specifying the precision as (12) isas follows: We are given that the variable TOTAL takes values from 0 to 4000. And we observe that a number 2^11 = 2048,2^12 = 4096, 2^13 = 8192. Hence, a precision of 2^12 is just right to represent a range from 0 to 4000.", "ref_id": 4561, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write Declare statements for the following variables or con-stants, making use of the rules of PL/I regarding attributes. Also explain the reasons why you selected the particularat-tributes. The variables are given as follows: a) A variable named PERCENT which takes values from 0\\textbullet00 to 100\\textbullet00.PERCENT is an array of 8 elements. b) A variable named AMOUNT which represents dollars and cents, from 0\\textbullet00 to 1 million dollars. c) A variable named NUMBER which represents Avogadro's number= 6\\textbullet022\u00d710^23 d) A variable named TOTAL which represents integer numbersfrom 1 to 4000, to be stored in a binary form.", "options": ["DCL AMOUNT FIXED(10, 2) DEC REAL; DCL NUMBER FLOAT(5) REAL DECIMAL; DCL TOTAL FIXED(10) BINARY REAL;", "DCL PERCENT(1:8) FIXED (6,2) REAL DEC; DCL AMOUNT FIXED(8, 3) DEC REAL; DCL NUMBER FLOAT(3) REAL DECIMAL; DCL TOTAL FIXED(11) BINARY REAL;", "DCL PERCENT(1:8) FIXED (5,2) REAL DEC; DCL AMOUNT FIXED(9, 2) DEC REAL; DCL NUMBER FLOAT(4) REAL DECIMAL; DCL TOTAL FIXED(12) BINARY REAL;", "DCL PERCENT(1:8) FIXED (5,3) REAL DEC; DCL AMOUNT FIXED(9, 1) DEC REAL; DCL NUMBER FLOAT(4) REAL DECIMAL; DCL TOTAL FIXED(13) BINARY REAL;"], "answer": "C", "solution": "a) We can Declare PERCENT as follows: DCLPERCENT(1:8) FIXED (5,2) REAL DEC; Here, the parentheses (1:8) shows that PERCENT is an array. FIXED specifies the Scale. (5, 2) specifies the precision, which is of the form XXX\\textbulletXX. REAL specifies the Mode DEC specifies the Base. b) We can Declare AMOUNT as follows: DCL AMOUNTFIXED(9, 2) DEC REAL; In the above, the words FIXED, DEC and REAL specify the scale, the Base and the Mode respectively.Also, (9, 2) can represent num-bers from -9,999,999\\textbullet99 to +9,999,999\\textbullet99.Thus, our range of 0\\textbullet00 to 1,000,000\\textbullet00 canbe easilyaccomodatedin this range. c) We can Declare NUMBER as follows: DCL NUMBERFLOAT(4) REAL DECIMAL; In the above, the value of the variable NUMBER is equal to 6\\textbullet022 \u00d7 10^23. Hence, if we tried to use the FIXED Scale, we would have to specify its scaleand precision as follows: FIXED (26, 3). This huge number of almost all digits of zero, is very cum-bersome to use, store, etc. Hence, we use instead the Floating point scale as above. The specificationFloat(4) means that the number is of the form X\\textbulletXXX, i.e., 4 digits, with the remaining multiplier of powers of ten implicitly provided. A printoutof the NUMBER would be: 6\\textbullet022E + 23. d) We declare TOTAL as follows: DCL TOTALFIXED(12) BINARY REAL; In the above, we have specified the Scale as FIXED, the Mode as REAL, and, the Base as BINARY. The reason for specifying the precision as (12) isas follows: We are given that the variable TOTAL takes values from 0 to 4000. And we observe that a number 2^11 = 2048,2^12 = 4096, 2^13 = 8192. Hence, a precision of 2^12 is just right to represent a range from 0 to 4000."}, "question": "task_1"}}, {"data": {"text": "Question:\nA rocket blasts off from Earth at 12 noon. The original mass of the rocket is M_0 , and the exit velocity of the fuel jet isV_e_. Assume that fuel is burned at a constant rate, dm/dt. How high will the rocket be at 12:15 PM? (assuming a straight-line trajectory). Write a FORTRAN program to find the height at intervals of 0.5 minutes.\n\nOptions:\nA. FORTRAN program to calculate the rocket's fuel consumption\nB. Python program to calculate the rocket's height\nC.             FORTRAN program to calculate the rocket's height\nD. Java program to calculate the rocket's speed\n\nAnswer: C\n\nReference Solution:\nForce may be expressed as the change of momentum, as given by Newton's second law: F =dp/dt. Now, we establish that positive y is the vertical direction upwards. If M_0 is the total mass of rocket and fuel before the launch, and m is the mass of the exiting fuel jet, then the rate of change in momentum is given by: F = (d/dt)(MV) + (V -V_e) (dm/dt) We must also take into account the force of gravity, which is acting against the motion of the rocket. The formula will not be derived step-by-step here; a text on differential equations will have the thorough explanation. However, all variables will be explained, after presenting the general equation. The initial condition v = 0 at t = 0 yields the equation: V = -gt-V_eln[(m_0 -ut) / u] then, by integrating, the equation of motion is obtained, which expresses the height y as a function of time t: y = -(1/2)gt2+V_e[t + {( m_0 -ut) / u} 1n {(m_0 -ut) / m_0}] The variables are as follows: y = vertical height; -(1/2)gt^2 = the effect of gravity pulling the rocket downward; hence the use of the negative sign. V_e= the exit velocity of the fuel jet M_0 = original mass of the rocket plus theunburaedfuel u = dm/dt= the rate of change of the mass of the unburned fuel Note that as the rocket rises, the mass of the fuel, and ultimately, the total mass of the rocket is decreasing. Also notice that in the program, a decision should be made upon appropriate values for M_0, \\mu ,V_e. It is assumed that these have already been read in. Also, since g is defined in meters per sec^2 , it may be best to use the MKS system of units. CSIMULATE IHE VERTICAL ASCENT OF AN CUNCONTROLLED ROCKET FOR 15 MINUTES CAT 30-SECOND INTERVALS Y = 0.0 G = 9.80616 WRITE (5,100) 100FORMAT (1X,'TIME', 5X, 'HEIGHT') DO 20 I = 1,30 T = 0.5 {_\\ast} FLOAT(I) Y = -0. 5{_\\ast}G{_\\ast} (T{_\\ast}{_\\ast}2) + (VE{_\\ast} (T + (RMD - (RMU{_\\ast} 1T))RMU){_\\ast}L0G((RMO - RMU){_\\ast}T/RMO)) WRITE (5,101) T,Y 101FORMAT (2X, F5.2, 4X, F12.4) 20CONTINUE STOP END SAMPLE OUTPUT: TIMEHEIGHT 0.50 1.00 1.50 2.00", "ref_id": 4562, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "A rocket blasts off from Earth at 12 noon. The original mass of the rocket is M_0 , and the exit velocity of the fuel jet isV_e_. Assume that fuel is burned at a constant rate, dm/dt. How high will the rocket be at 12:15 PM? (assuming a straight-line trajectory). Write a FORTRAN program to find the height at intervals of 0.5 minutes.", "options": ["FORTRAN program to calculate the rocket's fuel consumption", "Python program to calculate the rocket's height", "FORTRAN program to calculate the rocket's height", "Java program to calculate the rocket's speed"], "answer": "C", "solution": "Force may be expressed as the change of momentum, as given by Newton's second law: F =dp/dt. Now, we establish that positive y is the vertical direction upwards. If M_0 is the total mass of rocket and fuel before the launch, and m is the mass of the exiting fuel jet, then the rate of change in momentum is given by: F = (d/dt)(MV) + (V -V_e) (dm/dt) We must also take into account the force of gravity, which is acting against the motion of the rocket. The formula will not be derived step-by-step here; a text on differential equations will have the thorough explanation. However, all variables will be explained, after presenting the general equation. The initial condition v = 0 at t = 0 yields the equation: V = -gt-V_eln[(m_0 -ut) / u] then, by integrating, the equation of motion is obtained, which expresses the height y as a function of time t: y = -(1/2)gt2+V_e[t + {( m_0 -ut) / u} 1n {(m_0 -ut) / m_0}] The variables are as follows: y = vertical height; -(1/2)gt^2 = the effect of gravity pulling the rocket downward; hence the use of the negative sign. V_e= the exit velocity of the fuel jet M_0 = original mass of the rocket plus theunburaedfuel u = dm/dt= the rate of change of the mass of the unburned fuel Note that as the rocket rises, the mass of the fuel, and ultimately, the total mass of the rocket is decreasing. Also notice that in the program, a decision should be made upon appropriate values for M_0, \\mu ,V_e. It is assumed that these have already been read in. Also, since g is defined in meters per sec^2 , it may be best to use the MKS system of units. CSIMULATE IHE VERTICAL ASCENT OF AN CUNCONTROLLED ROCKET FOR 15 MINUTES CAT 30-SECOND INTERVALS Y = 0.0 G = 9.80616 WRITE (5,100) 100FORMAT (1X,'TIME', 5X, 'HEIGHT') DO 20 I = 1,30 T = 0.5 {_\\ast} FLOAT(I) Y = -0. 5{_\\ast}G{_\\ast} (T{_\\ast}{_\\ast}2) + (VE{_\\ast} (T + (RMD - (RMU{_\\ast} 1T))RMU){_\\ast}L0G((RMO - RMU){_\\ast}T/RMO)) WRITE (5,101) T,Y 101FORMAT (2X, F5.2, 4X, F12.4) 20CONTINUE STOP END SAMPLE OUTPUT: TIMEHEIGHT 0.50 1.00 1.50 2.00"}, "question": "task_1"}}, {"data": {"text": "Question:\nDescribe the operations and built-in functions used for char-acterstring manipulations.\n\nOptions:\nA. Trigonometric functions and Logarithmic functions\nB. The operations and built-in functions used for character string manipulations include concatenation, condition testing and comparison operations, and three built-in functions in PL/I: LENGTH, SUBSTR, and INDEX.\nC.             Modulo operation and absolute value function\nD. Division and Multiplication operations\n\nAnswer: B\n\nReference Solution:\nOne of the most useful operations on character strings is called concatenation. Concatenation is used to join two characterstring operands, giving a single character string as a result. For example, 'JANEb' \\vert\\vert 'FONDA' = 'JANEbFONDA' The concatenation operator must connect the character string JANEbwith the character string FONDA. The stringJANEbFONDAwill result. The concatenation operator is represented by \\vert\\vert. The string resulting from the execution of a concatenation oper-ation has a length equal to sum of the lengths of the two operands (character strings). To understand the processing of variable length and fixed length string data, consider the following example. DECLARE[(FIRST_NAME, LAST_NAME) CHAR(10), STUDENT_NAME CHAR(15)] VARYING; GET LIST(FIRST_NAME, LAST.NAME); STUDENT_NAME = FIRST_NAME \\vert\\vertb\\vert\\vert LAST_NAME; If on the data card we have 'JANE', 'FONDA' thentheGET statement creates the followings VariableValueCurrent length FIRST_NAMEJANE4 LAST_NAMEFONDA5 but due to the varying attribute, no blanks are added, and STUDENT_NAME =JANEbFONDA butif the varying attribute is not specified thentheGET statement creates thefollowing: VariableValueCurrent length FIRST_NAMEJANEbbbbbb10 LAST_NAMEFONDAbbbbbb10 Hence STUDENT_NAME =JANEbbbbbbFONDAbbbbbb. It has a length of21 characters. But the declared length is 15 so the last 6 characters will betruncated, and hence the following is obtained: STUDENT_NAME =JANEbbbbbbFOND Condition Testing and comparison Operations: All eight comparison operators (>,>=,= ,<=,<,\\lnot>,\\textquotedblleft\\lnot= ,\\lnot<) , together withthe condition-testing IF statement can be used with character type operands. Comparison can only be made with character strings of the same length. If the operands are of different lengths, the shorter character string valueis expanded at the right with blank characters. If two character stringsof length zero (i.e., null strings) are compared, the result of the '=' comparisonis true. All other comparison operators re-turn a false when appliedto two null-string operands. Character strings of more than one characterare compared, character by character, in a left-to-right order. STRING BUILT-IN FUNCTIONS: For string manipulations, three built-in functions are provided in PL/I. 1) LENGTH built-in function 2) SUBSTR built-in function 3) INDEX built-in function LENGTH Built-in function:The length of character string variables declaredwith varying attributes may change during the execution of the PL/Iprogrma.It may be necessary to utilize the current length of a characterstring during cal-culations . The built-in function 'LENGTH' returns an integer value which is the currentlength of the character string. e.g.STUDENT_NAME = 'JERRY' N = LENGTH (STUDENT_NAME); LENGTH returns a value of 5 as the length of the character string. The SUBSTR Built-in function:The substring function extracts a segmentof a string (i.e. a substring) from a given character string. The functionreference uses three arguments. e.g.TAR = SUBSTR (CHAR-STRING,i, j) 1. The first argument CHAR-STRING identifies thechar-acterstring fromwhich the selection process is to take place. 2. The second argument 'i' identifies the starting position in the characterstring from where extraction of the substring is to be done. It isalways an integer value. If k is the current length of a character string, then, 0 <i\\leq k. 3. The third argument ' j ' specifies the length of the substring extracted.' j' is also always an integer. If the value of j is zero, the substringbuilt-in function returns a null string. It is not necessary that this argument, viz., ' j ' always be specified explicitly. e.g.STUDENT_NAME = 'TOMbANUTH'. LAST_NAME =SUBSTR(STUDENT_NAME,5,3) Then from the character string STUDENT_NAME a substring has to beextracted and assigned to the variable LAST_NAME. Herei=5 which indicatesthat the substring begins from the 5th position i.e. A. Also, j=3 whichgives the length of the substring to be extracted. Hence LAST_NAME = ANU. If j was not specified e.g.LAST_NAME =SUBSTR(STUDENT_NAME,5). thenthe substring returned starts from the 5th place, and extends up to theend of the character-string. Thus, LAST_NAME = ANUTH. The substring built-in function may also appear on the left-hand sideof the assignment operator (=) . In these cases, the built-in function is usedas a pseudo-variable. The purpose is to replace a part of a character stringitem with a new value. For example, consider the following: STUDENT_NAME = 'JAMESbCOOK' SUBSTR(STUDENT_NAME,1,5) = 'HARRY' producesa new value for the variable STUDENT_NAME. Thus, STUDENT_NAME =HARRYbCOOK. The INDEX Built-in function: The INDEX built-in func-tion tests a givencharacter string value for the occurrence of a specific substring, and returnsan integer value. The search is performed from left-to-right and the integervalue returned specifies the leftmost position in the first sub-string matched. If no match is found, the value zero isre-turned . e.g.STUDENT_NAME = 'TOMbPETERSON' K =INDEX[STUDENT_NAME,'b'] A search forbis made and an integer value of 4 is returned because ab b b appearsin the 4th position in the character String 'TOMbPETERSON' . Thus, K = 4. These three built-in functions, along with the concaten-ation operationprovide us with a powerful tool to operate on character string data.", "ref_id": 4563, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Describe the operations and built-in functions used for char-acterstring manipulations.", "options": ["Trigonometric functions and Logarithmic functions", "The operations and built-in functions used for character string manipulations include concatenation, condition testing and comparison operations, and three built-in functions in PL/I: LENGTH, SUBSTR, and INDEX.", "Modulo operation and absolute value function", "Division and Multiplication operations"], "answer": "B", "solution": "One of the most useful operations on character strings is called concatenation. Concatenation is used to join two characterstring operands, giving a single character string as a result. For example, 'JANEb' \\vert\\vert 'FONDA' = 'JANEbFONDA' The concatenation operator must connect the character string JANEbwith the character string FONDA. The stringJANEbFONDAwill result. The concatenation operator is represented by \\vert\\vert. The string resulting from the execution of a concatenation oper-ation has a length equal to sum of the lengths of the two operands (character strings). To understand the processing of variable length and fixed length string data, consider the following example. DECLARE[(FIRST_NAME, LAST_NAME) CHAR(10), STUDENT_NAME CHAR(15)] VARYING; GET LIST(FIRST_NAME, LAST.NAME); STUDENT_NAME = FIRST_NAME \\vert\\vertb\\vert\\vert LAST_NAME; If on the data card we have 'JANE', 'FONDA' thentheGET statement creates the followings VariableValueCurrent length FIRST_NAMEJANE4 LAST_NAMEFONDA5 but due to the varying attribute, no blanks are added, and STUDENT_NAME =JANEbFONDA butif the varying attribute is not specified thentheGET statement creates thefollowing: VariableValueCurrent length FIRST_NAMEJANEbbbbbb10 LAST_NAMEFONDAbbbbbb10 Hence STUDENT_NAME =JANEbbbbbbFONDAbbbbbb. It has a length of21 characters. But the declared length is 15 so the last 6 characters will betruncated, and hence the following is obtained: STUDENT_NAME =JANEbbbbbbFOND Condition Testing and comparison Operations: All eight comparison operators (>,>=,= ,<=,<,\\lnot>,\\textquotedblleft\\lnot= ,\\lnot<) , together withthe condition-testing IF statement can be used with character type operands. Comparison can only be made with character strings of the same length. If the operands are of different lengths, the shorter character string valueis expanded at the right with blank characters. If two character stringsof length zero (i.e., null strings) are compared, the result of the '=' comparisonis true. All other comparison operators re-turn a false when appliedto two null-string operands. Character strings of more than one characterare compared, character by character, in a left-to-right order. STRING BUILT-IN FUNCTIONS: For string manipulations, three built-in functions are provided in PL/I. 1) LENGTH built-in function 2) SUBSTR built-in function 3) INDEX built-in function LENGTH Built-in function:The length of character string variables declaredwith varying attributes may change during the execution of the PL/Iprogrma.It may be necessary to utilize the current length of a characterstring during cal-culations . The built-in function 'LENGTH' returns an integer value which is the currentlength of the character string. e.g.STUDENT_NAME = 'JERRY' N = LENGTH (STUDENT_NAME); LENGTH returns a value of 5 as the length of the character string. The SUBSTR Built-in function:The substring function extracts a segmentof a string (i.e. a substring) from a given character string. The functionreference uses three arguments. e.g.TAR = SUBSTR (CHAR-STRING,i, j) 1. The first argument CHAR-STRING identifies thechar-acterstring fromwhich the selection process is to take place. 2. The second argument 'i' identifies the starting position in the characterstring from where extraction of the substring is to be done. It isalways an integer value. If k is the current length of a character string, then, 0 <i\\leq k. 3. The third argument ' j ' specifies the length of the substring extracted.' j' is also always an integer. If the value of j is zero, the substringbuilt-in function returns a null string. It is not necessary that this argument, viz., ' j ' always be specified explicitly. e.g.STUDENT_NAME = 'TOMbANUTH'. LAST_NAME =SUBSTR(STUDENT_NAME,5,3) Then from the character string STUDENT_NAME a substring has to beextracted and assigned to the variable LAST_NAME. Herei=5 which indicatesthat the substring begins from the 5th position i.e. A. Also, j=3 whichgives the length of the substring to be extracted. Hence LAST_NAME = ANU. If j was not specified e.g.LAST_NAME =SUBSTR(STUDENT_NAME,5). thenthe substring returned starts from the 5th place, and extends up to theend of the character-string. Thus, LAST_NAME = ANUTH. The substring built-in function may also appear on the left-hand sideof the assignment operator (=) . In these cases, the built-in function is usedas a pseudo-variable. The purpose is to replace a part of a character stringitem with a new value. For example, consider the following: STUDENT_NAME = 'JAMESbCOOK' SUBSTR(STUDENT_NAME,1,5) = 'HARRY' producesa new value for the variable STUDENT_NAME. Thus, STUDENT_NAME =HARRYbCOOK. The INDEX Built-in function: The INDEX built-in func-tion tests a givencharacter string value for the occurrence of a specific substring, and returnsan integer value. The search is performed from left-to-right and the integervalue returned specifies the leftmost position in the first sub-string matched. If no match is found, the value zero isre-turned . e.g.STUDENT_NAME = 'TOMbPETERSON' K =INDEX[STUDENT_NAME,'b'] A search forbis made and an integer value of 4 is returned because ab b b appearsin the 4th position in the character String 'TOMbPETERSON' . Thus, K = 4. These three built-in functions, along with the concaten-ation operationprovide us with a powerful tool to operate on character string data."}, "question": "task_1"}}, {"data": {"text": "Question:\nExplain and discuss why the branch and link register (BALR) instruction is usually one of the most important instruc-tions of the IBM/360-370 computers?\n\nOptions:\nA. BALR instruction is important because it reduces memory usage.\nB. BALR instruction is important because it speeds up the program.\nC.             BALR instruction is important because it allows for base address loading into the base register of the program, which is crucial for the program's execution.\nD. BALR instruction is important because it simplifies the programming process.\n\nAnswer: C\n\nReference Solution:\nThe branch-and-link register instruction has the register-to-register (RR) format, and as such, it has a single register for each of its operands. When this instruc-tion is executed, it places the address of the next instruc-tion in storage in the register specified as the first op-erand, and then branches of the address are specified in the second register. To illustrate the function of this instruc-tion, let us assume that the instruction is stored in bytes 5000 and 5001 (the instruction is 2 bytes long). As the first operand we have Register 3 and as the second - Regis-ter 8, which contains the binary equivalent of 2048. When this instruction is executed, the address 5002 is placed in Register 3 and the computer then goes to location 2048, the address specified by Register 8. Execution now proceeds from this location. However, if a zero is specified as the second operand of the BALR instruction, no branching takes place. The address of the next instruction in memory is placed in op-erand 1 as usual, but since the operand 2 is zero, no branch-ing takes place. Instead, processing of the next sequential instruction occurs. For example, let's use the addresses of Fig. 1 for Fig. 2. On execution, address 5002 is placed in Register 3, and pro-cessing of the next sequential instruction begins. As we can see this instruction also begins at location 5002. It is this feature of the BALR instruction that makes it one of the IBM/360-370 computers' most important instructions. By this procedure a base address is loaded into the base regis-ter of the program. In the example (2), Register 3 is the base register. If a program is loaded into storage and a proper address is not loaded into the base register, the program will not be executed as intended. As a result, a BALR instruction with zero as its second operand is normally the first executable instruction of a program.", "ref_id": 4564, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Explain and discuss why the branch and link register (BALR) instruction is usually one of the most important instruc-tions of the IBM/360-370 computers?", "options": ["BALR instruction is important because it reduces memory usage.", "BALR instruction is important because it speeds up the program.", "BALR instruction is important because it allows for base address loading into the base register of the program, which is crucial for the program's execution.", "BALR instruction is important because it simplifies the programming process."], "answer": "C", "solution": "The branch-and-link register instruction has the register-to-register (RR) format, and as such, it has a single register for each of its operands. When this instruc-tion is executed, it places the address of the next instruc-tion in storage in the register specified as the first op-erand, and then branches of the address are specified in the second register. To illustrate the function of this instruc-tion, let us assume that the instruction is stored in bytes 5000 and 5001 (the instruction is 2 bytes long). As the first operand we have Register 3 and as the second - Regis-ter 8, which contains the binary equivalent of 2048. When this instruction is executed, the address 5002 is placed in Register 3 and the computer then goes to location 2048, the address specified by Register 8. Execution now proceeds from this location. However, if a zero is specified as the second operand of the BALR instruction, no branching takes place. The address of the next instruction in memory is placed in op-erand 1 as usual, but since the operand 2 is zero, no branch-ing takes place. Instead, processing of the next sequential instruction occurs. For example, let's use the addresses of Fig. 1 for Fig. 2. On execution, address 5002 is placed in Register 3, and pro-cessing of the next sequential instruction begins. As we can see this instruction also begins at location 5002. It is this feature of the BALR instruction that makes it one of the IBM/360-370 computers' most important instructions. By this procedure a base address is loaded into the base regis-ter of the program. In the example (2), Register 3 is the base register. If a program is loaded into storage and a proper address is not loaded into the base register, the program will not be executed as intended. As a result, a BALR instruction with zero as its second operand is normally the first executable instruction of a program."}, "question": "task_1"}}, {"data": {"text": "Question:\nGive the set of arithmetic operators used in PL/I. Explain whatis meant by the priority rule. Explain how the expres-sionA + B - C \\textasteriskcentered D/F \\textasteriskcentered\\textasteriskcentered G is evaluated. Also, find the valueof the above expression if A = 7, B = 2, C = 3, D = 8, F = 2, and G = 3.\n\nOptions:\nA. 7\nB. 9\nC.             6\nD. 8\n\nAnswer: C\n\nReference Solution:\nEvery language has some fixed set of arithmetic operators. The normalalgebraic operations are all available in PL/I. Arithmetic operators aresymbols used to indicate these operations. The following operators areavailable: a)Infix Operators: +addition- subtraction \\textasteriskcenteredmultiplication/ division \\textasteriskcentered\\textasteriskcenteredexponentiation b)Prefix Operators +plus -negationor minus The operators are shown in two groups above. Operators in group a)arecalled infix operators because they operate on two operands. For example , A+B, 2\\textasteriskcentered3, X\\textasteriskcentered\\textasteriskcenteredY, 1 - 1, u/v, etc. The operators in group b) are called prefix operators because they operateon single operands. For example, + 10, - 52, - (A + B) Notice that in the - (A + B), the + sign is for an infix opera-tor, between two operandsA and B. But, the - sign is a pre-fix operator. The complete parentheses, (A + B), acts as a single operand for the prefix - operator. Now consider the given expression: A + B - C\\textasteriskcenteredD/F\\textasteriskcentered\\textasteriskcenteredG. Notice that if parentheses are omitted as in the above, the expression will evaluateto different answers, depending on the order in which the differentoperations are carried out. To avoid any ambiguity on the evaluation process, PL/I has a set of Precedence Rules.The Precedence Rule says that an operator at a higherlevel of priority is executed first, and then an operator at a lower levelof priority is execut-ed. The various operators are set at different prioritylevels. An operator having a higher priority level is exe-cuted first. The priority set for the operators are asfol-lows : First level \\textasteriskcentered\\textasteriskcentered, Negation(highest priority) Second level\\textasteriskcentered ,/(second highest priority) Third level +, -(lowest priority). If two operators at the same level of priority are encounter-ed, then PL/I appliesa left to rightassociativity, e.g. A-B-C is considered as (A - B) - C. Arithmetic expressions are analyzed as follows: 1. The expression is examined from right to left in search of the two firstlevel operators. The operations specified by them are performed as theoperators are encoun-tered. 2. All subsequent scans take place from left to right. During the first ofthese left to right scans, \\textasteriskcentered and / op-erations are performed as they occur. 3. The final left to right scan carries out calcula-tions involving infix + and- operations. Using the above rules of Precedence andAssociativity, ambiguity is eliminated. Hence, consider the given expression, viz., A + B - C\\textasteriskcenteredD/F\\textasteriskcentered\\textasteriskcenteredG. In the above, it can be seen that there is an exponentiation operator \\textasteriskcentered\\textasteriskcentered, whichhas the highest priority from amongst all the operators in the given expression. Hence, F\\textasteriskcentered\\textasteriskcenteredG is eval-uated first. The expression therefore reduces as shown below: A + B - C\\textasteriskcenteredD/(F\\textasteriskcentered\\textasteriskcenteredG) . The highest priority for the remaining operators belongs to \\textasteriskcentered and /. Now, both\\textasteriskcentered and / are on the same level of prior-ity. Hence, the left to right AssociativityRule is applied. Thus, C\\textasteriskcenteredD is evaluated first. The expression thusreduces as shown below: A + B - (C\\textasteriskcenteredD)/(F\\textasteriskcentered\\textasteriskcenteredG). Now, the / operation is performed. The expression then re-duces as shown below: A + B - (C\\textasteriskcenteredD/F\\textasteriskcentered\\textasteriskcenteredG). Now remains the + and - operators. Both are again at the same level of priority. Hence, the left to rightAssociativ-ityrule is again applied, and A+B iscarried out first. This reduces the expression to that shown below: (A + B) - (C\\textasteriskcenteredD/F\\textasteriskcentered\\textasteriskcenteredG) . Now, the subtraction is finally carried out, completing the evaluation of the expression. Using the numeric values of the various variables, the expression becomesas follows: 7 + 2 - 3\\textasteriskcentered8/2\\textasteriskcentered\\textasteriskcentered3. = 7 + 2 - 3\\textasteriskcentered8/(2\\textasteriskcentered\\textasteriskcentered3) = 7 + 2 - 3\\textasteriskcentered8/(8) = 7 + 2 - (3\\textasteriskcentered8)/(8) = 7 + 2 - (24)/(8) = 7 + 2 - (24/8) = 7 + 2 - (3) = 7 + 2 - 3 = (7 + 2) - 3 = (9) - 3 = 9 - 3 = 6", "ref_id": 4565, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Give the set of arithmetic operators used in PL/I. Explain whatis meant by the priority rule. Explain how the expres-sionA + B - C \\textasteriskcentered D/F \\textasteriskcentered\\textasteriskcentered G is evaluated. Also, find the valueof the above expression if A = 7, B = 2, C = 3, D = 8, F = 2, and G = 3.", "options": ["7", "9", "6", "8"], "answer": "C", "solution": "Every language has some fixed set of arithmetic operators. The normalalgebraic operations are all available in PL/I. Arithmetic operators aresymbols used to indicate these operations. The following operators areavailable: a)Infix Operators: +addition- subtraction \\textasteriskcenteredmultiplication/ division \\textasteriskcentered\\textasteriskcenteredexponentiation b)Prefix Operators +plus -negationor minus The operators are shown in two groups above. Operators in group a)arecalled infix operators because they operate on two operands. For example , A+B, 2\\textasteriskcentered3, X\\textasteriskcentered\\textasteriskcenteredY, 1 - 1, u/v, etc. The operators in group b) are called prefix operators because they operateon single operands. For example, + 10, - 52, - (A + B) Notice that in the - (A + B), the + sign is for an infix opera-tor, between two operandsA and B. But, the - sign is a pre-fix operator. The complete parentheses, (A + B), acts as a single operand for the prefix - operator. Now consider the given expression: A + B - C\\textasteriskcenteredD/F\\textasteriskcentered\\textasteriskcenteredG. Notice that if parentheses are omitted as in the above, the expression will evaluateto different answers, depending on the order in which the differentoperations are carried out. To avoid any ambiguity on the evaluation process, PL/I has a set of Precedence Rules.The Precedence Rule says that an operator at a higherlevel of priority is executed first, and then an operator at a lower levelof priority is execut-ed. The various operators are set at different prioritylevels. An operator having a higher priority level is exe-cuted first. The priority set for the operators are asfol-lows : First level \\textasteriskcentered\\textasteriskcentered, Negation(highest priority) Second level\\textasteriskcentered ,/(second highest priority) Third level +, -(lowest priority). If two operators at the same level of priority are encounter-ed, then PL/I appliesa left to rightassociativity, e.g. A-B-C is considered as (A - B) - C. Arithmetic expressions are analyzed as follows: 1. The expression is examined from right to left in search of the two firstlevel operators. The operations specified by them are performed as theoperators are encoun-tered. 2. All subsequent scans take place from left to right. During the first ofthese left to right scans, \\textasteriskcentered and / op-erations are performed as they occur. 3. The final left to right scan carries out calcula-tions involving infix + and- operations. Using the above rules of Precedence andAssociativity, ambiguity is eliminated. Hence, consider the given expression, viz., A + B - C\\textasteriskcenteredD/F\\textasteriskcentered\\textasteriskcenteredG. In the above, it can be seen that there is an exponentiation operator \\textasteriskcentered\\textasteriskcentered, whichhas the highest priority from amongst all the operators in the given expression. Hence, F\\textasteriskcentered\\textasteriskcenteredG is eval-uated first. The expression therefore reduces as shown below: A + B - C\\textasteriskcenteredD/(F\\textasteriskcentered\\textasteriskcenteredG) . The highest priority for the remaining operators belongs to \\textasteriskcentered and /. Now, both\\textasteriskcentered and / are on the same level of prior-ity. Hence, the left to right AssociativityRule is applied. Thus, C\\textasteriskcenteredD is evaluated first. The expression thusreduces as shown below: A + B - (C\\textasteriskcenteredD)/(F\\textasteriskcentered\\textasteriskcenteredG). Now, the / operation is performed. The expression then re-duces as shown below: A + B - (C\\textasteriskcenteredD/F\\textasteriskcentered\\textasteriskcenteredG). Now remains the + and - operators. Both are again at the same level of priority. Hence, the left to rightAssociativ-ityrule is again applied, and A+B iscarried out first. This reduces the expression to that shown below: (A + B) - (C\\textasteriskcenteredD/F\\textasteriskcentered\\textasteriskcenteredG) . Now, the subtraction is finally carried out, completing the evaluation of the expression. Using the numeric values of the various variables, the expression becomesas follows: 7 + 2 - 3\\textasteriskcentered8/2\\textasteriskcentered\\textasteriskcentered3. = 7 + 2 - 3\\textasteriskcentered8/(2\\textasteriskcentered\\textasteriskcentered3) = 7 + 2 - 3\\textasteriskcentered8/(8) = 7 + 2 - (3\\textasteriskcentered8)/(8) = 7 + 2 - (24)/(8) = 7 + 2 - (24/8) = 7 + 2 - (3) = 7 + 2 - 3 = (7 + 2) - 3 = (9) - 3 = 9 - 3 = 6"}, "question": "task_1"}}, {"data": {"text": "Question:\nExplain how a conditional branch instruction is specified in APL programs.\n\nOptions:\nA. A conditional branch instruction is specified in APL by means of an upwards-pointing arrow followed on its right by an expression.\nB. A conditional branch instruction is specified in APL by means of a right-pointing arrow followed on its right by an expression. It can also be specified using a label or the compression function.\nC.             A conditional branch instruction is specified in APL by means of a right-pointing arrow followed on its left by an expression.\nD. A conditional branch instruction is specified in APL by means of a left-pointing arrow followed on its right by an expression.\n\nAnswer: B\n\nReference Solution:\nA conditional branch instruction is specified in APL by means of a right-pointing arrow followed on its right by an expression. For example: i) [4] \\rightarrow (I \\leq N) \u00d7 2 In the above, a test for I is performed. Is I \\leq N? If I is indeed less than or equal to N, then the value of the test is true, i.e., 1. But if I is not less than or equal to N then the value of the test is false, i.e., 0. Now, if the result of the test is 1, the value of the expression (I \\leq N) \u00d7 2 reduces to 1 \u00d7 2, equal to 2. This means that in the given example the statement [4] of the program re-duces to the following: [4] \\rightarrow (I \\leq N) \u00d7 2 i.e.,[4] \\rightarrow 1 \u00d7 2 i.e.,[4] \\rightarrow 2. Thus, a branching to statement 2 is performed. However, if the result of the test is 0, then the statement [4] of the example reduces to the following: [4] \\rightarrow (I \\leq N) \u00d7 2 i.e.,[4] \\rightarrow 0 \u00d7 2 i.e.,[4] \\rightarrow 0. This means that a branching to statement 0 is to be per-formed. However, there is no statement 0 in the program. Hence, the program execution halts. ii) [4] \\rightarrow (I \\leq N) \u00d7 BOB. The above is similar to parti) explained before, except that instead of the statement number of the statement to which a branch off is required, a label is specified. La-bels have an advantage over numbers. If statements are added or removed from the program, the statement numbers change. This necessitates corrections to be made within the statements too, in order to branch to the proper state-ment according to the new numbering. But if labels are used, corrections of the statements are not necessary. A label takes on a value equal to the statement number of the statement which has the given label. In the example given above, the label is BOB. This means that if the test is true, the program will jump to a statementlabelledBOB. The program could be something like the following: [2] BOB: I \\leftarrow I + 1 [4] \\rightarrow (I \\leq N) \u00d7 BOBor,[4] \\rightarrow (I \\leq N) \u00d7 BOB [7] BOB: I \\leftarrow I + 1 In the above, if the test is false, statement [4] becomes: [4] \\rightarrow 0 \u00d7 BOB, i.e.,[4] \\rightarrow 0. and the program halts. iii) In the above two cases, the program went to a halt if the test was false. However, at times it is not proper for the program to halt when the test is false. It is just required that the program goes to the next sequen-tial instruction if the test is false, and branch to the statement indicated if the test is true. Consider the following statement, for example: [4] \\rightarrow 2 \u00d7 \u0285(I \\leq N) In the above, if the test of I \\leq N is true, the value of (I \\leq N) is equal to 1. Therefore the statement [4] reduces to 2 \u00d7 \u0285(1) = 2 \u00d7 1=2. Thus, the program branches to statement 2. But, if the test is false, the statement [4] reduces to 2 \u00d7 \u0285(0) Now, iota zero, i.e., \u0285 0, generates an empty vector, and therefore the statement [4] becomes meaningless. Hence, the program goes to the next sequential statement. iv) A label can be used, instead of a statement num-ber, with the iota function. For example, [4] \\rightarrow BOB \u00d7 \u0285(I \\leq N). v) Another way to specify a branch instruction is by using the compression function, which has the symbol /. It is not necessary to know the meaning of the compression function in order to understand the branching. Consider the following illustration: [4] \\rightarrow (I \\leq N) / 2. In the above, if the test, that is, the quantity to the left of the compression function symbol is true, a transfer is made to the statement whose number is specified on the right of the compression function symbol. Thus, if I \\leq N is true, the program jumps to statement 2. But, if the test is false, the program goes to the next sequential statement, i.e., to statement 5. vi) A label can also be used on the right side of the compression function symbol instead of a number. For ex-ample, [4] \\rightarrow (I \\leq N) / BOB.", "ref_id": 4566, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Explain how a conditional branch instruction is specified in APL programs.", "options": ["A conditional branch instruction is specified in APL by means of an upwards-pointing arrow followed on its right by an expression.", "A conditional branch instruction is specified in APL by means of a right-pointing arrow followed on its right by an expression. It can also be specified using a label or the compression function.", "A conditional branch instruction is specified in APL by means of a right-pointing arrow followed on its left by an expression.", "A conditional branch instruction is specified in APL by means of a left-pointing arrow followed on its right by an expression."], "answer": "B", "solution": "A conditional branch instruction is specified in APL by means of a right-pointing arrow followed on its right by an expression. For example: i) [4] \\rightarrow (I \\leq N) \u00d7 2 In the above, a test for I is performed. Is I \\leq N? If I is indeed less than or equal to N, then the value of the test is true, i.e., 1. But if I is not less than or equal to N then the value of the test is false, i.e., 0. Now, if the result of the test is 1, the value of the expression (I \\leq N) \u00d7 2 reduces to 1 \u00d7 2, equal to 2. This means that in the given example the statement [4] of the program re-duces to the following: [4] \\rightarrow (I \\leq N) \u00d7 2 i.e.,[4] \\rightarrow 1 \u00d7 2 i.e.,[4] \\rightarrow 2. Thus, a branching to statement 2 is performed. However, if the result of the test is 0, then the statement [4] of the example reduces to the following: [4] \\rightarrow (I \\leq N) \u00d7 2 i.e.,[4] \\rightarrow 0 \u00d7 2 i.e.,[4] \\rightarrow 0. This means that a branching to statement 0 is to be per-formed. However, there is no statement 0 in the program. Hence, the program execution halts. ii) [4] \\rightarrow (I \\leq N) \u00d7 BOB. The above is similar to parti) explained before, except that instead of the statement number of the statement to which a branch off is required, a label is specified. La-bels have an advantage over numbers. If statements are added or removed from the program, the statement numbers change. This necessitates corrections to be made within the statements too, in order to branch to the proper state-ment according to the new numbering. But if labels are used, corrections of the statements are not necessary. A label takes on a value equal to the statement number of the statement which has the given label. In the example given above, the label is BOB. This means that if the test is true, the program will jump to a statementlabelledBOB. The program could be something like the following: [2] BOB: I \\leftarrow I + 1 [4] \\rightarrow (I \\leq N) \u00d7 BOBor,[4] \\rightarrow (I \\leq N) \u00d7 BOB [7] BOB: I \\leftarrow I + 1 In the above, if the test is false, statement [4] becomes: [4] \\rightarrow 0 \u00d7 BOB, i.e.,[4] \\rightarrow 0. and the program halts. iii) In the above two cases, the program went to a halt if the test was false. However, at times it is not proper for the program to halt when the test is false. It is just required that the program goes to the next sequen-tial instruction if the test is false, and branch to the statement indicated if the test is true. Consider the following statement, for example: [4] \\rightarrow 2 \u00d7 \u0285(I \\leq N) In the above, if the test of I \\leq N is true, the value of (I \\leq N) is equal to 1. Therefore the statement [4] reduces to 2 \u00d7 \u0285(1) = 2 \u00d7 1=2. Thus, the program branches to statement 2. But, if the test is false, the statement [4] reduces to 2 \u00d7 \u0285(0) Now, iota zero, i.e., \u0285 0, generates an empty vector, and therefore the statement [4] becomes meaningless. Hence, the program goes to the next sequential statement. iv) A label can be used, instead of a statement num-ber, with the iota function. For example, [4] \\rightarrow BOB \u00d7 \u0285(I \\leq N). v) Another way to specify a branch instruction is by using the compression function, which has the symbol /. It is not necessary to know the meaning of the compression function in order to understand the branching. Consider the following illustration: [4] \\rightarrow (I \\leq N) / 2. In the above, if the test, that is, the quantity to the left of the compression function symbol is true, a transfer is made to the statement whose number is specified on the right of the compression function symbol. Thus, if I \\leq N is true, the program jumps to statement 2. But, if the test is false, the program goes to the next sequential statement, i.e., to statement 5. vi) A label can also be used on the right side of the compression function symbol instead of a number. For ex-ample, [4] \\rightarrow (I \\leq N) / BOB."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a single APL statement that gives values for the current, according to Ohm's Law, where I = E/R. I is current, E is voltage, and R is resistance. You can assume that E and R are vectors of four elements each. If E \\leftarrow 4 8 9 12 and R \\leftarrow 2 4 3 4, find I.\n\nOptions:\nA. 4 3 2 1\nB. 2 2 3 3\nC.             1 2 3 4\nD. 2 4 6 8\n\nAnswer: B\n\nReference Solution:\nSince E and R are vectors of equal length, one can write: I \\leftarrow E \\div R. This will divide the first elements of each vector, then the second, and so on. The result is a four element vector I. E is given by E \\leftarrow 4 8 9 12 andR is given by R \\leftarrow 2 4 3 4, therefore I \\leftarrow E \\div r execution will be performed as follows: I \\leftarrow 4 \\div 28 \\div 49 \\div 312 \\div 4 I \\leftarrow2233", "ref_id": 4567, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a single APL statement that gives values for the current, according to Ohm's Law, where I = E/R. I is current, E is voltage, and R is resistance. You can assume that E and R are vectors of four elements each. If E \\leftarrow 4 8 9 12 and R \\leftarrow 2 4 3 4, find I.", "options": ["4 3 2 1", "2 2 3 3", "1 2 3 4", "2 4 6 8"], "answer": "B", "solution": "Since E and R are vectors of equal length, one can write: I \\leftarrow E \\div R. This will divide the first elements of each vector, then the second, and so on. The result is a four element vector I. E is given by E \\leftarrow 4 8 9 12 andR is given by R \\leftarrow 2 4 3 4, therefore I \\leftarrow E \\div r execution will be performed as follows: I \\leftarrow 4 \\div 28 \\div 49 \\div 312 \\div 4 I \\leftarrow2233"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite an assembler language program in BAL to add 20 numbers from main storage.\n\nOptions:\nA. Increase the quantity in register 7 by 2 each time the adjustment step is executed.\nB. Let BB denote the starting location of the numbers to be added.\nC.             Let AA denote the starting location of the numbers to be added and increase the quantity in register 7 by 4 each time the adjustment step is executed. Exit from the loop when the contents of register 9 is 20.\nD. Exit from the loop when the contents of register 9 is 10.\n\nAnswer: C\n\nReference Solution:\nLet AA denote the starting location of the num-bers A_i to be added together. We assume these numbers oc-cupy consecutive full words in main storage (i.e. 4 bytes per word). If the address of the A_i just added to the sum is kept in a register, the number 4 can be added to the con-tents of that register; the result is the address of the next number to be added. Suppose register 7 is initialized to AA, the address of A_0. Each time the adjustment step is executed, the quantity in register 7 is increased by 4. Hence the second time the instruction A 8,\\varphi(7) is executed, the address \\varphi in register 7 is 4 greater than the address of A_0; thus it is the address of A_1. The third time the body of the loop is executed, the address of register 7 has been increased again, so A_2 is growing to sum. The process of adding on A_i and adjusting the address continues until exe-cution of the loop is terminated. We exit from the loop when the contents of register 9 is 20. \\textasteriskcenteredA SEGMENT TO ADD 20 NUMBERS FROM \\textasteriskcenteredCONSECUTIVE FULL WORDS IN MAIN STORAGE \\textasteriskcenteredINITIALIZATION LA8,\\varphiSUM =\\varphi \\varphi \\varphi LA9,\\varphiI =\\varphi \\varphi \\varphi LA7, AA ADDRESS OF FIRST A \\textasteriskcenteredBODY: ADD A (SUBI) TO SUM LOOPA8,\\varphi(7) \\varphi LA9, 1 (9) INCREASE I LA7, 4 (7) GET ADDRESS OF NEXT A C9, = F '2\\varphi' \\varphi BNE LOOP BRANCH BACK IF I NOT YET 20, LV LOOP IF I = 2\\varphi \\varphi", "ref_id": 4568, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write an assembler language program in BAL to add 20 numbers from main storage.", "options": ["Increase the quantity in register 7 by 2 each time the adjustment step is executed.", "Let BB denote the starting location of the numbers to be added.", "Let AA denote the starting location of the numbers to be added and increase the quantity in register 7 by 4 each time the adjustment step is executed. Exit from the loop when the contents of register 9 is 20.", "Exit from the loop when the contents of register 9 is 10."], "answer": "C", "solution": "Let AA denote the starting location of the num-bers A_i to be added together. We assume these numbers oc-cupy consecutive full words in main storage (i.e. 4 bytes per word). If the address of the A_i just added to the sum is kept in a register, the number 4 can be added to the con-tents of that register; the result is the address of the next number to be added. Suppose register 7 is initialized to AA, the address of A_0. Each time the adjustment step is executed, the quantity in register 7 is increased by 4. Hence the second time the instruction A 8,\\varphi(7) is executed, the address \\varphi in register 7 is 4 greater than the address of A_0; thus it is the address of A_1. The third time the body of the loop is executed, the address of register 7 has been increased again, so A_2 is growing to sum. The process of adding on A_i and adjusting the address continues until exe-cution of the loop is terminated. We exit from the loop when the contents of register 9 is 20. \\textasteriskcenteredA SEGMENT TO ADD 20 NUMBERS FROM \\textasteriskcenteredCONSECUTIVE FULL WORDS IN MAIN STORAGE \\textasteriskcenteredINITIALIZATION LA8,\\varphiSUM =\\varphi \\varphi \\varphi LA9,\\varphiI =\\varphi \\varphi \\varphi LA7, AA ADDRESS OF FIRST A \\textasteriskcenteredBODY: ADD A (SUBI) TO SUM LOOPA8,\\varphi(7) \\varphi LA9, 1 (9) INCREASE I LA7, 4 (7) GET ADDRESS OF NEXT A C9, = F '2\\varphi' \\varphi BNE LOOP BRANCH BACK IF I NOT YET 20, LV LOOP IF I = 2\\varphi \\varphi"}, "question": "task_1"}}, {"data": {"text": "Question:\nPick out the errors in the following FORTRAN statements and explain briefly why they are incorrect:\n\nOptions:\nA. 2ERR is valid, equality sign should be replaced by .EQ., CAPITAL exceeds character limit, LENGTH leads to mixed mode multiplication\nB. 2ERR is invalid, equality sign should be replaced by .EQ., CAPITAL exceeds character limit, LENGTH leads to mixed mode multiplication\nC.             2ERR is invalid, inequality sign should be replaced by .NE., CAPITAL exceeds character limit, LENGTH leads to mixed mode multiplication\nD. 2ERR is invalid, equality sign should be replaced by .EQ., CAPITAL is within character limit, LENGTH leads to mixed mode multiplication\n\nAnswer: B\n\nReference Solution:\na) FORTRAN variable names cannot begin with numbers, so 2ERR is an invalid variable. b) In an IF statement, comparisons are made by using relational operators . An equality sign, which is used only in FORTRAN assignment statements , should be replaced by .EQ. TERM. c) CAPITAL is a seven-letter word. FORTRAN allows a maximum of six characters in each variable name. d) In FORTRAN, variables beginning with letters I through N are integer unless specified otherwise. Since WIDTH and AREA are real variable names , LENGTH cannot be used in order to avoid mixed mode multiplication .", "ref_id": 4569, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Pick out the errors in the following FORTRAN statements and explain briefly why they are incorrect:", "options": ["2ERR is valid, equality sign should be replaced by .EQ., CAPITAL exceeds character limit, LENGTH leads to mixed mode multiplication", "2ERR is invalid, equality sign should be replaced by .EQ., CAPITAL exceeds character limit, LENGTH leads to mixed mode multiplication", "2ERR is invalid, inequality sign should be replaced by .NE., CAPITAL exceeds character limit, LENGTH leads to mixed mode multiplication", "2ERR is invalid, equality sign should be replaced by .EQ., CAPITAL is within character limit, LENGTH leads to mixed mode multiplication"], "answer": "B", "solution": "a) FORTRAN variable names cannot begin with numbers, so 2ERR is an invalid variable. b) In an IF statement, comparisons are made by using relational operators . An equality sign, which is used only in FORTRAN assignment statements , should be replaced by .EQ. TERM. c) CAPITAL is a seven-letter word. FORTRAN allows a maximum of six characters in each variable name. d) In FORTRAN, variables beginning with letters I through N are integer unless specified otherwise. Since WIDTH and AREA are real variable names , LENGTH cannot be used in order to avoid mixed mode multiplication ."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a BASIC program to calculate the sum of cubes of integers from 1 to 100.\n\nOptions:\nA. Using an array and summing all elements\nB. Using a WHILE ... DO loop\nC.             By using the formula K^2 / 2\nD. FOR ... NEXT loop or by using the formula ^K\\sum_i_=1 i^3 = [K^2 (K+1)^2] / [4]\n\nAnswer: D\n\nReference Solution:\nThis can be accomplished by an elementary FOR ... NEXT loop. A more sophisticated approach could be based on the formula ^K\\sum_i_=1 i^3 = [K^2 (K+1)^2] / [4] where ^K\\sum_i_=1 i^3 = 1^3 + 2^3 + 3^3 + ... + K^3. PROGRAM # 1 1\\O\\O REM SUM OF CUBES 11\\O LET S = \\O 12\\O FOR I = 1 TO 1\\O\\O 13\\O LET S = S + I _\\uparrow 3 14\\O NEXT I 15\\O PRINT S 16\\O END PROGRAM # 2 1\\O\\O LET K = 1\\O\\O 11\\O LET S = K\\textasteriskcenteredK\\textasteriskcentered(K+1)\\textasteriskcentered(K+1)/4 12\\O PRINT S 13\\O END", "ref_id": 4570, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a BASIC program to calculate the sum of cubes of integers from 1 to 100.", "options": ["Using an array and summing all elements", "Using a WHILE ... DO loop", "By using the formula K^2 / 2", "FOR ... NEXT loop or by using the formula ^K\\sum_i_=1 i^3 = [K^2 (K+1)^2] / [4]"], "answer": "D", "solution": "This can be accomplished by an elementary FOR ... NEXT loop. A more sophisticated approach could be based on the formula ^K\\sum_i_=1 i^3 = [K^2 (K+1)^2] / [4] where ^K\\sum_i_=1 i^3 = 1^3 + 2^3 + 3^3 + ... + K^3. PROGRAM # 1 1\\O\\O REM SUM OF CUBES 11\\O LET S = \\O 12\\O FOR I = 1 TO 1\\O\\O 13\\O LET S = S + I _\\uparrow 3 14\\O NEXT I 15\\O PRINT S 16\\O END PROGRAM # 2 1\\O\\O LET K = 1\\O\\O 11\\O LET S = K\\textasteriskcenteredK\\textasteriskcentered(K+1)\\textasteriskcentered(K+1)/4 12\\O PRINT S 13\\O END"}, "question": "task_1"}}, {"data": {"text": "Question:\nDebug the following FORTRAN program for finding the roots of a quadratic equation: $ JOB CPROGRAM TO CALCULATE ROOTS OF QUADRATIC EQN. CASSUME POSITIVE DISCRIMINANT CREAD INPUT DATA 1)READ (5, 100), A, B, C 2)100FORMAT (3E12. 5) CCALCULATE ROOTS 3)DISC = (B\\textasteriskcentered\\textasteriskcentered2 - 4. \\textasteriskcenteredA\\textasteriskcenteredC)\\textasteriskcentered\\textasteriskcentered. 5 4)X1 = (- B + DISH) / 2. \\textasteriskcenteredA 5)X2 = (- B - DISH) / 2. \\textasteriskcenteredA CWRITE OUTPUT 6)WRITE (6, 300) A, B, C, X1, X2 7)200FORMAT (5 (5X, E12. 5)) 8)STOP 9)END\n\nOptions:\nA. Logical errors in statements (1) and (7)\nB. Syntax errors in statements (5), (8), and (9)\nC.             Syntax errors in statements (1), (4), (6) and (7) and logical errors in statements (4) and (5)\nD. Syntax errors in statements (2), (3), and (6)\n\nAnswer: C\n\nReference Solution:\nThe two most common kinds of errors that a programmer can commit are 1) syntax errors. 2) logical errors. Syntax errors are detected by the compiler when translating from the source language to the machine language. Thus the data will not be processed and no results will be obtained. On the other hand, if a program is free of syntax errors but contains logical errors, the machine will process the program. The output obtained will be an incorrect solution to the problem the program was designed to solve. Going through the program, note the following syntax errors: Statement (1) contains an extra comma after (5,100). Statement (4) defines the discriminant as DISH instead of DISC (presumably what the programmer meant.) However, this is not recognized as an error by the compiler, which interprets DISH as a correct variable name. Statement (6) is the WRITE statement with the format label 300, while statement (7) is the corresponding format statement labelled 200. This error can be corrected by changing the value of either of those two labels to be identical to the other one. Statement (7) has the word FORMAT incorrectly spelled as FORNAT, which the compiler cannot decode. If any of these errors remain uncorrected (except for the one in statement (4)) the compiler cannot finish its task of translating the FORTRAN program into the machine language. Assuming there are no syntax errors, the program will be processed by the compiler and passed to memory from where the central proces-sing unit will manipulate the data according to the program instruc-tions. It will then transmit the results of these manipulations to the external output device. If logical errors are present, the output is suspect. The given program contains the following logical errors: (4)DISH has not been defined anywhere. Thus XI cannot be evaluated. (5)Note that according to the statement X2 = ((-B - DISC) / 2.)\\textasteriskcenteredA This gives the wrong result since we want X2 = (-B - DISC) / (2.\\textasteriskcenteredA). This error can be easily detected after a few sample runs of the program. However, if the calculated roots formed part of the input to a minor subroutine in a huge program, extensive logical debugging would be required to locate the error.", "ref_id": 4571, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Debug the following FORTRAN program for finding the roots of a quadratic equation: $ JOB CPROGRAM TO CALCULATE ROOTS OF QUADRATIC EQN. CASSUME POSITIVE DISCRIMINANT CREAD INPUT DATA 1)READ (5, 100), A, B, C 2)100FORMAT (3E12. 5) CCALCULATE ROOTS 3)DISC = (B\\textasteriskcentered\\textasteriskcentered2 - 4. \\textasteriskcenteredA\\textasteriskcenteredC)\\textasteriskcentered\\textasteriskcentered. 5 4)X1 = (- B + DISH) / 2. \\textasteriskcenteredA 5)X2 = (- B - DISH) / 2. \\textasteriskcenteredA CWRITE OUTPUT 6)WRITE (6, 300) A, B, C, X1, X2 7)200FORMAT (5 (5X, E12. 5)) 8)STOP 9)END", "options": ["Logical errors in statements (1) and (7)", "Syntax errors in statements (5), (8), and (9)", "Syntax errors in statements (1), (4), (6) and (7) and logical errors in statements (4) and (5)", "Syntax errors in statements (2), (3), and (6)"], "answer": "C", "solution": "The two most common kinds of errors that a programmer can commit are 1) syntax errors. 2) logical errors. Syntax errors are detected by the compiler when translating from the source language to the machine language. Thus the data will not be processed and no results will be obtained. On the other hand, if a program is free of syntax errors but contains logical errors, the machine will process the program. The output obtained will be an incorrect solution to the problem the program was designed to solve. Going through the program, note the following syntax errors: Statement (1) contains an extra comma after (5,100). Statement (4) defines the discriminant as DISH instead of DISC (presumably what the programmer meant.) However, this is not recognized as an error by the compiler, which interprets DISH as a correct variable name. Statement (6) is the WRITE statement with the format label 300, while statement (7) is the corresponding format statement labelled 200. This error can be corrected by changing the value of either of those two labels to be identical to the other one. Statement (7) has the word FORMAT incorrectly spelled as FORNAT, which the compiler cannot decode. If any of these errors remain uncorrected (except for the one in statement (4)) the compiler cannot finish its task of translating the FORTRAN program into the machine language. Assuming there are no syntax errors, the program will be processed by the compiler and passed to memory from where the central proces-sing unit will manipulate the data according to the program instruc-tions. It will then transmit the results of these manipulations to the external output device. If logical errors are present, the output is suspect. The given program contains the following logical errors: (4)DISH has not been defined anywhere. Thus XI cannot be evaluated. (5)Note that according to the statement X2 = ((-B - DISC) / 2.)\\textasteriskcenteredA This gives the wrong result since we want X2 = (-B - DISC) / (2.\\textasteriskcenteredA). This error can be easily detected after a few sample runs of the program. However, if the calculated roots formed part of the input to a minor subroutine in a huge program, extensive logical debugging would be required to locate the error."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program which generates the first 12 rows of Pascal's Triangle.\n\nOptions:\nA. FOR N = \\O TO 10 2\\O FOR R = \\O TO N + 1 3\\O LET C = 1 4\\O FOR X = N TO N - R + 1 STEP -1 5\\O LET C = C \textasteriskcentered X/(N-X+1) 6\\O NEXT X 7\\O PRINT C; 8\\O NEXT R 9\\O PRINT 1\\O\\O NEXT N 11\\O END\nB. FOR N = \\O TO 12 2\\O FOR R = \\O TO N - 1 3\\O LET C = 1 4\\O FOR X = N TO N - R + 1 STEP -1 5\\O LET C = C \textasteriskcentered X/(N-X+1) 6\\O NEXT X 7\\O PRINT C; 8\\O NEXT R 9\\O PRINT 1\\O\\O NEXT N 11\\O END\nC.             FOR N = \\O TO 11 2\\O FOR R = \\O TO N 3\\O LET C = 1 4\\O FOR X = N TO N - R + 1 STEP -1 5\\O LET C = C \textasteriskcentered X/(N-X+1) 6\\O NEXT X 7\\O PRINT C; 8\\O NEXT R 9\\O PRINT 1\\O\\O NEXT N 11\\O END\nD. FOR N = \\O TO 11 2\\O FOR R = \\O TO N - 1 3\\O LET C = 1 4\\O FOR X = N TO N - R + 1 STEP -1 5\\O LET C = C \textasteriskcentered X/(N-X+1) 6\\O NEXT X 7\\O PRINT C; 8\\O NEXT R 9\\O PRINT 1\\O\\O NEXT N 11\\O END\n\nAnswer: C\n\nReference Solution:\nPascal's triangle yields the coefficients ofx^kandy^kin the expansion of (x+y)^n . The first few rows are: (x+y)^0 : 1 11 121 1331 14641 15101051 (x+y)^1 : (x+y)^2 : (x+y)^3 : (x+y)^4 : (x+y)^5 : In order to find a formula for the coefficients of the n^th degree expan-sion, consider Newton's binomial theorem: (x+y)^n = [x^n/0!] + [(nx^n-1) / 1!]y + {[{n(n-1)} / 2!] x^n-2y^2} + {[n(n-1)(n-2) x^n-3] / 3!}y^3 + {[n(n-1) (n-2) (n-3)] / 4!}x^n-4 y^4 +... + {[n(n-1) ... (n-r+1)] / r!}x^n^-r y^r +...+ nxy^n-1 +y^n. The coefficient of the (n-r)-thpower of x is {[n(n-1) ... (n-r+1)] / r!} . But [n(n-1) ... (n-r+1)] = [n! / (n-r)!] =^np_r. Hence ther^thcoefficient where 1 \\leqq r \\leqq N is given by [n! / {r! (n-r)!}]. But this is the formula for the number of combinations of n things taken r at a time (a combina-tion is an arrangement where order is immaterial, e.g., ABC = BAC). Thus the binomial coefficients are given by [n! / {r! (n-r)!}] =^nC_r. 1\\O FOR N = \\O TO 11 2\\O FOR R = \\O TO N 3\\O LET C = 1 4\\O FOR X = N TO N - R + 1 STEP -1 5\\O LET C = C \\textasteriskcentered X/(N-X+1) 6\\O NEXT X 7\\O PRINT C; 8\\O NEXT R 9\\O PRINT 1\\O\\O NEXT N 11\\O END", "ref_id": 4572, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program which generates the first 12 rows of Pascal's Triangle.", "options": ["FOR N = \\O TO 10 2\\O FOR R = \\O TO N + 1 3\\O LET C = 1 4\\O FOR X = N TO N - R + 1 STEP -1 5\\O LET C = C \textasteriskcentered X/(N-X+1) 6\\O NEXT X 7\\O PRINT C; 8\\O NEXT R 9\\O PRINT 1\\O\\O NEXT N 11\\O END", "FOR N = \\O TO 12 2\\O FOR R = \\O TO N - 1 3\\O LET C = 1 4\\O FOR X = N TO N - R + 1 STEP -1 5\\O LET C = C \textasteriskcentered X/(N-X+1) 6\\O NEXT X 7\\O PRINT C; 8\\O NEXT R 9\\O PRINT 1\\O\\O NEXT N 11\\O END", "FOR N = \\O TO 11 2\\O FOR R = \\O TO N 3\\O LET C = 1 4\\O FOR X = N TO N - R + 1 STEP -1 5\\O LET C = C \textasteriskcentered X/(N-X+1) 6\\O NEXT X 7\\O PRINT C; 8\\O NEXT R 9\\O PRINT 1\\O\\O NEXT N 11\\O END", "FOR N = \\O TO 11 2\\O FOR R = \\O TO N - 1 3\\O LET C = 1 4\\O FOR X = N TO N - R + 1 STEP -1 5\\O LET C = C \textasteriskcentered X/(N-X+1) 6\\O NEXT X 7\\O PRINT C; 8\\O NEXT R 9\\O PRINT 1\\O\\O NEXT N 11\\O END"], "answer": "C", "solution": "Pascal's triangle yields the coefficients ofx^kandy^kin the expansion of (x+y)^n . The first few rows are: (x+y)^0 : 1 11 121 1331 14641 15101051 (x+y)^1 : (x+y)^2 : (x+y)^3 : (x+y)^4 : (x+y)^5 : In order to find a formula for the coefficients of the n^th degree expan-sion, consider Newton's binomial theorem: (x+y)^n = [x^n/0!] + [(nx^n-1) / 1!]y + {[{n(n-1)} / 2!] x^n-2y^2} + {[n(n-1)(n-2) x^n-3] / 3!}y^3 + {[n(n-1) (n-2) (n-3)] / 4!}x^n-4 y^4 +... + {[n(n-1) ... (n-r+1)] / r!}x^n^-r y^r +...+ nxy^n-1 +y^n. The coefficient of the (n-r)-thpower of x is {[n(n-1) ... (n-r+1)] / r!} . But [n(n-1) ... (n-r+1)] = [n! / (n-r)!] =^np_r. Hence ther^thcoefficient where 1 \\leqq r \\leqq N is given by [n! / {r! (n-r)!}]. But this is the formula for the number of combinations of n things taken r at a time (a combina-tion is an arrangement where order is immaterial, e.g., ABC = BAC). Thus the binomial coefficients are given by [n! / {r! (n-r)!}] =^nC_r. 1\\O FOR N = \\O TO 11 2\\O FOR R = \\O TO N 3\\O LET C = 1 4\\O FOR X = N TO N - R + 1 STEP -1 5\\O LET C = C \\textasteriskcentered X/(N-X+1) 6\\O NEXT X 7\\O PRINT C; 8\\O NEXT R 9\\O PRINT 1\\O\\O NEXT N 11\\O END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program that calculates the number of permutations of N things taken R at a time.\n\nOptions:\nA. N! - (N-R)!\nB. N! / (N-R)!\nC.             N! * (N-R)!\nD. N! + (N-R)!\n\nAnswer: B\n\nReference Solution:\nThe factorial of N is written as N! and is equal to N(N-1) (N-2) ... (3) (2) (1). If N things are taken R at a time there are N choices for the first item, N-1 choices for the second, N-2 choices for the third, N-3 choices for the fourth and, continu-ing, N-R+1 choices for theRthitem. By the Fundamental principle of Counting, the final number of permutations is N(N-1)(N-2)(N-3) ... (N-R+1). This number is denoted by ^NP_R . A more compact representation is N! / (N-R)! since this equals N(N-1) ... (N-R+1). The program appears as follows: 1\\OREAD N,R 2\\OIF N < \\O THEN 1\\O\\O 3\\OLET P = 1 4\\OFOR X = N TO N-R+1STEP -1 5\\OLET P = P \\textasteriskcentered X 6\\ONEXT X 7\\OPRINT N; \"THINGS\"; R; \"AT A TIME\"; P; \"PERMUTATIONS\" 8\\OGO TO 1\\O 9\\ODATA 8, 3, 4, 4, \\O, \\O 1\\O\\OEND", "ref_id": 4573, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program that calculates the number of permutations of N things taken R at a time.", "options": ["N! - (N-R)!", "N! / (N-R)!", "N! * (N-R)!", "N! + (N-R)!"], "answer": "B", "solution": "The factorial of N is written as N! and is equal to N(N-1) (N-2) ... (3) (2) (1). If N things are taken R at a time there are N choices for the first item, N-1 choices for the second, N-2 choices for the third, N-3 choices for the fourth and, continu-ing, N-R+1 choices for theRthitem. By the Fundamental principle of Counting, the final number of permutations is N(N-1)(N-2)(N-3) ... (N-R+1). This number is denoted by ^NP_R . A more compact representation is N! / (N-R)! since this equals N(N-1) ... (N-R+1). The program appears as follows: 1\\OREAD N,R 2\\OIF N < \\O THEN 1\\O\\O 3\\OLET P = 1 4\\OFOR X = N TO N-R+1STEP -1 5\\OLET P = P \\textasteriskcentered X 6\\ONEXT X 7\\OPRINT N; \"THINGS\"; R; \"AT A TIME\"; P; \"PERMUTATIONS\" 8\\OGO TO 1\\O 9\\ODATA 8, 3, 4, 4, \\O, \\O 1\\O\\OEND"}, "question": "task_1"}}, {"data": {"text": "Question:\nCalculate and print out the area of a rectangle whose width and length vary in integral steps from 1 to 4.\n\nOptions:\nA. FOR W = 1 TO 4 FOR L = 1 TO 5 PRINT \"L =\"; L; \"W = \"; W; \"A =\"; L*W NEXT L NEXT W\nB. FOR W = 1 TO 2 FOR L = 1 TO 4 PRINT \"L =\"; L; \"W = \"; W; \"A =\"; L*W NEXT L NEXT W\nC.             FOR W = 1 TO 4 FOR L = 1 TO 4 PRINT \"L =\"; L; \"W = \"; W; \"A =\"; L*W NEXT L NEXT W\nD. FOR W = 1 TO 3 FOR L = 1 TO 4 PRINT \"L =\"; L; \"W = \"; W; \"A =\"; L*W NEXT L NEXT W\n\nAnswer: C\n\nReference Solution:\nIn this problem a \"FOR - NEXT\\textquotedblright loop is being introduced. It has a general form of: FOR variable = expr_1 TO expr_2 STEP expr_3 ..................... NEXT variable where expr_1 is the initial value of the variable, expr_2 - the final value, and expr_3 indicates the value by which the variable has to be incremented after each pass through the loop. If the STEP part is omitted, it is assumed to be 1. We use two nested \"FOR ... NEXT\" loops as shown below. 1\\O REM CALCULATES RECTANGLE'S AREA 2\\O FOR W = 1 TO 4 3\\O FOR L = 1 TO 4 4\\O PRINT \"L =\"; L; \"W = \"; W; \"A =\"; L\\textasteriskcenteredW 5\\O NEXT L 6\\O NEXT W 7\\O END", "ref_id": 4574, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Calculate and print out the area of a rectangle whose width and length vary in integral steps from 1 to 4.", "options": ["FOR W = 1 TO 4 FOR L = 1 TO 5 PRINT \"L =\"; L; \"W = \"; W; \"A =\"; L*W NEXT L NEXT W", "FOR W = 1 TO 2 FOR L = 1 TO 4 PRINT \"L =\"; L; \"W = \"; W; \"A =\"; L*W NEXT L NEXT W", "FOR W = 1 TO 4 FOR L = 1 TO 4 PRINT \"L =\"; L; \"W = \"; W; \"A =\"; L*W NEXT L NEXT W", "FOR W = 1 TO 3 FOR L = 1 TO 4 PRINT \"L =\"; L; \"W = \"; W; \"A =\"; L*W NEXT L NEXT W"], "answer": "C", "solution": "In this problem a \"FOR - NEXT\\textquotedblright loop is being introduced. It has a general form of: FOR variable = expr_1 TO expr_2 STEP expr_3 ..................... NEXT variable where expr_1 is the initial value of the variable, expr_2 - the final value, and expr_3 indicates the value by which the variable has to be incremented after each pass through the loop. If the STEP part is omitted, it is assumed to be 1. We use two nested \"FOR ... NEXT\" loops as shown below. 1\\O REM CALCULATES RECTANGLE'S AREA 2\\O FOR W = 1 TO 4 3\\O FOR L = 1 TO 4 4\\O PRINT \"L =\"; L; \"W = \"; W; \"A =\"; L\\textasteriskcenteredW 5\\O NEXT L 6\\O NEXT W 7\\O END"}, "question": "task_1"}}, {"data": {"text": "Question:\n20REM INTREST PROBLEM 30INPUT P, I, N 40LET A = P\\textasteriskcentered (1 + I) \\textasteriskcenteredN 50PRINT \"P = \"; P, \"I = \";I, \"N = \"; N, \"A = \"; A 60END\n\nOptions:\nA. Syntax and logical errors\nB. Run-time errors\nC.             Incorrect algorithm\nD. Semantic errors\n\nAnswer: A\n\nReference Solution:\nWhen a computer program is written, it usually contains two different types of errors. The first kind are grammatical (or syntactical) errors, the second kind are logical errors. Syntactical errors are caused by incorrectly written program statements. These errors are easily detected since a program containing such errors usually cannot be executed. In addition, the computer prints out a diagnostic message that identifies the location and nature of each error. When the program contains a logical error the computer correctly carries out the given instructions, but the wrong instructions produce incorrect results. Turning to the given problem, the FORTRAN program has the following errors: 1) FORMAT has been misspelled as FORNAT in statement 200. Since FORNAT is not part of the compiler's vocabulary, an error message is printed. The program cannot be executed because the nature of the input has not been specified (this is, of course, done by the FORMAT statement). 2) In FORTRAN, instructions must correspond exactly to a given prototype. Any deviation results in an error message. Here, the READ statement has a comma after it. In FORTRAN, READ is followed by a comma only in the unformatted input statement. Since the READ statement in the given program is formatted, there should be no comma after READ. 3) The statement A = (P\\textasteriskcentered(l + I) \\textasteriskcentered\\textasteriskcenteredN is missing a right parenthesis. Some compilers (PL / I for example) may make the insertion, but FORTRAN is strict. An error message is sent out, and the program 'bombs'. 4) The WRITE (6,20) P,I,N,A statement contains a reference to a statement labelled 20 (the alleged FORMAT statement). But since the corresponding FORMAT statement is labelled 200, the compiler is stymied. It prints an error message. Note that all of the above errors were syntactical errors. Consider the BASIC program for solving the compound interest problem. Statement 40 is 40 LET A = P\\textasteriskcentered(1 + I)\\textasteriskcenteredN(1) Algebraically, the formula for the amount A from a given principal P held for N years at interest I is A = P(1 + I)^N. But statement 40 says A = P(1 + I)N Hence it should be changed to A = P\\textasteriskcentered(1 + I) \\uparrow N.(2) Comparing (1) and (2) one is tempted to think that the \\uparrow was mistyped as \\textasteriskcentered and that this is a syntax error. But the compiler will accept (1) as a valid BASIC statement. The CPU will execute it and print the results which, unfortunately, are useless to the programmer. Hence this is a logical, not a syntactical error.", "ref_id": 4575, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "20REM INTREST PROBLEM 30INPUT P, I, N 40LET A = P\\textasteriskcentered (1 + I) \\textasteriskcenteredN 50PRINT \"P = \"; P, \"I = \";I, \"N = \"; N, \"A = \"; A 60END", "options": ["Syntax and logical errors", "Run-time errors", "Incorrect algorithm", "Semantic errors"], "answer": "A", "solution": "When a computer program is written, it usually contains two different types of errors. The first kind are grammatical (or syntactical) errors, the second kind are logical errors. Syntactical errors are caused by incorrectly written program statements. These errors are easily detected since a program containing such errors usually cannot be executed. In addition, the computer prints out a diagnostic message that identifies the location and nature of each error. When the program contains a logical error the computer correctly carries out the given instructions, but the wrong instructions produce incorrect results. Turning to the given problem, the FORTRAN program has the following errors: 1) FORMAT has been misspelled as FORNAT in statement 200. Since FORNAT is not part of the compiler's vocabulary, an error message is printed. The program cannot be executed because the nature of the input has not been specified (this is, of course, done by the FORMAT statement). 2) In FORTRAN, instructions must correspond exactly to a given prototype. Any deviation results in an error message. Here, the READ statement has a comma after it. In FORTRAN, READ is followed by a comma only in the unformatted input statement. Since the READ statement in the given program is formatted, there should be no comma after READ. 3) The statement A = (P\\textasteriskcentered(l + I) \\textasteriskcentered\\textasteriskcenteredN is missing a right parenthesis. Some compilers (PL / I for example) may make the insertion, but FORTRAN is strict. An error message is sent out, and the program 'bombs'. 4) The WRITE (6,20) P,I,N,A statement contains a reference to a statement labelled 20 (the alleged FORMAT statement). But since the corresponding FORMAT statement is labelled 200, the compiler is stymied. It prints an error message. Note that all of the above errors were syntactical errors. Consider the BASIC program for solving the compound interest problem. Statement 40 is 40 LET A = P\\textasteriskcentered(1 + I)\\textasteriskcenteredN(1) Algebraically, the formula for the amount A from a given principal P held for N years at interest I is A = P(1 + I)^N. But statement 40 says A = P(1 + I)N Hence it should be changed to A = P\\textasteriskcentered(1 + I) \\uparrow N.(2) Comparing (1) and (2) one is tempted to think that the \\uparrow was mistyped as \\textasteriskcentered and that this is a syntax error. But the compiler will accept (1) as a valid BASIC statement. The CPU will execute it and print the results which, unfortunately, are useless to the programmer. Hence this is a logical, not a syntactical error."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrtiea program to find the greatest factor of an integer. Wrtie a program to find the greatest factor of an integer\n\nOptions:\nA. N-1\nB. SQR(N)\nC.             N/2\nD. N/D\n\nAnswer: D\n\nReference Solution:\nHere, a trick is used based on the application of the INT function. If the quotient of two integers is also an Integer, the denominator must be a factor (i.e., if N/D = K = INT(N/D), then both D and K are factors of N). The smallest D which satisfies this condition will give us the desired value of the greatest factor K = N/D. What values of D should be tried? The first guess would be 2 to N - 1. A refinement of this guess would be to observe that is the smallest possible factor, while N/2 is the largest. More-over, since \\surdN\\surdN = N, it is best to examine all D's = 2,3,..., \\surdN as possible factors. 1\\O READ N 2\\O FOR D = 2 TO SQR(N) 3\\O IF N/D = INT(N/D) THEN 70 4\\O NEXT D 5\\O PRINT N; \"IS PRIME\" 6\\O GO TO 1\\O 7\\O PRINT N/D; \"IS THE GREATEST FACTOR OF\"; N 8\\O GO TO 1\\O 9\\O DATA 1946, 1949, 1\\O\\O9, 1\\O\\O3 1\\O\\O DATA 11\\O\\O1, 24\\O, 11\\O END", "ref_id": 4576, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Wrtiea program to find the greatest factor of an integer. Wrtie a program to find the greatest factor of an integer", "options": ["N-1", "SQR(N)", "N/2", "N/D"], "answer": "D", "solution": "Here, a trick is used based on the application of the INT function. If the quotient of two integers is also an Integer, the denominator must be a factor (i.e., if N/D = K = INT(N/D), then both D and K are factors of N). The smallest D which satisfies this condition will give us the desired value of the greatest factor K = N/D. What values of D should be tried? The first guess would be 2 to N - 1. A refinement of this guess would be to observe that is the smallest possible factor, while N/2 is the largest. More-over, since \\surdN\\surdN = N, it is best to examine all D's = 2,3,..., \\surdN as possible factors. 1\\O READ N 2\\O FOR D = 2 TO SQR(N) 3\\O IF N/D = INT(N/D) THEN 70 4\\O NEXT D 5\\O PRINT N; \"IS PRIME\" 6\\O GO TO 1\\O 7\\O PRINT N/D; \"IS THE GREATEST FACTOR OF\"; N 8\\O GO TO 1\\O 9\\O DATA 1946, 1949, 1\\O\\O9, 1\\O\\O3 1\\O\\O DATA 11\\O\\O1, 24\\O, 11\\O END"}, "question": "task_1"}}, {"data": {"text": "Question:\nUsing FORTRAN rules what would be the value of sum in each case.\n\nOptions:\nA. 6\nB. 7\nC.             8\nD. 5\n\nAnswer: B\n\nReference Solution:\nThe rules adopted by the creators of FORTRAN state that evaluation of arithmetic operations is conducted from left to right, except when the succeeding operation has a higher \"binding power\" than the one currently being considered. The binding power of \"+\" and \"-\" is the lowest in strength; operators \"{_\\ast}\" and \"/\" are of middle strength, and raising to a power ({_\\ast}{_\\ast}) has the highest priority. The concept of parenthesizingsubexpressionswas added to the rules to achieve a sequence in operations different from the rules of binding power of operators. Therefore, using this knowledge we find the solutions to be : to 3. The result is 7.", "ref_id": 4577, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Using FORTRAN rules what would be the value of sum in each case.", "options": ["6", "7", "8", "5"], "answer": "B", "solution": "The rules adopted by the creators of FORTRAN state that evaluation of arithmetic operations is conducted from left to right, except when the succeeding operation has a higher \"binding power\" than the one currently being considered. The binding power of \"+\" and \"-\" is the lowest in strength; operators \"{_\\ast}\" and \"/\" are of middle strength, and raising to a power ({_\\ast}{_\\ast}) has the highest priority. The concept of parenthesizingsubexpressionswas added to the rules to achieve a sequence in operations different from the rules of binding power of operators. Therefore, using this knowledge we find the solutions to be : to 3. The result is 7."}, "question": "task_1"}}, {"data": {"text": "Question:\nFind a general formula to give information about the number of passes through the loop in both the best case and the worst case for the selection sort. Express in terms of N elements.\n\nOptions:\nA. N (N + 1) / 2\nB. N (N -1) / 2\nC.             N (N - 2) / 2\nD. N (N -1) / 3\n\nAnswer: B\n\nReference Solution:\nTake the worst case first. For the integers 5, 4, 3, 2, 1, the selection sort will take the following ac-tions: 1. Find the smallest entry and interchange it with the element in the first position. 1, 4, 3, 2, 5 2. Sort the remaining N - 1 elements in positions 2 through N of the array 1, 2, 3, 4, 5 If you refer back to the program, notice that on the first pass through the outer loop, the inner loop is executed for K from 2 to N; on the second pass, from 3 to N, and so on. The total number of passes through the inner loop is (N - 1) + (N - 2) + (N - 3) + ... 3 + 2 + 1, which comes to N (N - 1) / 2 passes through the inner loop. Unfortunately, the same number of passes is required in the best case to check the list. The best way to understand the formula above is to write the series in the order given and in reverse: (N - 1) + (N - 2) + (N - 3) + ... 3 + 2 + 1 1 + 2 + 3 + ... + (N - 3) + (N - 2) + (N - 1) Adding term by term, we get twice the sum of the series, which is N + N + N + ... + N + N + N Since there are N-l terms in the above series, twice the sum of the series may be written as N (N - 1). Dividing by 2 gives us the sum of the series, or N (N -1) / 2.", "ref_id": 4578, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Find a general formula to give information about the number of passes through the loop in both the best case and the worst case for the selection sort. Express in terms of N elements.", "options": ["N (N + 1) / 2", "N (N -1) / 2", "N (N - 2) / 2", "N (N -1) / 3"], "answer": "B", "solution": "Take the worst case first. For the integers 5, 4, 3, 2, 1, the selection sort will take the following ac-tions: 1. Find the smallest entry and interchange it with the element in the first position. 1, 4, 3, 2, 5 2. Sort the remaining N - 1 elements in positions 2 through N of the array 1, 2, 3, 4, 5 If you refer back to the program, notice that on the first pass through the outer loop, the inner loop is executed for K from 2 to N; on the second pass, from 3 to N, and so on. The total number of passes through the inner loop is (N - 1) + (N - 2) + (N - 3) + ... 3 + 2 + 1, which comes to N (N - 1) / 2 passes through the inner loop. Unfortunately, the same number of passes is required in the best case to check the list. The best way to understand the formula above is to write the series in the order given and in reverse: (N - 1) + (N - 2) + (N - 3) + ... 3 + 2 + 1 1 + 2 + 3 + ... + (N - 3) + (N - 2) + (N - 1) Adding term by term, we get twice the sum of the series, which is N + N + N + ... + N + N + N Since there are N-l terms in the above series, twice the sum of the series may be written as N (N - 1). Dividing by 2 gives us the sum of the series, or N (N -1) / 2."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program to read in a man's earning for the day, cal-culate his salary for the week and print it.\n\nOptions:\nA. A program to track weekly hours worked\nB. A program to calculate and print the week's salary\nC.             A program to record daily earnings\nD. A program to calculate monthly salary\n\nAnswer: B\n\nReference Solution:\nAPWKDAYS,= P'0'INITIALIZE COUNTER READREADCARD CARDIN,CRDEOFREADS IN EARNINGS FOR DAY GOES TO LABEL 'CRDEOF' WHEN NO MORE DATA IS FOUND. PACKWKERN, CRDERNCONVERT EBCDIC DATA TO PACK DECIMAL FOR CALCULATIONS APWKSUM, WKERNADDS DAY'S EARNINGS TO SALARY APWKDAYS , = P '1'ADDS 1 TO NUMBER OF DAYS WORKED CPWKDAYS, = P '6'MAN WORKS 6 DAYS PER WEEK BESALFND BREAD\\textasteriskcenteredif the program reaches this statement it means the pre-vious test has failed, it tells the computer that days worked does not yet equal 6, therefore another card must be read. \\textasteriskcenteredAT THIS POINT SALARY FOR WEEK IS FOUND SALFNDZAPWKDAYS, = P'0'RESET WKDAYS TO ZERO MVC PRTSUM, WKSUMPREPARE TO PRINT SALARY FOR THE WEEK PRINTLINPRTSAL, 132PRINT SALARY \\textbullet \\textbullet \\textbullet CRDEOF . . .END OF DATA; DO END OF FILE PROCEDURES \\textasteriskcenteredTHE DATA DEFINITION FOR THE INPUT AREA CARDINDS\\varphiCL80 \\varphi \\varphi CRDERNDSCL4 DSCL76 \\textasteriskcenteredTHE DATA DEFINITION FOR THE PRINT AREA. PRTSALDS\\varphiCL132 \\varphi \\varphi PRTSUMDSCL6 6 DS126C\" DS126C\" \\textasteriskcenteredDATA DEFINITION FOR WORK AREAS WKERNDSPL3 WKSUMDSPL4 WKDAYSDSPL2 READCARD CARDIN, CRDEOF: The first operand of this instruc-tion specifies the name of the data definition for this area. The data definition indicates how the data should be read in. On a card, the data must be punched exactly in the format specified by the data definition. You should also observe that there is a data definition for the print area. PACK WKERN, CRDERN: The data is read in EBCDIC form and cannot be operated on in this form. Hence, we convert it to packed decimal which is an operable form. ZAP WKDAYS, = P'O': The man has worked for six days, so after the sixth day we reset WKDAYS by zeroing it. MUC PRTSUM, WKSUM: Here the salary WKSUM is moved into the print area prior to printing. It is generally a good idea to edit (convert back to EBCDIC) data in packed decimal be-fore printing it. PRTLIN PRTSAL, 132:PRTSAL is the name of the data defini-tion for the print area, and 132 is the length' of the print area. You should note that the general format of a data definition is NAME DS\\varphiCLX. The\\varphiindicates \\varphi \\varphi that the symbols that follow are sub-area of the field. X is the length of the field, 80 for card, 132(or 133) for a print line.", "ref_id": 4579, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program to read in a man's earning for the day, cal-culate his salary for the week and print it.", "options": ["A program to track weekly hours worked", "A program to calculate and print the week's salary", "A program to record daily earnings", "A program to calculate monthly salary"], "answer": "B", "solution": "APWKDAYS,= P'0'INITIALIZE COUNTER READREADCARD CARDIN,CRDEOFREADS IN EARNINGS FOR DAY GOES TO LABEL 'CRDEOF' WHEN NO MORE DATA IS FOUND. PACKWKERN, CRDERNCONVERT EBCDIC DATA TO PACK DECIMAL FOR CALCULATIONS APWKSUM, WKERNADDS DAY'S EARNINGS TO SALARY APWKDAYS , = P '1'ADDS 1 TO NUMBER OF DAYS WORKED CPWKDAYS, = P '6'MAN WORKS 6 DAYS PER WEEK BESALFND BREAD\\textasteriskcenteredif the program reaches this statement it means the pre-vious test has failed, it tells the computer that days worked does not yet equal 6, therefore another card must be read. \\textasteriskcenteredAT THIS POINT SALARY FOR WEEK IS FOUND SALFNDZAPWKDAYS, = P'0'RESET WKDAYS TO ZERO MVC PRTSUM, WKSUMPREPARE TO PRINT SALARY FOR THE WEEK PRINTLINPRTSAL, 132PRINT SALARY \\textbullet \\textbullet \\textbullet CRDEOF . . .END OF DATA; DO END OF FILE PROCEDURES \\textasteriskcenteredTHE DATA DEFINITION FOR THE INPUT AREA CARDINDS\\varphiCL80 \\varphi \\varphi CRDERNDSCL4 DSCL76 \\textasteriskcenteredTHE DATA DEFINITION FOR THE PRINT AREA. PRTSALDS\\varphiCL132 \\varphi \\varphi PRTSUMDSCL6 6 DS126C\" DS126C\" \\textasteriskcenteredDATA DEFINITION FOR WORK AREAS WKERNDSPL3 WKSUMDSPL4 WKDAYSDSPL2 READCARD CARDIN, CRDEOF: The first operand of this instruc-tion specifies the name of the data definition for this area. The data definition indicates how the data should be read in. On a card, the data must be punched exactly in the format specified by the data definition. You should also observe that there is a data definition for the print area. PACK WKERN, CRDERN: The data is read in EBCDIC form and cannot be operated on in this form. Hence, we convert it to packed decimal which is an operable form. ZAP WKDAYS, = P'O': The man has worked for six days, so after the sixth day we reset WKDAYS by zeroing it. MUC PRTSUM, WKSUM: Here the salary WKSUM is moved into the print area prior to printing. It is generally a good idea to edit (convert back to EBCDIC) data in packed decimal be-fore printing it. PRTLIN PRTSAL, 132:PRTSAL is the name of the data defini-tion for the print area, and 132 is the length' of the print area. You should note that the general format of a data definition is NAME DS\\varphiCLX. The\\varphiindicates \\varphi \\varphi that the symbols that follow are sub-area of the field. X is the length of the field, 80 for card, 132(or 133) for a print line."}, "question": "task_1"}}, {"data": {"text": "Question:\nThe elements of a victor V are entered as follows on an APL computer. V \\leftarrow 3 4 2 -1. Show what will be displayed as a result of each of the Following statements: a) \u00d7/V,b) \\div/V,c) \\textasteriskcentered/V d) -/V,e) +/V.\n\nOptions:\nA. -24, -1.5, 9, 2, 8\nB. -24, -2, 8, 2, 8\nC.             -24, -1.5, 9, 1, 5\nD. -20, -1.5, 9, 3, 7\n\nAnswer: A\n\nReference Solution:\na) The value of x/v is obtained as follows: 2 \u00d7 (-1) = -2 4 \u00d7 (-2) = -8 3 \u00d7 (-8) = -24. Therefore -24 is displayed. b) The value of \\div/V is obtained as follows: 2 \\div (-1) = 2 /-1 = -(2/1) = -2 4 \\div (-2) = 4 / -2 = -(4/2) = -2 3 \\div (-2) = 3 / -2 = -(3/2) = -1.5. Therefore -1.5 is displayed c) The value of \\textasteriskcentered/V is obtained as follows: 2 \\textasteriskcentered (-1) = 2^-1 = 1/2^1 = 1/2 = 0.5 4 \\textasteriskcentered 0.5 - 4^0.5 = \\surd4 = 2. 3 \\textasteriskcentered 2 = 3^2 = 9. Therefore 9 is displayed. d) The value of -/V is obtained as follows: 2 - (-1) =2 + 1 = 3 4 - 3 = 1 3 - 1=2. Therefore 2 is displayed. e) The value of +/V is obtained as follows: 2 + (-1) = 2 - 1=1 4 + 1 = 5 3 + 5 = 8. Therefore 8 is displayed.", "ref_id": 4580, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "The elements of a victor V are entered as follows on an APL computer. V \\leftarrow 3 4 2 -1. Show what will be displayed as a result of each of the Following statements: a) \u00d7/V,b) \\div/V,c) \\textasteriskcentered/V d) -/V,e) +/V.", "options": ["-24, -1.5, 9, 2, 8", "-24, -2, 8, 2, 8", "-24, -1.5, 9, 1, 5", "-20, -1.5, 9, 3, 7"], "answer": "A", "solution": "a) The value of x/v is obtained as follows: 2 \u00d7 (-1) = -2 4 \u00d7 (-2) = -8 3 \u00d7 (-8) = -24. Therefore -24 is displayed. b) The value of \\div/V is obtained as follows: 2 \\div (-1) = 2 /-1 = -(2/1) = -2 4 \\div (-2) = 4 / -2 = -(4/2) = -2 3 \\div (-2) = 3 / -2 = -(3/2) = -1.5. Therefore -1.5 is displayed c) The value of \\textasteriskcentered/V is obtained as follows: 2 \\textasteriskcentered (-1) = 2^-1 = 1/2^1 = 1/2 = 0.5 4 \\textasteriskcentered 0.5 - 4^0.5 = \\surd4 = 2. 3 \\textasteriskcentered 2 = 3^2 = 9. Therefore 9 is displayed. d) The value of -/V is obtained as follows: 2 - (-1) =2 + 1 = 3 4 - 3 = 1 3 - 1=2. Therefore 2 is displayed. e) The value of +/V is obtained as follows: 2 + (-1) = 2 - 1=1 4 + 1 = 5 3 + 5 = 8. Therefore 8 is displayed."}, "question": "task_1"}}, {"data": {"text": "Question:\nExplain how an unconditional branch instruction is specified in an APL program.\n\nOptions:\nA. A double colon followed by a number or a label\nB. A question mark followed by a number or a label\nC.             A left pointing arrow followed by a number or a label\nD. A right pointing arrow followed by a number or a label\n\nAnswer: D\n\nReference Solution:\nAn unconditional branch instruction is specified in APL by means of a right pointing arrow followed by a number or a label. The number represents the program seg-ment to which a jump is desired. If a label is used in-stead of a number, the label specifies the statement in the program which is thuslabelled, and to which the transfer should be made. For example , in [4] \\rightarrow 2, the statement num-ber 4 of a certain program instructs the computer to branch unconditionally to the statement number 2 of the same pro-gram.", "ref_id": 4581, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Explain how an unconditional branch instruction is specified in an APL program.", "options": ["A double colon followed by a number or a label", "A question mark followed by a number or a label", "A left pointing arrow followed by a number or a label", "A right pointing arrow followed by a number or a label"], "answer": "D", "solution": "An unconditional branch instruction is specified in APL by means of a right pointing arrow followed by a number or a label. The number represents the program seg-ment to which a jump is desired. If a label is used in-stead of a number, the label specifies the statement in the program which is thuslabelled, and to which the transfer should be made. For example , in [4] \\rightarrow 2, the statement num-ber 4 of a certain program instructs the computer to branch unconditionally to the statement number 2 of the same pro-gram."}, "question": "task_1"}}, {"data": {"text": "Question:\nIn writing a basic assembler language program, our first and foremost concern is that of housekeeping. What is housekeep-ing and why is it necessary?\n\nOptions:\nA. Housekeeping is only concerned with the preparation of units and materials\nB. Housekeeping instructions are optional in a program\nC.             Housekeeping instructions only load the base register for the program\nD. Housekeeping instructions provide standard linkage between the program and the operating system, load and identify the base register for the program, and prepare the units and materials needed by the main processing part of the program.\n\nAnswer: D\n\nReference Solution:\nThe first six or so instructions of the IBM/360- 370 assembly language are the housekeeping instructions. In almost all programs, there is some housekeeping to be done. These instructions provide standard linkage between the program and the operating system. In general, these instructions are: LABELSTART\\varphi \\varphi \\varphi SAVE(14, 12) BALR3, 0 USING\\textasteriskcentered, 3 ST13, SAVE+4 LA13, SAVE These housekeeping instructions have three basic func-tions: 1. They provide standard operating system (OS) program linkage. This is done by means of the SAVE, ST and LA in-structions. 2. They load and identify the base register for the program. The BALR and USING statements perform this task. The third function is not of fundamental concern to the BAL programmer. This step involves preparation of the units and materials needed by the main processing part of the program. In most instances, the task is to open input and output files, a task which the system itself usually fails to perform. Let us now consider the basic functions of each instruc-tion: LABEL START\\varphi: The label is usually the name of the program. \\varphi START\\varphigives the system a location in memory where the program \\varphi should be stored. The address coded is almost never obtained so a zero is substituted, later to be re-placed by the assembler. SAVE (14, 12): Here, the contents of 15 (Register 13 excluded) of the system's 16 general purpose registers are saved. It is important to save the contents of these re-gisters since they may hold information pertinent to the system's operation. The save area generally has a length of 18fullwords, and saving of the registers starts in the fourth word. Let us now discuss the 'ST 13, SAVE+4' and 'LA 13, SAVE' instructions. Because of some system operations which the programmer doesn't need to concern himself with present-ly, it was found to be convenient to store the contents of Register 13 in the secondfullword, (SAVE + 4), of the SAVE area. The 'LA 13, SAVE' simply places the address of the SAVE area in Register 13. This is done so that the area can be referred to, and the contents of the register re-stored at the end of the program. Now, going back, we can look at the 'BALR 3,0' and the 'USING \\textasteriskcentered,3' instructions. The BALR sets up the base regis-ter for the program in Register 3. It then stores the base address (or just the address) of the program. The 'USING \\textasteriskcentered, 3', in effect confirms that Register 3 is the base regis-ter of the program. It tells the computer that starting at that point (indicated by \\textasteriskcentered-asterick) the base register of this program is Register 3. The way these two instructions are coded indicates the natural order of these two instruc-tions in most assembly language housekeeping procedures. The choice of the base register, of course, is left up to the programmer. From the above discussion we can clearly see why house-keeping is of foremost concern to the programmer. It allows the computer to preserve, for later use, the present con-tents of its registers, and it enables the assembler to properly place the users program in core.", "ref_id": 4582, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "In writing a basic assembler language program, our first and foremost concern is that of housekeeping. What is housekeep-ing and why is it necessary?", "options": ["Housekeeping is only concerned with the preparation of units and materials", "Housekeeping instructions are optional in a program", "Housekeeping instructions only load the base register for the program", "Housekeeping instructions provide standard linkage between the program and the operating system, load and identify the base register for the program, and prepare the units and materials needed by the main processing part of the program."], "answer": "D", "solution": "The first six or so instructions of the IBM/360- 370 assembly language are the housekeeping instructions. In almost all programs, there is some housekeeping to be done. These instructions provide standard linkage between the program and the operating system. In general, these instructions are: LABELSTART\\varphi \\varphi \\varphi SAVE(14, 12) BALR3, 0 USING\\textasteriskcentered, 3 ST13, SAVE+4 LA13, SAVE These housekeeping instructions have three basic func-tions: 1. They provide standard operating system (OS) program linkage. This is done by means of the SAVE, ST and LA in-structions. 2. They load and identify the base register for the program. The BALR and USING statements perform this task. The third function is not of fundamental concern to the BAL programmer. This step involves preparation of the units and materials needed by the main processing part of the program. In most instances, the task is to open input and output files, a task which the system itself usually fails to perform. Let us now consider the basic functions of each instruc-tion: LABEL START\\varphi: The label is usually the name of the program. \\varphi START\\varphigives the system a location in memory where the program \\varphi should be stored. The address coded is almost never obtained so a zero is substituted, later to be re-placed by the assembler. SAVE (14, 12): Here, the contents of 15 (Register 13 excluded) of the system's 16 general purpose registers are saved. It is important to save the contents of these re-gisters since they may hold information pertinent to the system's operation. The save area generally has a length of 18fullwords, and saving of the registers starts in the fourth word. Let us now discuss the 'ST 13, SAVE+4' and 'LA 13, SAVE' instructions. Because of some system operations which the programmer doesn't need to concern himself with present-ly, it was found to be convenient to store the contents of Register 13 in the secondfullword, (SAVE + 4), of the SAVE area. The 'LA 13, SAVE' simply places the address of the SAVE area in Register 13. This is done so that the area can be referred to, and the contents of the register re-stored at the end of the program. Now, going back, we can look at the 'BALR 3,0' and the 'USING \\textasteriskcentered,3' instructions. The BALR sets up the base regis-ter for the program in Register 3. It then stores the base address (or just the address) of the program. The 'USING \\textasteriskcentered, 3', in effect confirms that Register 3 is the base regis-ter of the program. It tells the computer that starting at that point (indicated by \\textasteriskcentered-asterick) the base register of this program is Register 3. The way these two instructions are coded indicates the natural order of these two instruc-tions in most assembly language housekeeping procedures. The choice of the base register, of course, is left up to the programmer. From the above discussion we can clearly see why house-keeping is of foremost concern to the programmer. It allows the computer to preserve, for later use, the present con-tents of its registers, and it enables the assembler to properly place the users program in core."}, "question": "task_1"}}, {"data": {"text": "Question:\nA corporate executive who is slowly embezzling money from thecompany's pension fund has instructed his partner in crime, an investment banker, to send all correspondence in code. The computer operators on his staff type the corres-pondenceon cards, each card containing 60 characters. To decode the message, you must first divide up the stringinto 5 blocks containing 12 characters each, with every twelfthcharacter used to build a word. In addition, each letter isto be replaced with the letter six ahead of it in the alphabet. Thus, A becomes G, B becomes H, and U becomesA, V becomes B, and so on. Write a procedure inPL/Ito read the characters from cards, decode the characters of each card, and print the 12 outputwords, four per line. The program should terminate whena card contains all consonants (consider Y to be a con-sonant) .\n\nOptions:\nA. PRINTIT and FINISH functions\nB. INDEX, VARYING and SUBSTR functions\nC.             ALP and INIT functions\nD. LOOP and GETDATA functions\n\nAnswer: B\n\nReference Solution:\nTo complete this program, we make use of the INDEX, VARYING andSUBSTR functions, three built-in routines useful for handling characters. We shall go through the program, explaining the implementationof each of these functions in the program. In the declaration section, we use the VARYING attribute to adjust thelength of the string. Based on the number of characters in the string, eachelement in the array having less than 5 characters will not be padded withblanks. IfWORD(12) were 'QOR', it would be stored just as is. Without the VARYING (VAR for short) attribute,WORD(12) would contain 'QOR '. After this we have a section which determines if the mes-sage is complete. Here we use the INDEX function. This is a powerful tool which searchesa character string to determine whether a specified character or combinationof characters is contained there. The five IF statements check tosee if any vowels are contained in the strings. If not found, a value of 0 isreturned to the program, and the next step is execut-ed. If it is found, INDEX returns a single integer indicating the number of the character wherethe match begins. This section causes the program to terminate if thecard contains all consonants. The statement in which characters are replaced deserves special attention. First, the double bar symbol stands for the concatenation operation. Its function is to connect two character strings to form a single, longerone. In this statement,WORD(J) is attached to a lengthy expression, be-ginning with the substring function SUBSTR. Let us digress for a moment to explain the SUBSTR func-tion. The generalform of this function is SUBSTR (a, n) where a is the name of a characterstring variable, and n is any numerical expression that produces apositive integer. It examines the string in a, reaches the nth character, andpulls from the string all characters, including the nth one, to the right. Say we have stored in WORD the characters 'WDPSO'. If we write NEWWORD =SUBSTR(WORD,3), the variable NEWWORD will contain thesubstring 'PSO'. We can even insert a third argument into the SUBSTR function, which has the same restric-tions as n, to indicate the lastcharacter we wish to remove. Now, the section of the statement following the \\vert\\vert symbol cam be explained. Character string ALP is the string which contains the master code. The INDEX function determines the number of the character to be moved, while the inner SUBSTR function finds the character in the string. The integer 6 is added to the number returned by the INDEX function to assigna letter six ahead of it in the alphabet. This is done to each characterin sequence. The output is given in tabular form with four words per row. DECODE:PROCOPTIONS(MAIN); DCL MESSAGECHAR(60), WORD(12) CHAR(5) VARYING, ALP CHAR (32) INIT ('ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEF '); /\\textasteriskcentered READ STRING TO DETERMINE IF MESSAGE IS COMPLETE \\textasteriskcentered/ LOOP: GETDATA(MESSAGE); IFINDEX(MESSAGE,'A')=0 THEN IFINDEX(MESSAGE,'E')=0 THEN IFINDEX(MESSAGE,'I')=0 THEN IFINDEX(MESSAGE,'O')=0 THEN IF INDEX (MESSAGE,'U')=0 THEN GO TO FINISH; /\\textasteriskcentered INITIALIZE ARRAY AND COUNTER \\textasteriskcentered/ WORD=' ' ; K = 0; /\\textasteriskcentered NEST WORD LOOP INSIDE LETTER LOOP \\textasteriskcentered/ LETTERS: DO I = 1 TO 5; WORDS: DO J = 1 TO 12; /\\textasteriskcentered NOW INCREMENT COUNTER, DETERMINE REPLACEMENT FOR LETTER, AND ADD REPLACEMENT TO WORD \\textasteriskcentered/ K=K+1; WORD (J) = WORD (J) \\vert\\vert SUBSTR (ALP, INDEX (ALP, SUBSTR (MESSAGE,K, 1)) + 6,1) ; END WORDS; END LETTERS; /\\textasteriskcentered PRINT DECODED WORDS \\textasteriskcentered/ PRINTIT: DO I = 1 TO 12 BY 4; PUT SKIP DATA [WORD (I) ,WORD(I+1) ,WORD(I+2) ,WORD (I+3)] ; END PRINTIT; GO TO LOOP; FINISH:ENDDECODE;", "ref_id": 4583, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "A corporate executive who is slowly embezzling money from thecompany's pension fund has instructed his partner in crime, an investment banker, to send all correspondence in code. The computer operators on his staff type the corres-pondenceon cards, each card containing 60 characters. To decode the message, you must first divide up the stringinto 5 blocks containing 12 characters each, with every twelfthcharacter used to build a word. In addition, each letter isto be replaced with the letter six ahead of it in the alphabet. Thus, A becomes G, B becomes H, and U becomesA, V becomes B, and so on. Write a procedure inPL/Ito read the characters from cards, decode the characters of each card, and print the 12 outputwords, four per line. The program should terminate whena card contains all consonants (consider Y to be a con-sonant) .", "options": ["PRINTIT and FINISH functions", "INDEX, VARYING and SUBSTR functions", "ALP and INIT functions", "LOOP and GETDATA functions"], "answer": "B", "solution": "To complete this program, we make use of the INDEX, VARYING andSUBSTR functions, three built-in routines useful for handling characters. We shall go through the program, explaining the implementationof each of these functions in the program. In the declaration section, we use the VARYING attribute to adjust thelength of the string. Based on the number of characters in the string, eachelement in the array having less than 5 characters will not be padded withblanks. IfWORD(12) were 'QOR', it would be stored just as is. Without the VARYING (VAR for short) attribute,WORD(12) would contain 'QOR '. After this we have a section which determines if the mes-sage is complete. Here we use the INDEX function. This is a powerful tool which searchesa character string to determine whether a specified character or combinationof characters is contained there. The five IF statements check tosee if any vowels are contained in the strings. If not found, a value of 0 isreturned to the program, and the next step is execut-ed. If it is found, INDEX returns a single integer indicating the number of the character wherethe match begins. This section causes the program to terminate if thecard contains all consonants. The statement in which characters are replaced deserves special attention. First, the double bar symbol stands for the concatenation operation. Its function is to connect two character strings to form a single, longerone. In this statement,WORD(J) is attached to a lengthy expression, be-ginning with the substring function SUBSTR. Let us digress for a moment to explain the SUBSTR func-tion. The generalform of this function is SUBSTR (a, n) where a is the name of a characterstring variable, and n is any numerical expression that produces apositive integer. It examines the string in a, reaches the nth character, andpulls from the string all characters, including the nth one, to the right. Say we have stored in WORD the characters 'WDPSO'. If we write NEWWORD =SUBSTR(WORD,3), the variable NEWWORD will contain thesubstring 'PSO'. We can even insert a third argument into the SUBSTR function, which has the same restric-tions as n, to indicate the lastcharacter we wish to remove. Now, the section of the statement following the \\vert\\vert symbol cam be explained. Character string ALP is the string which contains the master code. The INDEX function determines the number of the character to be moved, while the inner SUBSTR function finds the character in the string. The integer 6 is added to the number returned by the INDEX function to assigna letter six ahead of it in the alphabet. This is done to each characterin sequence. The output is given in tabular form with four words per row. DECODE:PROCOPTIONS(MAIN); DCL MESSAGECHAR(60), WORD(12) CHAR(5) VARYING, ALP CHAR (32) INIT ('ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEF '); /\\textasteriskcentered READ STRING TO DETERMINE IF MESSAGE IS COMPLETE \\textasteriskcentered/ LOOP: GETDATA(MESSAGE); IFINDEX(MESSAGE,'A')=0 THEN IFINDEX(MESSAGE,'E')=0 THEN IFINDEX(MESSAGE,'I')=0 THEN IFINDEX(MESSAGE,'O')=0 THEN IF INDEX (MESSAGE,'U')=0 THEN GO TO FINISH; /\\textasteriskcentered INITIALIZE ARRAY AND COUNTER \\textasteriskcentered/ WORD=' ' ; K = 0; /\\textasteriskcentered NEST WORD LOOP INSIDE LETTER LOOP \\textasteriskcentered/ LETTERS: DO I = 1 TO 5; WORDS: DO J = 1 TO 12; /\\textasteriskcentered NOW INCREMENT COUNTER, DETERMINE REPLACEMENT FOR LETTER, AND ADD REPLACEMENT TO WORD \\textasteriskcentered/ K=K+1; WORD (J) = WORD (J) \\vert\\vert SUBSTR (ALP, INDEX (ALP, SUBSTR (MESSAGE,K, 1)) + 6,1) ; END WORDS; END LETTERS; /\\textasteriskcentered PRINT DECODED WORDS \\textasteriskcentered/ PRINTIT: DO I = 1 TO 12 BY 4; PUT SKIP DATA [WORD (I) ,WORD(I+1) ,WORD(I+2) ,WORD (I+3)] ; END PRINTIT; GO TO LOOP; FINISH:ENDDECODE;"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite an APL program to find the wavelengths for the first four spectral lines of hydrogen in thePaschenseries.\n\nOptions:\nA. The program logic: \u2207PASCHEN [1]NU \u2190 109,677.58 (\u00f79 - \u00f7B*2) [2]LAMBDA \u2190 NU [3]LAMBDA \u2207\nB. The program logic: \u2207PASCHEN [1]NU \u2190 109,677.58 (\u00f79 + \u00f7B*2) [2]LAMBDA \u2190 \u00f7NU [3]LAMBDA \u2207\nC.             The program logic: \u2207PASCHEN [1]NU \u2190 109,677.58 (\u00f79 - \u00f7B*2) [2]LAMBDA \u2190 \u00f7NU [3]LAMBDA \u2207\nD. The program logic: \u2207PASCHEN [1]NU \u2190 109,677.58 (\u00f79 - \u00f7B*2) [2]LAMBDA \u2190 \u00f7NU [3]NU \u2207\n\nAnswer: C\n\nReference Solution:\nThePaschenseries deals with the infrared region of the hydrogen spectra. The equation used to find the lines is given in terms of the wavelength's reciprocal. NU = 109,677.58 [(1/9) - (1/B^2)]cm^-1, for B = 4,5,6,7. APL is useful in that we can design a program, and then enter the values for B in sequence. Remember also that in APL, operations are performed right-to-left. The program logic is quite simple: \\nablaPASCHEN [1]NU \\leftarrow 109,677.58 (\\div9 - \\divB\\textasteriskcentered2) [2]LAMBDA \\leftarrow \\divNU [3]LAMBDA \\nabla Now, when returned to the execution mode, you can enter the integers for B. Sample output looks like this: B \\leftarrow 4.0 PASCHEN 0.0001875 B \\leftarrow 5.0 PASCHEN 0.0001282 B \\leftarrow 6.0 PASCHEN 0.0001094 B \\leftarrow 7.0 PASCHEN 0.0001005 Note that this is the crudest way of entering the values for B. This process can be made easier by introducing vec-tors. If you were to enter: B \\leftarrow 4.05.06.07.0 PASCHEN the resulting output would be 0.00018750.00012820.00010940.0001005 Note, that only spaces are to be inserted between successive values of B, no commas.", "ref_id": 4584, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write an APL program to find the wavelengths for the first four spectral lines of hydrogen in thePaschenseries.", "options": ["The program logic: \u2207PASCHEN [1]NU \u2190 109,677.58 (\u00f79 - \u00f7B*2) [2]LAMBDA \u2190 NU [3]LAMBDA \u2207", "The program logic: \u2207PASCHEN [1]NU \u2190 109,677.58 (\u00f79 + \u00f7B*2) [2]LAMBDA \u2190 \u00f7NU [3]LAMBDA \u2207", "The program logic: \u2207PASCHEN [1]NU \u2190 109,677.58 (\u00f79 - \u00f7B*2) [2]LAMBDA \u2190 \u00f7NU [3]LAMBDA \u2207", "The program logic: \u2207PASCHEN [1]NU \u2190 109,677.58 (\u00f79 - \u00f7B*2) [2]LAMBDA \u2190 \u00f7NU [3]NU \u2207"], "answer": "C", "solution": "ThePaschenseries deals with the infrared region of the hydrogen spectra. The equation used to find the lines is given in terms of the wavelength's reciprocal. NU = 109,677.58 [(1/9) - (1/B^2)]cm^-1, for B = 4,5,6,7. APL is useful in that we can design a program, and then enter the values for B in sequence. Remember also that in APL, operations are performed right-to-left. The program logic is quite simple: \\nablaPASCHEN [1]NU \\leftarrow 109,677.58 (\\div9 - \\divB\\textasteriskcentered2) [2]LAMBDA \\leftarrow \\divNU [3]LAMBDA \\nabla Now, when returned to the execution mode, you can enter the integers for B. Sample output looks like this: B \\leftarrow 4.0 PASCHEN 0.0001875 B \\leftarrow 5.0 PASCHEN 0.0001282 B \\leftarrow 6.0 PASCHEN 0.0001094 B \\leftarrow 7.0 PASCHEN 0.0001005 Note that this is the crudest way of entering the values for B. This process can be made easier by introducing vec-tors. If you were to enter: B \\leftarrow 4.05.06.07.0 PASCHEN the resulting output would be 0.00018750.00012820.00010940.0001005 Note, that only spaces are to be inserted between successive values of B, no commas."}, "question": "task_1"}}, {"data": {"text": "Question:\nFind all three-digit numbers with non-zero first digit that are equal to the sum of the cubes of their digits.\n\nOptions:\nA. The condition to check is HTU = H2 + T2 + U2\nB. The solution involves checking each two-digit number\nC.             The solution is based upon having the computer check each three-digit number HTU to see if the condition HTU = H3 + T3 + U3 is satisfied.\nD. The solution involves manually checking each three-digit number\n\nAnswer: C\n\nReference Solution:\nThe solution is based upon having the computer check each three-digit number HTU = 100\\textasteriskcenteredH + 10\\textasteriskcenteredT + U to see if the condition HTU = H3 + T3 + U3 is satisfied. [Note that H stands for hundreds, T stands for tens, and U-for units]. Since we want all possible combinations of H,T, and U where U = 0,1,2,...,9; T = 0,1,2,...,9; and H = 1,2,3,...,9 - there are 10 \u00d7 10 \u00d7 9 = 900 numbers to check. We do this checking with three nested DO loops. The DO LOOP parameters take on values 1,2,...,10; 1,2,...,10; and 1,2,...,9, progressing from the inner to the outer loops. Since 1 is the lowest possible Integer to be assigned to any DO-LOOP index, the program subtracts 1 from indexes TP1 and UP1 to initiate them at zero. Meanwhile, the final values of TP1 and UP1 are set to 10, which become 9's after the same subtraction. The program looks as follows: INTEGER H,T,U,TP1, UP1 DO 10 H = 1,9 DO 10 TP1 = 1,10 T = TP1 - 1 DO 10 UP1 = 1,10 U = UP1 - 1 IF(100\\textasteriskcenteredH + 10\\textasteriskcenteredT + U.EQ. H\\textasteriskcentered\\textasteriskcentered3 + T\\textasteriskcentered\\textasteriskcentered3 + U\\textasteriskcentered\\textasteriskcentered3) GO TO 1 GO TO 10 1WRITE (6,100) H,T,U 10CONTINUE 100FORMAT (3I1) STOP END", "ref_id": 4585, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Find all three-digit numbers with non-zero first digit that are equal to the sum of the cubes of their digits.", "options": ["The condition to check is HTU = H2 + T2 + U2", "The solution involves checking each two-digit number", "The solution is based upon having the computer check each three-digit number HTU to see if the condition HTU = H3 + T3 + U3 is satisfied.", "The solution involves manually checking each three-digit number"], "answer": "C", "solution": "The solution is based upon having the computer check each three-digit number HTU = 100\\textasteriskcenteredH + 10\\textasteriskcenteredT + U to see if the condition HTU = H3 + T3 + U3 is satisfied. [Note that H stands for hundreds, T stands for tens, and U-for units]. Since we want all possible combinations of H,T, and U where U = 0,1,2,...,9; T = 0,1,2,...,9; and H = 1,2,3,...,9 - there are 10 \u00d7 10 \u00d7 9 = 900 numbers to check. We do this checking with three nested DO loops. The DO LOOP parameters take on values 1,2,...,10; 1,2,...,10; and 1,2,...,9, progressing from the inner to the outer loops. Since 1 is the lowest possible Integer to be assigned to any DO-LOOP index, the program subtracts 1 from indexes TP1 and UP1 to initiate them at zero. Meanwhile, the final values of TP1 and UP1 are set to 10, which become 9's after the same subtraction. The program looks as follows: INTEGER H,T,U,TP1, UP1 DO 10 H = 1,9 DO 10 TP1 = 1,10 T = TP1 - 1 DO 10 UP1 = 1,10 U = UP1 - 1 IF(100\\textasteriskcenteredH + 10\\textasteriskcenteredT + U.EQ. H\\textasteriskcentered\\textasteriskcentered3 + T\\textasteriskcentered\\textasteriskcentered3 + U\\textasteriskcentered\\textasteriskcentered3) GO TO 1 GO TO 10 1WRITE (6,100) H,T,U 10CONTINUE 100FORMAT (3I1) STOP END"}, "question": "task_1"}}, {"data": {"text": "Question:\nYou have been given an unordered table to search for a par-ticular entry. When this entry is found you are to replace it with an updated piece of data.\n\nOptions:\nA. Use a binary search\nB. Use a hash function for quick lookup\nC.             Sort the table first then search\nD. Use a linear search to inspect all elements of the table\n\nAnswer: D\n\nReference Solution:\nSince the table is not ordered it would be best to use a linear search in which all the elements of the table are inspected. To do this problem we will assume that the table has 100 entries and each entry is 14 bytes long. Program: RDCDREADCARDDATA, CRDEOF LA4, SYMTBLSTORE ADDRESS OF TABLE SEARCHCLC0(14, 4), SYMBOLCOMPARE ENTRY WITH ITEM TO BE SEARCHED FOR (SYMBOL) BESYMFOUNDIF EQUAL WE'VE FOUND SYMBOL C4, LAST'LAST' HOLDS THE ADDRESS OF THE LAST ENTRY IN THE TABLE BENOTFOUNDHERE, IF EQUAL AND THE SYM-BOL IS NOT FOUND, THEN IT IS NOT IN THE TABLE A4, = F '14'GO TO NEXT ENTRY IF SYMBOL IS NOT FOUND BSEARCHCONTINUE TO SEARCH NOTFOUND \\textbullet \\textbullet \\textbullet \\textbullet \\bullet \\bullet SYMFOUND MVC0 (14 , 4),REPLACE ENTRY WITH \\textbulletNUDATAUPDATED DATA \\textbullet CRDE OF- - - - - \\textasteriskcenteredDATA DEFINITION FOR INPUT AREAS SYMTBLDS100CL14ALLOCATE SPACE FOR A HUN-DRED 14-BYTE ENTRIES. SYMBOLDSCL14HOLDS SYMBOL BEING CHECKED. LASTDCA (FINDAT)STORES ADDRESS OF FINAL DATA IN TABLE. \\textasteriskcenteredDATA DEFINITION FOR INPUT AREA DATADC\\varphiCL80 \\varphi \\varphi NUDATADSCL14 DSCL66 Comments: The 'NOTFOUND' segment of this program would usually involve printing a message which indicates the data was not in the table. This is always a good procedure, since when we do any table searching there is the possiblility that the given data won't be found. For the 'LAST DC A (FINDAT)' instruction, the 'A' indicates that the address of the symbol in the parentheses should be stored in the location represented by the symbol in the label field. In other words, this instruction tells the computer to store the address of 'FINDAT' in the location denoted by LAST. In coding the table, in our program, we would attach the label 'LAST' to the final piece of data in the table. On reaching the label 'CRDEOF', program execution would have generally been completed, and as such, we would restore the contents of the registers stored at the begin-ning of our program.", "ref_id": 4586, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "You have been given an unordered table to search for a par-ticular entry. When this entry is found you are to replace it with an updated piece of data.", "options": ["Use a binary search", "Use a hash function for quick lookup", "Sort the table first then search", "Use a linear search to inspect all elements of the table"], "answer": "D", "solution": "Since the table is not ordered it would be best to use a linear search in which all the elements of the table are inspected. To do this problem we will assume that the table has 100 entries and each entry is 14 bytes long. Program: RDCDREADCARDDATA, CRDEOF LA4, SYMTBLSTORE ADDRESS OF TABLE SEARCHCLC0(14, 4), SYMBOLCOMPARE ENTRY WITH ITEM TO BE SEARCHED FOR (SYMBOL) BESYMFOUNDIF EQUAL WE'VE FOUND SYMBOL C4, LAST'LAST' HOLDS THE ADDRESS OF THE LAST ENTRY IN THE TABLE BENOTFOUNDHERE, IF EQUAL AND THE SYM-BOL IS NOT FOUND, THEN IT IS NOT IN THE TABLE A4, = F '14'GO TO NEXT ENTRY IF SYMBOL IS NOT FOUND BSEARCHCONTINUE TO SEARCH NOTFOUND \\textbullet \\textbullet \\textbullet \\textbullet \\bullet \\bullet SYMFOUND MVC0 (14 , 4),REPLACE ENTRY WITH \\textbulletNUDATAUPDATED DATA \\textbullet CRDE OF- - - - - \\textasteriskcenteredDATA DEFINITION FOR INPUT AREAS SYMTBLDS100CL14ALLOCATE SPACE FOR A HUN-DRED 14-BYTE ENTRIES. SYMBOLDSCL14HOLDS SYMBOL BEING CHECKED. LASTDCA (FINDAT)STORES ADDRESS OF FINAL DATA IN TABLE. \\textasteriskcenteredDATA DEFINITION FOR INPUT AREA DATADC\\varphiCL80 \\varphi \\varphi NUDATADSCL14 DSCL66 Comments: The 'NOTFOUND' segment of this program would usually involve printing a message which indicates the data was not in the table. This is always a good procedure, since when we do any table searching there is the possiblility that the given data won't be found. For the 'LAST DC A (FINDAT)' instruction, the 'A' indicates that the address of the symbol in the parentheses should be stored in the location represented by the symbol in the label field. In other words, this instruction tells the computer to store the address of 'FINDAT' in the location denoted by LAST. In coding the table, in our program, we would attach the label 'LAST' to the final piece of data in the table. On reaching the label 'CRDEOF', program execution would have generally been completed, and as such, we would restore the contents of the registers stored at the begin-ning of our program."}, "question": "task_1"}}, {"data": {"text": "Question:\nDevelop a program in FORTRAN for the sort.\n\nOptions:\nA. Sorting an array using Bubble sort in FORTRAN\nB. Merge two sorted arrays A and B into a master array C and the FORTRAN version of this algorithm\nC.             Merge two unsorted arrays into a master array\nD. Sorting an array using Quick sort in FORTRAN\n\nAnswer: B\n\nReference Solution:\nSay we have two arrays, A and B, and we wish to merge them into one master array C. Assume that A and B are already sorted in ascending order. For example, A (I)B (J)IJ 2611 31122 41333 51444 121955 To merge the two, you must first compare A (l) with B (l). The Smaller of the two will go in position C (1). If they are equal, a random device can decide which element goes first. Next, compare A (2) with B (1) to find the smaller element. This process continues until all of the elements have been compared. The followingpseudocodeillustrates the algorithm For simplicity, let us assume that A and B are 6 elements long; C will contain 12 elements: 1 = 6, J = 6, N = 1 II = 1; JJ = J do while N \\leq (length of array C.) if (elements of A have been sorted into C) C (N) = B (JJ) JJ = JJ + 1 if (elements of B have been sorted into C) C (N) = A (II) II = II + 1 else C (N) = B (JJ) JJ = JJ + 1 end if N = N + 1 end do while end program The FORTRAN version of this algorithm is presented below Appropriate comments have been placed throughout the program. As it is written, the program assumes the data has already been stored in the arrays A and B. DIMENSION A (6), B (6), C (12) INTEGER A, B, C DATA II, JJ, N / 6, 6, 1 / CDO WHILE N LESS THAN OR EQUAL TO 12 20IF (N.GT.12) GO TO 98 CIF FINISHED WITH ARRAY A, THEN IF (II.LB.6) GO TO 25 C (N)=B (JJ) JJ=JJ + 1 GO TO 40 25CONTINUE CIF FINISHED WITH ARRAY B, THEN IF (JJ.LE.6) GO TO 30 C (N) = A (II) II = II + l GO TO 40 30CONTINUE CIF A (II) LESS THAN B (JJ), THEN IF (A (II).GE.B (JJ)) GO TO 35 C (N) = A (II) II = II + 1 GO TO 40 CELSE 35CONTINUE C (N) = B (JJ) JJ = JJ + 1 CENDIF 40N = N + 1 GO TO 20 CEND DO-WHILE 98WRITE (5, 100) (C (N), N = 1, 12) 100FORMAT (12 (2x, 13))", "ref_id": 4587, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Develop a program in FORTRAN for the sort.", "options": ["Sorting an array using Bubble sort in FORTRAN", "Merge two sorted arrays A and B into a master array C and the FORTRAN version of this algorithm", "Merge two unsorted arrays into a master array", "Sorting an array using Quick sort in FORTRAN"], "answer": "B", "solution": "Say we have two arrays, A and B, and we wish to merge them into one master array C. Assume that A and B are already sorted in ascending order. For example, A (I)B (J)IJ 2611 31122 41333 51444 121955 To merge the two, you must first compare A (l) with B (l). The Smaller of the two will go in position C (1). If they are equal, a random device can decide which element goes first. Next, compare A (2) with B (1) to find the smaller element. This process continues until all of the elements have been compared. The followingpseudocodeillustrates the algorithm For simplicity, let us assume that A and B are 6 elements long; C will contain 12 elements: 1 = 6, J = 6, N = 1 II = 1; JJ = J do while N \\leq (length of array C.) if (elements of A have been sorted into C) C (N) = B (JJ) JJ = JJ + 1 if (elements of B have been sorted into C) C (N) = A (II) II = II + 1 else C (N) = B (JJ) JJ = JJ + 1 end if N = N + 1 end do while end program The FORTRAN version of this algorithm is presented below Appropriate comments have been placed throughout the program. As it is written, the program assumes the data has already been stored in the arrays A and B. DIMENSION A (6), B (6), C (12) INTEGER A, B, C DATA II, JJ, N / 6, 6, 1 / CDO WHILE N LESS THAN OR EQUAL TO 12 20IF (N.GT.12) GO TO 98 CIF FINISHED WITH ARRAY A, THEN IF (II.LB.6) GO TO 25 C (N)=B (JJ) JJ=JJ + 1 GO TO 40 25CONTINUE CIF FINISHED WITH ARRAY B, THEN IF (JJ.LE.6) GO TO 30 C (N) = A (II) II = II + l GO TO 40 30CONTINUE CIF A (II) LESS THAN B (JJ), THEN IF (A (II).GE.B (JJ)) GO TO 35 C (N) = A (II) II = II + 1 GO TO 40 CELSE 35CONTINUE C (N) = B (JJ) JJ = JJ + 1 CENDIF 40N = N + 1 GO TO 20 CEND DO-WHILE 98WRITE (5, 100) (C (N), N = 1, 12) 100FORMAT (12 (2x, 13))"}, "question": "task_1"}}, {"data": {"text": "Question:\nDesign a BASIC program to sort 50 random numbers by a method known as radix sorting. This method sorts numbers by examining individual digits, starting with the units column. For this problem, generate random numbers with no more than 4 digits.\n\nOptions:\nA. Merge Sort\nB. Bubble Sort\nC.             Radix Sort\nD. Quick Sort\n\nAnswer: C\n\nReference Solution:\nTo understand radix sorting, consider the follow-ing example: 3192, 4365, 6702, 13, 357, 3999, 4132, 1872, 6345, 582. At the first pass, the computer sorts the numbers according to the right- most digits. If two numbers have the same units digit, their order will be unchanged in the new list. 3192, 6702, 4132, 1872, 582, 13, 4365, 6345, 357, 3999. At the next pass - second right-most digits 6702, 0013, 4132, 6345, 0357, 4365, 1872, 0582, 3192, 3999. Similarly, on the third pass the computer compares third digits from the right in every number: 0013, 0357, 0582, 4132, 3192, 6345, 4365, 6702, 1872, 3999. At the fourth pass, the numbers are finally sorted into ascending order. 0013, 0357, 0582, 1872, 3192, 3999, 4132, 4365, 6345, 6702. For solving this problem, we need two arrays: one to hold the unsorted random numbers, and the other to hold the sorted list. Once the random numbers are generated, you check each column in succession, from units to thousands. To print the array after each pass, we will need four sepa-rate executions of the PRINT statement. The values can be printed out using the MAT PRINT command. Notice the par-ameters of the DIM statement in line 240. This means that there will be 10 rows and 5 columns. The reason for the parameters being (9,4) is that since we started our loop at zero, a place must be saved for thezerothvalue. 15REM RADIX SORT: DIGIT-BY-DIGIT COMPARISON 2\\ODIM R(49), S(49) 21LET V = 0 25REM FILL ARRAY R WITH 4-DIGIT RANDOM NOS 3\\OFOR J = 0 TO 49 4\\OLET R (J) = INT (10000\\textasteriskcenteredRND (X)) 5\\ONEXT J 6\\OLET L = 0 7\\OLET M = 0 8\\OFOR J = 0 T\\O 49 85REM IF 1 IS THE FIRST ELEMENT, LEAVE IT ALONE 9\\OIF R (J) = 1 THEN 2\\O\\O 1\\O\\OLET H = R (J) 11\\OFOR K = 0 T\\O V 12\\OLET Z = INT (H / 10) 125REM G IS THE RIGHTMOST DIGIT 13\\OLET G = H - 10\\textasteriskcenteredZ 14\\OLET H = Z 15\\ONEXT K 16\\OIF GOM THEN 2\\O\\O 165REM STORE R (J) IN SORTED ARRAY S (L) 17\\OLET S (L) = R (J) 18\\OLET R (J) = 1 19\\OLET L = L + 1 2\\O\\ONEXT J 21\\OLET M = M + 1 22\\OIF M < 10 THEN 80 23\\OPRINT 24\\OMAT (S) = DIM (9, 4) 25\\OPRINT 255REM PRINT SORTED ARRAY S AFTER EACH PASS 26\\OMAT PRINT S 27\\OMAT S = DIM (49) 28\\OMAT R = S 29\\OLET V = V + 1 295REM WHEN 4 DIGITS HAVE BEEN CHECKED, END 3\\O\\OIF V < 4 THEN 6\\O 31\\OEND", "ref_id": 4588, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Design a BASIC program to sort 50 random numbers by a method known as radix sorting. This method sorts numbers by examining individual digits, starting with the units column. For this problem, generate random numbers with no more than 4 digits.", "options": ["Merge Sort", "Bubble Sort", "Radix Sort", "Quick Sort"], "answer": "C", "solution": "To understand radix sorting, consider the follow-ing example: 3192, 4365, 6702, 13, 357, 3999, 4132, 1872, 6345, 582. At the first pass, the computer sorts the numbers according to the right- most digits. If two numbers have the same units digit, their order will be unchanged in the new list. 3192, 6702, 4132, 1872, 582, 13, 4365, 6345, 357, 3999. At the next pass - second right-most digits 6702, 0013, 4132, 6345, 0357, 4365, 1872, 0582, 3192, 3999. Similarly, on the third pass the computer compares third digits from the right in every number: 0013, 0357, 0582, 4132, 3192, 6345, 4365, 6702, 1872, 3999. At the fourth pass, the numbers are finally sorted into ascending order. 0013, 0357, 0582, 1872, 3192, 3999, 4132, 4365, 6345, 6702. For solving this problem, we need two arrays: one to hold the unsorted random numbers, and the other to hold the sorted list. Once the random numbers are generated, you check each column in succession, from units to thousands. To print the array after each pass, we will need four sepa-rate executions of the PRINT statement. The values can be printed out using the MAT PRINT command. Notice the par-ameters of the DIM statement in line 240. This means that there will be 10 rows and 5 columns. The reason for the parameters being (9,4) is that since we started our loop at zero, a place must be saved for thezerothvalue. 15REM RADIX SORT: DIGIT-BY-DIGIT COMPARISON 2\\ODIM R(49), S(49) 21LET V = 0 25REM FILL ARRAY R WITH 4-DIGIT RANDOM NOS 3\\OFOR J = 0 TO 49 4\\OLET R (J) = INT (10000\\textasteriskcenteredRND (X)) 5\\ONEXT J 6\\OLET L = 0 7\\OLET M = 0 8\\OFOR J = 0 T\\O 49 85REM IF 1 IS THE FIRST ELEMENT, LEAVE IT ALONE 9\\OIF R (J) = 1 THEN 2\\O\\O 1\\O\\OLET H = R (J) 11\\OFOR K = 0 T\\O V 12\\OLET Z = INT (H / 10) 125REM G IS THE RIGHTMOST DIGIT 13\\OLET G = H - 10\\textasteriskcenteredZ 14\\OLET H = Z 15\\ONEXT K 16\\OIF GOM THEN 2\\O\\O 165REM STORE R (J) IN SORTED ARRAY S (L) 17\\OLET S (L) = R (J) 18\\OLET R (J) = 1 19\\OLET L = L + 1 2\\O\\ONEXT J 21\\OLET M = M + 1 22\\OIF M < 10 THEN 80 23\\OPRINT 24\\OMAT (S) = DIM (9, 4) 25\\OPRINT 255REM PRINT SORTED ARRAY S AFTER EACH PASS 26\\OMAT PRINT S 27\\OMAT S = DIM (49) 28\\OMAT R = S 29\\OLET V = V + 1 295REM WHEN 4 DIGITS HAVE BEEN CHECKED, END 3\\O\\OIF V < 4 THEN 6\\O 31\\OEND"}, "question": "task_1"}}, {"data": {"text": "Question:\nYou have just received the output from one of your Basic Assembly Language (BAL) programs, but to your dismay, theoutput is not what you had hoped for. To debug this program, your first reaction is to check the contents of your storagelocations. What procedures would you follow inthis processof debugging?\n\nOptions:\nA. Check the Cross Reference Table and the P/P Storage Dump\nB. Check the syntax of the program\nC.             Check the logic flow of the program\nD. Recompile the program\n\nAnswer: A\n\nReference Solution:\nIt is the default of the computer's operating system to provide a Cross Reference Table and a P/P Storage Dump with each program listing. Among other things, the Cross Reference Table yields the names ofall variables and labels used in the program and their corresponding locationsin memory. The variables and labels of this table are gen-erally displayedin alphabetical order. Thus, finding any member of this table is comparableto obtaining a word from the page of a dictionary. When this variableis found the table provides us with the amount of space it occupiesin memory (LEN), where it is defined in the listing (DEFN), where itis referenced in the listing, and most important, the location of the variablein memory (value). The order of the information in the table will notnecessarily be as stated above. For our present purpose all we need to concern our-selves with is thevalue (address) that the table indicates for the symbol. Going to the P/P Storage Dump, we match our symbol value with the address we are searchingfor and also the contents of this address. By the use of this procedurewe are able to check the contents of any symbol in our program. There are two points to be noted: 1. 1. Depending on the computer, the Cross Reference Table will probably producemore information than presented here. 2. 2. Some computers will refer to the P/P Store Dump by a slightly different name, for example, Post Execution Storage Dump.", "ref_id": 4589, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "You have just received the output from one of your Basic Assembly Language (BAL) programs, but to your dismay, theoutput is not what you had hoped for. To debug this program, your first reaction is to check the contents of your storagelocations. What procedures would you follow inthis processof debugging?", "options": ["Check the Cross Reference Table and the P/P Storage Dump", "Check the syntax of the program", "Check the logic flow of the program", "Recompile the program"], "answer": "A", "solution": "It is the default of the computer's operating system to provide a Cross Reference Table and a P/P Storage Dump with each program listing. Among other things, the Cross Reference Table yields the names ofall variables and labels used in the program and their corresponding locationsin memory. The variables and labels of this table are gen-erally displayedin alphabetical order. Thus, finding any member of this table is comparableto obtaining a word from the page of a dictionary. When this variableis found the table provides us with the amount of space it occupiesin memory (LEN), where it is defined in the listing (DEFN), where itis referenced in the listing, and most important, the location of the variablein memory (value). The order of the information in the table will notnecessarily be as stated above. For our present purpose all we need to concern our-selves with is thevalue (address) that the table indicates for the symbol. Going to the P/P Storage Dump, we match our symbol value with the address we are searchingfor and also the contents of this address. By the use of this procedurewe are able to check the contents of any symbol in our program. There are two points to be noted: 1. 1. Depending on the computer, the Cross Reference Table will probably producemore information than presented here. 2. 2. Some computers will refer to the P/P Store Dump by a slightly different name, for example, Post Execution Storage Dump."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a BASIC program to obtain the relative frequencies of the three genotypes to be found in the next generation of a large Drosophila population. Assume the population is subject to the Hardy-Weinberg criteria. Use the general binomial equation (pA+qa)^2 to design a table for the number of individuals with AA,Aa, andaagenotypes.\n\nOptions:\nA. AA = (P^3) * 1000.0, A = (3 * P * Q) * 1000.0, SMA = (Q^3) * 1000.0\nB. AA = (P^2) * 1000.0, A = (2 * P * Q) * 1000.0, SMA = (Q^2) * 1000.0\nC.             AA = (P^2) * 2000.0, A = (2 * P * Q) * 2000.0, SMA = (Q^2) * 2000.0\nD. AA = (P^2) * 500.0, A = (2 * P * Q) * 500.0, SMA = (Q^2) * 500.0\n\nAnswer: B\n\nReference Solution:\nThe Hardy-Weinberg law states that a large population having completely randommatingsmaintains a constant genotypic frequency over every generation. This law is actually an idealized picture of reality, because it neglects the possibilities of natural selection, mutation, migration, and genetic drift. We want to design a program to simulate the genetic makeup of a suc-ceeding generation. First, recognize that (pA+qa)^2 = p^2AA + 2pqAa + q^2aa . Now, if we assume that the population contains 1000 individuals, choose the value for p-the frequency of a given allele A, to equal .7, and q-the frequency of the allele a, to equal .3, we can obtain three numbers which will describe the genotypes of the next generation. p2 will be the number of homozygous dominants, 2pq will be the number of hetero-zygous dominants, and q^2 will be the number of homozygous recessives. When each of these numbers are multiplied by the total population, the number of individuals of each genotype is obtained. AA is homozygous dominant, A is heterozygous dominant, and SMA is homozygous recessive. 1\\OREM HARDY-WEINBERG EQUATION 2\\OREAD P,Q 3\\OPRINT ''P'', \"Q\", \"HOMD.DOM.\", \"HETERO.DOM.\", \"HOUO.RBC.\" 4\\OLET AA = (P\\uparrow2) \\textasteriskcentered 1000.0 5\\OLET A = (2 \\textasteriskcentered P \\textasteriskcentered Q) \\textasteriskcentered 1000.0 6\\OLET SMA = (Q\\uparrow2) \\textasteriskcentered 1000.0 7\\OPRINT P, Q, AA, A, SMA 8\\ODATA \\O.7\\O, \\O.3\\O 9\\OEND", "ref_id": 4590, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a BASIC program to obtain the relative frequencies of the three genotypes to be found in the next generation of a large Drosophila population. Assume the population is subject to the Hardy-Weinberg criteria. Use the general binomial equation (pA+qa)^2 to design a table for the number of individuals with AA,Aa, andaagenotypes.", "options": ["AA = (P^3) * 1000.0, A = (3 * P * Q) * 1000.0, SMA = (Q^3) * 1000.0", "AA = (P^2) * 1000.0, A = (2 * P * Q) * 1000.0, SMA = (Q^2) * 1000.0", "AA = (P^2) * 2000.0, A = (2 * P * Q) * 2000.0, SMA = (Q^2) * 2000.0", "AA = (P^2) * 500.0, A = (2 * P * Q) * 500.0, SMA = (Q^2) * 500.0"], "answer": "B", "solution": "The Hardy-Weinberg law states that a large population having completely randommatingsmaintains a constant genotypic frequency over every generation. This law is actually an idealized picture of reality, because it neglects the possibilities of natural selection, mutation, migration, and genetic drift. We want to design a program to simulate the genetic makeup of a suc-ceeding generation. First, recognize that (pA+qa)^2 = p^2AA + 2pqAa + q^2aa . Now, if we assume that the population contains 1000 individuals, choose the value for p-the frequency of a given allele A, to equal .7, and q-the frequency of the allele a, to equal .3, we can obtain three numbers which will describe the genotypes of the next generation. p2 will be the number of homozygous dominants, 2pq will be the number of hetero-zygous dominants, and q^2 will be the number of homozygous recessives. When each of these numbers are multiplied by the total population, the number of individuals of each genotype is obtained. AA is homozygous dominant, A is heterozygous dominant, and SMA is homozygous recessive. 1\\OREM HARDY-WEINBERG EQUATION 2\\OREAD P,Q 3\\OPRINT ''P'', \"Q\", \"HOMD.DOM.\", \"HETERO.DOM.\", \"HOUO.RBC.\" 4\\OLET AA = (P\\uparrow2) \\textasteriskcentered 1000.0 5\\OLET A = (2 \\textasteriskcentered P \\textasteriskcentered Q) \\textasteriskcentered 1000.0 6\\OLET SMA = (Q\\uparrow2) \\textasteriskcentered 1000.0 7\\OPRINT P, Q, AA, A, SMA 8\\ODATA \\O.7\\O, \\O.3\\O 9\\OEND"}, "question": "task_1"}}, {"data": {"text": "Question:\nIf the year 1975 (year 1) is started with a 2 year old truck, what decision should be made at the start of this year and the start of the next four years in order to maximize the total return.\n\nOptions:\nA. Keep the old truck until 1979\nB. Purchase a truck at the start of 1975 and keep it until 1979\nC.             Replace the truck every year\nD. Replace the truck in 1977\n\nAnswer: B\n\nReference Solution:\nThis is a problem in dynamic optimization. A series of decisions must be made over time so as to maxi-mize some chosen quantity. Each decision by itself may be non-optimal; the optimality of the sequence of decisions is what matters. As an example, suppose X wishes to travel from city A to city F and has the choice of routes ABCF and ADEF. It is possible for AB to cost less than AD and yet ADEF may be cheaper overall (DE is less than BC and EF is less than CF). Going back to the initial problem, let 1)r_i (t) = revenue in period i from a truck that was made in year (i - t) and is t years old at the start of period i. For example r_3(3) = 8. 2)ui(t) = upkeep in period i on a truck that was made in year (i - t) and is t years old at the start of period i. For example, a truck made in 1975 requires an up-keep of 2 in 1978, i.e., u_5 (3) = 2. 3)c_i(t) = cost to replace a truck that was made in year (i - t) and is t years old at the start of period i. 4)IT = age of the given truck = 2. 5)fi(t) = optimal return for periods i, i+1,...., 5 when the i-th period is started with a truck that is t years old. 6)X_i (t) = decision to make at the start of period i that will yield f_i(t). The only two possible decisions are to keep the old truck or to purchase a new one. Suppose the current truck was 2 years old at the start of 1975 (year 1), and the estimates in table I are available. Suppose we decide to keep the current truck until 1979. Then the total revenue is 10 + 8 + 8 + 6 + 4 = 36. Total upkeep is3 + 3 + 4 + 4 + 5 = 19. Thus total return is 17. On the other hand, suppose we decide to replace the 1973 truck with a truck made in 1975 at the start of 1975. Then, total revenue is 14 + 16 + 16 + 14 + 12 = 72 and the upkeep costs are TABLE I:Truck made... 1973 (year minus 1) Age Revenue Upkeep Replacement 2 10 3 25 3 8 3 26 4 8 4 27 5 6 4 28 6 4 5 29 Truck made in 1975 (year 1) Age Revenue Upkeep Replacement 0 14 1 20 1 16 1 22 2 16 2 24 3 14 2 25 4 12 3 26 Truck made in 1976 (year 2) Age Revenue Upkeep Replacement 0 16 1 20 1 14 1 22 2 14 2 22 3 12 2 25 Truck made in 1977 (year 3) Age Revenue Upkeep Replacement 0 18 1 20 1 16 1 22 2 16 2 24 Truck made in 1978 (year 4) Age Revenue Upkeep Replacement 0 18 1 21 1 16 1 22 Truck made in 1979 (year 5) Age Revenue Upkeep Replacement 0 20 1 21 1 + 1 + 2 + 2 + 3 = 9 Replacement costs are 25 and hence total return is 38. Of course we could keep the truck for a year and then sell it. The total return in this case works out to 37. Clearly there is a large number of possible choices. The functional equation for period i is fi(t) = max\u2502purchase:ri(0) - u_i (0) + Ci(t)_ + fi+1(1)\u2502 \u2502keep:ri(t) - u_i (t) + fi+1(t + 1)\u2502 for i = 1,2,...,5 and t = 1,2,....(i - 1), (i+ IT - 1) We now apply the functional equation working back-wards. That is, assume that the fifth year is reached with a truck that is 1, 2, 3, 4, or 6 years old. Thus, for i = 5 and t = 1 f5(1) = max\u2502Purchase: r5(0) - u_5 (0) + C5(1)+ f6(1) \u2502 \u2502keep:r_5 (1) - u_5 (1) + f6+(2)\u2502 Note that f_6 (j) = 0 for all j. Then f5(1) = max\u250220 - 1 - 24 + 0\u2502 \u250216 - 1 + 0\u2502 = 15 Thus, we keep the 1978 truck in 1979, i.e., x_5 (1) is keep. At t = 2 f5(2) = max\u2502Purchase: r5(0) - u_5 (0) + C5(2)\u2502 \u2502keep:r5(2) - u_5 (2)\u2502 = max\u250220 - 1 - 24\u2502 \u250216 - 2\u2502 = 14 x_5(2) = keep t = 3 f5(3) = max\u2502Purchase: 20 - 1 - 25\u2502 \u2502Keep:12 - 2\u2502 = 10 x5(3) = keep t= 4 f5(4) = max\u2502Purchase:20 - 1 - 26\u2502 \u2502Keep:12 - 3\u2502 = 9 x5(4) = keep t = 6 f5(6) = max\u2502Purchase:20 - 1 - 29\u2502 \u2502Keep:4 - 5\u2502 = -1 X5(6) = keep. Now, assume that the start of the fourth period is reached with a 1, 2, 3, or 5 year old truck. The optimal decision to make in order to maximize the return from the last two periods is given by the functional equation: f4(t) = max\u2502P: r_4(0) - u_4(0) - C_4(t) + f_5(1)\u2502 \u2502K: r_4(t) - u_4(t) + f_5(t + 1)\u2502 t = 1,2,3,4,5 Thus, f_4 (1) = max\u2502P: 18 - 1 - 22 + 15\u2502 \u2502K: 16 - 1 + 14\u2502 = 29 x_4(1) = Keep f_4 (2) = max\u2502P: 18 - 1 - 24 + 15\u2502 \u2502K: 14 - 2 + 10\u2502 = 22 x_4(2) = Keep f_4 (3) = max\u2502P: 18 - 1 - 25 + 15\u2502 \u2502K: 14 - 2 + 9\u2502 = 21 x_4(3) = Keep f_4 (5) = max\u2502P: 18 - 1 - 28 + 15\u2502 \u2502K: 6 - 4 + (-1)\u2502 = 4 x_4(5) = purchase Moving back to the start of the third period and consider-ing the optimal policy over the last three periods when the third period is started with a 1, 2 or 4 year old truck, we have f_3(t) = max\u2502P: r_3(0) - u_3(0) - C_3(t) + f_4 (1)\u2502 \u2502K: r_3(t) - u_3(t) + f_4(t + 1)\u2502 t = 1,2,4 f_3(1) = max\u2502P: 18 - 1 - 22 + 29\u2502 \u2502K: 14 - 1 + 22\u2502 = 35 x_3(1) = Keep f_3(2) = max\u2502P: 18 - 1 - 24 + 29\u2502 \u2502K: 16 - 2 + 21\u2502 = 35 x_3(2) = Keep f_3(4) = max\u2502P: 18 - 1 - 27 + 29\u2502 \u2502K: 8 - 4 + 4\u2502 = 19 x_3(4) = purchase Now move backwards from period 2 with t = 1, 3 f_2(1) = max\u2502P: 16 - 1 - 22 + 35\u2502 \u2502K: 16 - 1 + 35\u2502 = 50 x_2(1) = Keep f_2(3) = max\u2502P: 16 - 1 - 26 + 35\u2502 \u2502K: 8 - 3 + 19\u2502 = 24 x_2(3) = purchase or keep Finally, period 1 is reached where we have a 2-year old truck. To arrive at a decision whether to keep it or replace it in order to maximize the total return over the next five periods, we have f_1(2) = max\u2502P: 14 - 1 - 25 + 50\u2502 \u2502K: 10 - 3 + 24\u2502 = 38 x_1(2) = purchase Thus, we purchase a truck at the start of 1975. We keep this truck in 1976, 1977, 1978 and 1979 in order to maxi-mize total returns over the next four years.", "ref_id": 4591, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "If the year 1975 (year 1) is started with a 2 year old truck, what decision should be made at the start of this year and the start of the next four years in order to maximize the total return.", "options": ["Keep the old truck until 1979", "Purchase a truck at the start of 1975 and keep it until 1979", "Replace the truck every year", "Replace the truck in 1977"], "answer": "B", "solution": "This is a problem in dynamic optimization. A series of decisions must be made over time so as to maxi-mize some chosen quantity. Each decision by itself may be non-optimal; the optimality of the sequence of decisions is what matters. As an example, suppose X wishes to travel from city A to city F and has the choice of routes ABCF and ADEF. It is possible for AB to cost less than AD and yet ADEF may be cheaper overall (DE is less than BC and EF is less than CF). Going back to the initial problem, let 1)r_i (t) = revenue in period i from a truck that was made in year (i - t) and is t years old at the start of period i. For example r_3(3) = 8. 2)ui(t) = upkeep in period i on a truck that was made in year (i - t) and is t years old at the start of period i. For example, a truck made in 1975 requires an up-keep of 2 in 1978, i.e., u_5 (3) = 2. 3)c_i(t) = cost to replace a truck that was made in year (i - t) and is t years old at the start of period i. 4)IT = age of the given truck = 2. 5)fi(t) = optimal return for periods i, i+1,...., 5 when the i-th period is started with a truck that is t years old. 6)X_i (t) = decision to make at the start of period i that will yield f_i(t). The only two possible decisions are to keep the old truck or to purchase a new one. Suppose the current truck was 2 years old at the start of 1975 (year 1), and the estimates in table I are available. Suppose we decide to keep the current truck until 1979. Then the total revenue is 10 + 8 + 8 + 6 + 4 = 36. Total upkeep is3 + 3 + 4 + 4 + 5 = 19. Thus total return is 17. On the other hand, suppose we decide to replace the 1973 truck with a truck made in 1975 at the start of 1975. Then, total revenue is 14 + 16 + 16 + 14 + 12 = 72 and the upkeep costs are TABLE I:Truck made... 1973 (year minus 1) Age Revenue Upkeep Replacement 2 10 3 25 3 8 3 26 4 8 4 27 5 6 4 28 6 4 5 29 Truck made in 1975 (year 1) Age Revenue Upkeep Replacement 0 14 1 20 1 16 1 22 2 16 2 24 3 14 2 25 4 12 3 26 Truck made in 1976 (year 2) Age Revenue Upkeep Replacement 0 16 1 20 1 14 1 22 2 14 2 22 3 12 2 25 Truck made in 1977 (year 3) Age Revenue Upkeep Replacement 0 18 1 20 1 16 1 22 2 16 2 24 Truck made in 1978 (year 4) Age Revenue Upkeep Replacement 0 18 1 21 1 16 1 22 Truck made in 1979 (year 5) Age Revenue Upkeep Replacement 0 20 1 21 1 + 1 + 2 + 2 + 3 = 9 Replacement costs are 25 and hence total return is 38. Of course we could keep the truck for a year and then sell it. The total return in this case works out to 37. Clearly there is a large number of possible choices. The functional equation for period i is fi(t) = max\u2502purchase:ri(0) - u_i (0) + Ci(t)_ + fi+1(1)\u2502 \u2502keep:ri(t) - u_i (t) + fi+1(t + 1)\u2502 for i = 1,2,...,5 and t = 1,2,....(i - 1), (i+ IT - 1) We now apply the functional equation working back-wards. That is, assume that the fifth year is reached with a truck that is 1, 2, 3, 4, or 6 years old. Thus, for i = 5 and t = 1 f5(1) = max\u2502Purchase: r5(0) - u_5 (0) + C5(1)+ f6(1) \u2502 \u2502keep:r_5 (1) - u_5 (1) + f6+(2)\u2502 Note that f_6 (j) = 0 for all j. Then f5(1) = max\u250220 - 1 - 24 + 0\u2502 \u250216 - 1 + 0\u2502 = 15 Thus, we keep the 1978 truck in 1979, i.e., x_5 (1) is keep. At t = 2 f5(2) = max\u2502Purchase: r5(0) - u_5 (0) + C5(2)\u2502 \u2502keep:r5(2) - u_5 (2)\u2502 = max\u250220 - 1 - 24\u2502 \u250216 - 2\u2502 = 14 x_5(2) = keep t = 3 f5(3) = max\u2502Purchase: 20 - 1 - 25\u2502 \u2502Keep:12 - 2\u2502 = 10 x5(3) = keep t= 4 f5(4) = max\u2502Purchase:20 - 1 - 26\u2502 \u2502Keep:12 - 3\u2502 = 9 x5(4) = keep t = 6 f5(6) = max\u2502Purchase:20 - 1 - 29\u2502 \u2502Keep:4 - 5\u2502 = -1 X5(6) = keep. Now, assume that the start of the fourth period is reached with a 1, 2, 3, or 5 year old truck. The optimal decision to make in order to maximize the return from the last two periods is given by the functional equation: f4(t) = max\u2502P: r_4(0) - u_4(0) - C_4(t) + f_5(1)\u2502 \u2502K: r_4(t) - u_4(t) + f_5(t + 1)\u2502 t = 1,2,3,4,5 Thus, f_4 (1) = max\u2502P: 18 - 1 - 22 + 15\u2502 \u2502K: 16 - 1 + 14\u2502 = 29 x_4(1) = Keep f_4 (2) = max\u2502P: 18 - 1 - 24 + 15\u2502 \u2502K: 14 - 2 + 10\u2502 = 22 x_4(2) = Keep f_4 (3) = max\u2502P: 18 - 1 - 25 + 15\u2502 \u2502K: 14 - 2 + 9\u2502 = 21 x_4(3) = Keep f_4 (5) = max\u2502P: 18 - 1 - 28 + 15\u2502 \u2502K: 6 - 4 + (-1)\u2502 = 4 x_4(5) = purchase Moving back to the start of the third period and consider-ing the optimal policy over the last three periods when the third period is started with a 1, 2 or 4 year old truck, we have f_3(t) = max\u2502P: r_3(0) - u_3(0) - C_3(t) + f_4 (1)\u2502 \u2502K: r_3(t) - u_3(t) + f_4(t + 1)\u2502 t = 1,2,4 f_3(1) = max\u2502P: 18 - 1 - 22 + 29\u2502 \u2502K: 14 - 1 + 22\u2502 = 35 x_3(1) = Keep f_3(2) = max\u2502P: 18 - 1 - 24 + 29\u2502 \u2502K: 16 - 2 + 21\u2502 = 35 x_3(2) = Keep f_3(4) = max\u2502P: 18 - 1 - 27 + 29\u2502 \u2502K: 8 - 4 + 4\u2502 = 19 x_3(4) = purchase Now move backwards from period 2 with t = 1, 3 f_2(1) = max\u2502P: 16 - 1 - 22 + 35\u2502 \u2502K: 16 - 1 + 35\u2502 = 50 x_2(1) = Keep f_2(3) = max\u2502P: 16 - 1 - 26 + 35\u2502 \u2502K: 8 - 3 + 19\u2502 = 24 x_2(3) = purchase or keep Finally, period 1 is reached where we have a 2-year old truck. To arrive at a decision whether to keep it or replace it in order to maximize the total return over the next five periods, we have f_1(2) = max\u2502P: 14 - 1 - 25 + 50\u2502 \u2502K: 10 - 3 + 24\u2502 = 38 x_1(2) = purchase Thus, we purchase a truck at the start of 1975. We keep this truck in 1976, 1977, 1978 and 1979 in order to maxi-mize total returns over the next four years."}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a BASIC program which compares two strings according to their alphabetic ordering. Output both strings and their relationship to each other.\n\nOptions:\nA. String variables are denoted by A and B.\nB. In this problem string variables are denoted by A$ and B$. They can be compared to each other using the relational operators <, =, or >.\nC.             The program uses the IF-THEN structure.\nD. The program ends when the input is 'STOP'.\n\nAnswer: B\n\nReference Solution:\nIn this problem string variables are denoted by A$ and B$. They can be compared to each other using the relational operators <, =, or > . 1\\O\\O REM COMPARES STRINGS FOR ORDER 11\\O PRING \"A$\"; 12\\O INPUT A$ 13\\O IF A$ = \"STOP\" THEN 24\\O 14\\O PRINT \"B$\"; 15\\O INPUT B$ 16\\O IF A$ < B$ THEN 22\\O 17\\O IF A$ = B$ THEN 2\\O\\O 18\\O PRINT A$; \"IS GREATER THAN\"; B$ 19\\O GO TO 1\\O\\O 2\\O\\O PRINT A$; \"IS EQUAL TO\"; B$ 21\\O GO TO 1\\O\\O 22\\O PRINT A$; \"IS LESS THAN\"; B$ 23\\O GO TO 1\\O\\O 24\\O END", "ref_id": 4592, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a BASIC program which compares two strings according to their alphabetic ordering. Output both strings and their relationship to each other.", "options": ["String variables are denoted by A and B.", "In this problem string variables are denoted by A$ and B$. They can be compared to each other using the relational operators <, =, or >.", "The program uses the IF-THEN structure.", "The program ends when the input is 'STOP'."], "answer": "B", "solution": "In this problem string variables are denoted by A$ and B$. They can be compared to each other using the relational operators <, =, or > . 1\\O\\O REM COMPARES STRINGS FOR ORDER 11\\O PRING \"A$\"; 12\\O INPUT A$ 13\\O IF A$ = \"STOP\" THEN 24\\O 14\\O PRINT \"B$\"; 15\\O INPUT B$ 16\\O IF A$ < B$ THEN 22\\O 17\\O IF A$ = B$ THEN 2\\O\\O 18\\O PRINT A$; \"IS GREATER THAN\"; B$ 19\\O GO TO 1\\O\\O 2\\O\\O PRINT A$; \"IS EQUAL TO\"; B$ 21\\O GO TO 1\\O\\O 22\\O PRINT A$; \"IS LESS THAN\"; B$ 23\\O GO TO 1\\O\\O 24\\O END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite apseudocodedprogram to input a sequence of numbers(representing kilowatt-hours, KWH) and output electricbills according to the following schedule: Each of the first 100 KWHs costs 10 cents Each of the next 100 costs 6 cents Each of the next 200 costs 8 cents Each KWH over 400 costs 10 cents. The program should terminate when a negative number is inputted. Also, how could you improve this programto handlethe situation in which the rate schedule changed rapidly?\n\nOptions:\nA. Change the initial values of KWH and cost\nB. Remove the IF-THEN constructs\nC.             Use a FOR loop instead of a DO-WHILE loop\nD. Rewrite few lines of code in a subprogram, or insert 2 READ statements for inputting the KWH segments and the price of each segment\n\nAnswer: D\n\nReference Solution:\nThe program logic is straightforward. A DO-WHILE construct is set up, so that each entry of kilowatt-hours is processed separately until a negativevalue is encoun-tered . realKWH, COST inputKWH (1) through KWH (N) dowhile KWH > 0 if0 \\leq KWH < 100 thenCOST\\leftarrow10.0\\textasteriskcenteredKWH if100 \\leq KWH < 200 thenCOST\\leftarrow(10. 0\\textasteriskcentered100.0) + (6. 0\\textasteriskcentered (KWH-100.0)) if200 \\leq WH \\leq 400 thenCOST\\leftarrow(10.0\\textasteriskcentered100.0) + (6.0\\textasteriskcentered100.0) + (8.0\\textasteriskcentered(KWH-200.0)) elseCOST\\leftarrow(10.0\\textasteriskcentered100.0) + (6.0\\textasteriskcentered100.0) + (8.0\\textasteriskcentered200.0) + (10.0\\textasteriskcentered(KWH-400.0)) outputKWH, COST enddo while endprogram If the rates of the electric bills climb in price often, the program wouldhave to be rewritten just as often. To avoid this nuisance, we could writesubprograms to do the job. After each IF-THEN construct, a statementcalling a particular subprogram with a certain billing schedule couldbe inserted. In this way, the main program is left untouched, and you wouldneed to rewrite only a few lines of code in a subprogram. This is veryoften the case in programming for business applications. An alternative way of handling the situation of rapid rate schedule changeswould be to insert 2 READ statements in the program, one for inputtingthe KWH segments, and another for inputting the price of each segment.", "ref_id": 4593, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write apseudocodedprogram to input a sequence of numbers(representing kilowatt-hours, KWH) and output electricbills according to the following schedule: Each of the first 100 KWHs costs 10 cents Each of the next 100 costs 6 cents Each of the next 200 costs 8 cents Each KWH over 400 costs 10 cents. The program should terminate when a negative number is inputted. Also, how could you improve this programto handlethe situation in which the rate schedule changed rapidly?", "options": ["Change the initial values of KWH and cost", "Remove the IF-THEN constructs", "Use a FOR loop instead of a DO-WHILE loop", "Rewrite few lines of code in a subprogram, or insert 2 READ statements for inputting the KWH segments and the price of each segment"], "answer": "D", "solution": "The program logic is straightforward. A DO-WHILE construct is set up, so that each entry of kilowatt-hours is processed separately until a negativevalue is encoun-tered . realKWH, COST inputKWH (1) through KWH (N) dowhile KWH > 0 if0 \\leq KWH < 100 thenCOST\\leftarrow10.0\\textasteriskcenteredKWH if100 \\leq KWH < 200 thenCOST\\leftarrow(10. 0\\textasteriskcentered100.0) + (6. 0\\textasteriskcentered (KWH-100.0)) if200 \\leq WH \\leq 400 thenCOST\\leftarrow(10.0\\textasteriskcentered100.0) + (6.0\\textasteriskcentered100.0) + (8.0\\textasteriskcentered(KWH-200.0)) elseCOST\\leftarrow(10.0\\textasteriskcentered100.0) + (6.0\\textasteriskcentered100.0) + (8.0\\textasteriskcentered200.0) + (10.0\\textasteriskcentered(KWH-400.0)) outputKWH, COST enddo while endprogram If the rates of the electric bills climb in price often, the program wouldhave to be rewritten just as often. To avoid this nuisance, we could writesubprograms to do the job. After each IF-THEN construct, a statementcalling a particular subprogram with a certain billing schedule couldbe inserted. In this way, the main program is left untouched, and you wouldneed to rewrite only a few lines of code in a subprogram. This is veryoften the case in programming for business applications. An alternative way of handling the situation of rapid rate schedule changeswould be to insert 2 READ statements in the program, one for inputtingthe KWH segments, and another for inputting the price of each segment."}, "question": "task_1"}}, {"data": {"text": "Question:\nThe friendly neighborhood bank is planning to start a lottery toattract new customers. A new account receives a number containingthree digits. The digits are be-tween 000 and 999 andwe will assume that all 1,000 combinations have been givenout. Prizes are awarded according to the following scheme: 3 numbersalike$100 gift certificate 2 numbersalike$10 gift certificate What will be the cost of the lottery to the bank?\n\nOptions:\nA. COST OF FIRST KIND S1\nB. TOTAL COST S3 + S2\nC.             COST OF LOTTERY S3\nD. COST OF SECOND KIND S2\n\nAnswer: C\n\nReference Solution:\nThere are 1000 numbers between 000 and 999. Each occurrence ofa number composed of the same digits (like 000,111...) contributes $100 to the total cost, while each occurrence of a number with two similar digits(like 005, 511, 363...) adds $10 to the cost. The total cost is composedof the cost of all \"triplets\\textquotedblright added to the cost of all \"doublets\". 10PRINT \"GAMBLING BANKS\" 20S1 = 0 30S2 = 0 40FOR I = 0 TO 9 50FOR J = 0 TO 9 60FOR K = 0 TO 9 70IF I = J THEN 100 80IF J = K THEN 110 85IF I = K THEN 110 90GO TO 130 100IF J = K THEN 120 110S2 = S2 + 10 115GO TO 130 120S1 = S1 + 100 130IF 100I + 10J + K<>999 THEN 150 140S3 = S1 + S2 150NEXT K 160NEXT J 170NEXT I 180PRINT \"COST OF FIRST KIND\"; S1; \"PLUS COST OF 190PRINT \"SECOND KIND\"; S2; \"EQUALS TOTAL\" 200PRINT \"COST OF LOTTERY\" S3 210END", "ref_id": 4594, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "The friendly neighborhood bank is planning to start a lottery toattract new customers. A new account receives a number containingthree digits. The digits are be-tween 000 and 999 andwe will assume that all 1,000 combinations have been givenout. Prizes are awarded according to the following scheme: 3 numbersalike$100 gift certificate 2 numbersalike$10 gift certificate What will be the cost of the lottery to the bank?", "options": ["COST OF FIRST KIND S1", "TOTAL COST S3 + S2", "COST OF LOTTERY S3", "COST OF SECOND KIND S2"], "answer": "C", "solution": "There are 1000 numbers between 000 and 999. Each occurrence ofa number composed of the same digits (like 000,111...) contributes $100 to the total cost, while each occurrence of a number with two similar digits(like 005, 511, 363...) adds $10 to the cost. The total cost is composedof the cost of all \"triplets\\textquotedblright added to the cost of all \"doublets\". 10PRINT \"GAMBLING BANKS\" 20S1 = 0 30S2 = 0 40FOR I = 0 TO 9 50FOR J = 0 TO 9 60FOR K = 0 TO 9 70IF I = J THEN 100 80IF J = K THEN 110 85IF I = K THEN 110 90GO TO 130 100IF J = K THEN 120 110S2 = S2 + 10 115GO TO 130 120S1 = S1 + 100 130IF 100I + 10J + K<>999 THEN 150 140S3 = S1 + S2 150NEXT K 160NEXT J 170NEXT I 180PRINT \"COST OF FIRST KIND\"; S1; \"PLUS COST OF 190PRINT \"SECOND KIND\"; S2; \"EQUALS TOTAL\" 200PRINT \"COST OF LOTTERY\" S3 210END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a FORTRAN program which uses the modified Euler method to simulate the growth of an isolated species from time t = 0 to t =t_f, if the number of individuals at time t is N(t), N(0) = N_0 and the rate of population change (per unit of time), N, is given by: \u1e44 = [K + E(t) - N/M)N](1) where K and M are positive constants and E(t) is a periodic forcing input resulting from seasonal cycles, given by: Case 1: E(t) is sinusoidal with amplitude = A, period =2\\pi/\\omega, \\omega and phase angle \\varphi . Case 2: E(t) is a pulse train of width w, height, h and period Pw, P, h, w > 0, and starting at time t = t_1 .\n\nOptions:\nA. FORTRAN code\nB. C++ code\nC.             Java code\nD. Python code\n\nAnswer: A\n\nReference Solution:\nEquation (1) is a nonlinear differential equation, for which a numerical method is most appropriate. Since t appears explicitly, the EULER (not MEULER!) subroutine is used. Case 1: E(t) = A sin (\\omegat + \\varphi) . \\omega Substituting into equation (1), \u1e44 = (K + A sin (\\omegat + \\varphi) - N/M)N \\omega The program uses P0P0 for N(0) = N_0; omega for\\omega, PHI for \\varphi : \\omega REAL T/0.0/,M,K,N COMMON K,A,OMEGA.,PHI,M READ,N, TFIN,ACCUR, K,A, OMEGA, PHI,M, POPO CALL EULER(N,TFIN,T,POPO,ACCUR) STOP END FUNCTION F(T,W) COMMON K,A,OMEGA,PHI,M REAL M,K F = (K+A\\textasteriskcenteredS IN (0MEGA\\textasteriskcenteredT+PHI) - W/M)\\textasteriskcenteredW RETURN END Case 2: E(t) is a pulse train. The derivation of the TRAIN sub-program to evaluate the pulse train function was given earlier. The program uses POPO for N_0 : REAL T/0.0/,M,K COMMON K,M,H,T1,W,P READ,N,TFIN,ACCUR,K,M,POPO,A,T1,W,P,H CALL EULER (N, TF1N, T, POPO,ACCUR) STOP END FUNCTION F(T,Z) COMMON K,M,H,T1,W,P REAL M,K F = (K+TRAIN(T) - Z/M)\\textasteriskcenteredZ RETURN END FUNCTION TRAIN (T) COMMON K,M,H,T1,W,P TIME = T IF (T.GE. (T1 + P\\textasteriskcenteredW)) TIME = AM0D((T-T1)/(P\\textasteriskcenteredW))\\textasteriskcenteredP\\textasteriskcenteredW + T1 IF ((TIME.LT.T1).OR. (TIME.GE. (T1+W)))TRAIN = 0 IF ((TIME. GE.T1) .AND. (TIME.LT. (T1 + W)))TRAIN = H RETURN END", "ref_id": 4595, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a FORTRAN program which uses the modified Euler method to simulate the growth of an isolated species from time t = 0 to t =t_f, if the number of individuals at time t is N(t), N(0) = N_0 and the rate of population change (per unit of time), N, is given by: \u1e44 = [K + E(t) - N/M)N](1) where K and M are positive constants and E(t) is a periodic forcing input resulting from seasonal cycles, given by: Case 1: E(t) is sinusoidal with amplitude = A, period =2\\pi/\\omega, \\omega and phase angle \\varphi . Case 2: E(t) is a pulse train of width w, height, h and period Pw, P, h, w > 0, and starting at time t = t_1 .", "options": ["FORTRAN code", "C++ code", "Java code", "Python code"], "answer": "A", "solution": "Equation (1) is a nonlinear differential equation, for which a numerical method is most appropriate. Since t appears explicitly, the EULER (not MEULER!) subroutine is used. Case 1: E(t) = A sin (\\omegat + \\varphi) . \\omega Substituting into equation (1), \u1e44 = (K + A sin (\\omegat + \\varphi) - N/M)N \\omega The program uses P0P0 for N(0) = N_0; omega for\\omega, PHI for \\varphi : \\omega REAL T/0.0/,M,K,N COMMON K,A,OMEGA.,PHI,M READ,N, TFIN,ACCUR, K,A, OMEGA, PHI,M, POPO CALL EULER(N,TFIN,T,POPO,ACCUR) STOP END FUNCTION F(T,W) COMMON K,A,OMEGA,PHI,M REAL M,K F = (K+A\\textasteriskcenteredS IN (0MEGA\\textasteriskcenteredT+PHI) - W/M)\\textasteriskcenteredW RETURN END Case 2: E(t) is a pulse train. The derivation of the TRAIN sub-program to evaluate the pulse train function was given earlier. The program uses POPO for N_0 : REAL T/0.0/,M,K COMMON K,M,H,T1,W,P READ,N,TFIN,ACCUR,K,M,POPO,A,T1,W,P,H CALL EULER (N, TF1N, T, POPO,ACCUR) STOP END FUNCTION F(T,Z) COMMON K,M,H,T1,W,P REAL M,K F = (K+TRAIN(T) - Z/M)\\textasteriskcenteredZ RETURN END FUNCTION TRAIN (T) COMMON K,M,H,T1,W,P TIME = T IF (T.GE. (T1 + P\\textasteriskcenteredW)) TIME = AM0D((T-T1)/(P\\textasteriskcenteredW))\\textasteriskcenteredP\\textasteriskcenteredW + T1 IF ((TIME.LT.T1).OR. (TIME.GE. (T1+W)))TRAIN = 0 IF ((TIME. GE.T1) .AND. (TIME.LT. (T1 + W)))TRAIN = H RETURN END"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a program in BASIC to find and print the sum of two complex numbers, inputted from the terminal. You may treat a single complex number as an ordered pair of real numbers.\n\nOptions:\nA. Z1 + Z2 = (a/c,b/d)\nB. Z1 + Z2 = (a+c,b+d)\nC.             Z1 + Z2 = (a-c,b-d)\nD. Z1 + Z2 = (a*c,b*d)\n\nAnswer: B\n\nReference Solution:\nIf Z_1 and Z_2 are two complex numbers given by a + bi and c +di respectively wherei= \\surd-1 , we define Z_1 + Z_2 = B (a + c) + (b + d)i. In terms of ordered pairs of real numbers, Z_1 = (a, b), Z_2 = (c, d), and Z_1 + Z_2 = (a+c,b+d), where a, b, c and d are the coordinates of the two points representing given numbers: a and c are on the real axis, b and d are on the imaginary axis The program below used the input of a particular number 999 to ter-minate the program. This is done by means of an IF .., THEN statement, which has the form IF variable = expression THEN label AND works as fol-lows: If the value of given variable equals the given expression, then the next statement to be executed is the one with the label following the word THEN. Otherwise, the computer goes to the next statement. 1\\O PRINT \"THIS PROGRAM ADDS TWO COMPLEX 15 PRINT \"NUMBERS IN A, B FORM\" 2\\O PRINT 3\\O PRINT \"TYPE IN THE FIRST NUMBER\" 4\\O INPUT A, B 5\\O IF A = 999 THEN 999 6\\O PRINT \"TYPE IN THE SECOND NUMBER\" 7\\O INPUT C,D 8\\O PRINT \"THE SUM Z1 + Z2 = (\";A + C; \" , \" ;B + D; \")\" 9\\O GO TO 20 999 END", "ref_id": 4596, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a program in BASIC to find and print the sum of two complex numbers, inputted from the terminal. You may treat a single complex number as an ordered pair of real numbers.", "options": ["Z1 + Z2 = (a/c,b/d)", "Z1 + Z2 = (a+c,b+d)", "Z1 + Z2 = (a-c,b-d)", "Z1 + Z2 = (a*c,b*d)"], "answer": "B", "solution": "If Z_1 and Z_2 are two complex numbers given by a + bi and c +di respectively wherei= \\surd-1 , we define Z_1 + Z_2 = B (a + c) + (b + d)i. In terms of ordered pairs of real numbers, Z_1 = (a, b), Z_2 = (c, d), and Z_1 + Z_2 = (a+c,b+d), where a, b, c and d are the coordinates of the two points representing given numbers: a and c are on the real axis, b and d are on the imaginary axis The program below used the input of a particular number 999 to ter-minate the program. This is done by means of an IF .., THEN statement, which has the form IF variable = expression THEN label AND works as fol-lows: If the value of given variable equals the given expression, then the next statement to be executed is the one with the label following the word THEN. Otherwise, the computer goes to the next statement. 1\\O PRINT \"THIS PROGRAM ADDS TWO COMPLEX 15 PRINT \"NUMBERS IN A, B FORM\" 2\\O PRINT 3\\O PRINT \"TYPE IN THE FIRST NUMBER\" 4\\O INPUT A, B 5\\O IF A = 999 THEN 999 6\\O PRINT \"TYPE IN THE SECOND NUMBER\" 7\\O INPUT C,D 8\\O PRINT \"THE SUM Z1 + Z2 = (\";A + C; \" , \" ;B + D; \")\" 9\\O GO TO 20 999 END"}, "question": "task_1"}}, {"data": {"text": "Question:\nDefine a BASIC function which takes on the value \\surd(x^2 - y^2) if x^2 \\geq y^2, but \\surd(y^2 - x^2) if y^2 > x^2.\n\nOptions:\nA. 1 DEF FNA(X,Y) 11 LET X1 = X^2 - Y^2 12 IF X1 >= 0 then 14 13 LET X1 = -X1 14 LET FNA = X1^0.5 15 FNEND\nB. 1 DEF FNA(X,Y) 11 LET X1 = X^2 + Y^2 12 IF X1 >= 0 then 14 13 LET X1 = -X1 14 LET FNA = X1^0.5 15 FNEND\nC.             1 DEF FNA(X,Y) 11 LET X1 = X^2 - Y^2 12 IF X1 > 0 then 14 13 LET X1 = -X1 14 LET FNA = X1^0.5 15 FNEND\nD. 1 DEF FNA(X,Y) 11 LET X1 = X^2 - Y^2 12 IF X1 <= 0 then 14 13 LET X1 = -X1 14 LET FNA = X1^0.5 15 FNEND\n\nAnswer: A\n\nReference Solution:\nA multiline function which takes into account the sign of x^2 - y^2 is needed for solving this problem. The multiline function starts with a defining statement. It does not include an assignment statement (unlike the DEF statement of a single line function), just the function name and a list of \"dummy\" variables. BASIC statements defining the calculation of the function follow. Also, there must be a function ending command. It is the same for all multiline functions and consists of a statement number followed by the word FNEND. Note that the multiline function can be placed anywhere in the program. As in the case of a single line function, it is good program-ming practice to place all functions at the beginning (or end) where they can be kept track of by the programmer. See the program below: 1\\O\\O DEF FNA(X,Y) 11\\O LET X1 = X_\\uparrow2 - Y_\\uparrow2 12\\O IF X1 > = \\O then 14\\O 13\\O LET X1 = -X1 14\\O LET FNA = X1_\\uparrow\\O.5 15\\O FNEND", "ref_id": 4597, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Define a BASIC function which takes on the value \\surd(x^2 - y^2) if x^2 \\geq y^2, but \\surd(y^2 - x^2) if y^2 > x^2.", "options": ["1 DEF FNA(X,Y) 11 LET X1 = X^2 - Y^2 12 IF X1 >= 0 then 14 13 LET X1 = -X1 14 LET FNA = X1^0.5 15 FNEND", "1 DEF FNA(X,Y) 11 LET X1 = X^2 + Y^2 12 IF X1 >= 0 then 14 13 LET X1 = -X1 14 LET FNA = X1^0.5 15 FNEND", "1 DEF FNA(X,Y) 11 LET X1 = X^2 - Y^2 12 IF X1 > 0 then 14 13 LET X1 = -X1 14 LET FNA = X1^0.5 15 FNEND", "1 DEF FNA(X,Y) 11 LET X1 = X^2 - Y^2 12 IF X1 <= 0 then 14 13 LET X1 = -X1 14 LET FNA = X1^0.5 15 FNEND"], "answer": "A", "solution": "A multiline function which takes into account the sign of x^2 - y^2 is needed for solving this problem. The multiline function starts with a defining statement. It does not include an assignment statement (unlike the DEF statement of a single line function), just the function name and a list of \"dummy\" variables. BASIC statements defining the calculation of the function follow. Also, there must be a function ending command. It is the same for all multiline functions and consists of a statement number followed by the word FNEND. Note that the multiline function can be placed anywhere in the program. As in the case of a single line function, it is good program-ming practice to place all functions at the beginning (or end) where they can be kept track of by the programmer. See the program below: 1\\O\\O DEF FNA(X,Y) 11\\O LET X1 = X_\\uparrow2 - Y_\\uparrow2 12\\O IF X1 > = \\O then 14\\O 13\\O LET X1 = -X1 14\\O LET FNA = X1_\\uparrow\\O.5 15\\O FNEND"}, "question": "task_1"}}, {"data": {"text": "Question:\nWrite a FORTRAN program which uses the modified Euler method to simulate the competition of two species of population, N_1(t) and N_2(t), isolated from the environment, from time t = 0 to t =t_f, if it is observed that: \u1e44_1 = (A_1 - K_11N_1 - K_12N_2) N_1(1) \u1e44_2 = (A_2 - K_21N_1 - K_22N_2) N_1(2) where \u1e44_1\u1e44_2 are the time rates of change of N_1(t) and N_2(t), respectively. A_1 and A_2 are positive constants involving natural birth/death rates for each species when isolated. The K_ij-are positive constants involving cross-effects between species. Initially, N_1(0) = N_10, and N_2(0) = N_20 .\n\nOptions:\nA. The program uses the original Euler method instead of the modified one\nB. The program applies the modified Euler method to both equations simultaneously\nC.             The program first applies the modified method to equation (1), then to equation (2). By putting N1 and N2 in a COMMON block, the new computed value of N1 will be used in determining N2.\nD. The program uses a single equation to calculate N1 and N2\n\nAnswer: C\n\nReference Solution:\nFirst, note that equations (1) and (2) are coupled, non-linear, first-order differential equations. Since exact solutions of such equations are rare, a numerical method, such as the modified Euler's method, is essential. The program first applies the modified method to equation (1), then to equation (2). By putting N1 and N2 in a COMMON block, the new computed value of N1 will be used in determining N2. A logical flag, TWO, is used to determine which equation is being integrated: REAL T/0.0/,TFIN,DT,REALN,ACCUR,N1, 1N2,N10,N20,A1,A2,K11,K12, 1K21,K22 INTEGER I,N COMMON TW0,N1 ,N2 ,A1 ,A2, K11, K12, K21, K22 LOGICAL TWO/.FALSE./ READ, N,TFIN,ACCUR, N10,N20,A1,A2, K11, K12, K21,K22 PRINT, T,N10,N20 REALN = N DT = TFIN/REALN N1 = N10 N2 = N20 DO 10 I = 1,N T = T + DT CALL MEULER(T,N1,ACCUR,DT) TWO = .TRUE. CALL MEULER(T,N2,ACCUR,DT) TWO = .FALSE. PRINT,T,N1,N2 10CONTINUE STOP END FUNCTION G(W) COMMON TWO,N1, N2,A1,A2, K11, KL2, K21, K22 REAL G, W,N1 ,N2 ,A1 ,A2, K11, K12, K21, K22 LOGICAL TWO G = (A1 - K11\\textasteriskcenteredW - K12\\textasteriskcenteredN2)\\textasteriskcenteredW IF (TWO) G = (A2 - K21\\textasteriskcenteredN1 - K22\\textasteriskcenteredW)\\textasteriskcenteredW RETURN END", "ref_id": 4598, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "Write a FORTRAN program which uses the modified Euler method to simulate the competition of two species of population, N_1(t) and N_2(t), isolated from the environment, from time t = 0 to t =t_f, if it is observed that: \u1e44_1 = (A_1 - K_11N_1 - K_12N_2) N_1(1) \u1e44_2 = (A_2 - K_21N_1 - K_22N_2) N_1(2) where \u1e44_1\u1e44_2 are the time rates of change of N_1(t) and N_2(t), respectively. A_1 and A_2 are positive constants involving natural birth/death rates for each species when isolated. The K_ij-are positive constants involving cross-effects between species. Initially, N_1(0) = N_10, and N_2(0) = N_20 .", "options": ["The program uses the original Euler method instead of the modified one", "The program applies the modified Euler method to both equations simultaneously", "The program first applies the modified method to equation (1), then to equation (2). By putting N1 and N2 in a COMMON block, the new computed value of N1 will be used in determining N2.", "The program uses a single equation to calculate N1 and N2"], "answer": "C", "solution": "First, note that equations (1) and (2) are coupled, non-linear, first-order differential equations. Since exact solutions of such equations are rare, a numerical method, such as the modified Euler's method, is essential. The program first applies the modified method to equation (1), then to equation (2). By putting N1 and N2 in a COMMON block, the new computed value of N1 will be used in determining N2. A logical flag, TWO, is used to determine which equation is being integrated: REAL T/0.0/,TFIN,DT,REALN,ACCUR,N1, 1N2,N10,N20,A1,A2,K11,K12, 1K21,K22 INTEGER I,N COMMON TW0,N1 ,N2 ,A1 ,A2, K11, K12, K21, K22 LOGICAL TWO/.FALSE./ READ, N,TFIN,ACCUR, N10,N20,A1,A2, K11, K12, K21,K22 PRINT, T,N10,N20 REALN = N DT = TFIN/REALN N1 = N10 N2 = N20 DO 10 I = 1,N T = T + DT CALL MEULER(T,N1,ACCUR,DT) TWO = .TRUE. CALL MEULER(T,N2,ACCUR,DT) TWO = .FALSE. PRINT,T,N1,N2 10CONTINUE STOP END FUNCTION G(W) COMMON TWO,N1, N2,A1,A2, K11, KL2, K21, K22 REAL G, W,N1 ,N2 ,A1 ,A2, K11, K12, K21, K22 LOGICAL TWO G = (A1 - K11\\textasteriskcenteredW - K12\\textasteriskcenteredN2)\\textasteriskcenteredW IF (TWO) G = (A2 - K21\\textasteriskcenteredN1 - K22\\textasteriskcenteredW)\\textasteriskcenteredW RETURN END"}, "question": "task_1"}}, {"data": {"text": "Question:\nThe binomial distribution is given by b(x) = (^n_x)p^xq^n^-x where (^n_x) = n!/{x! (n-x)!} for integers n and x, and q = 1-p. Write a function that computes b for given n, x, and p. Feel free to use the factorial function developed in chapter 19.\n\nOptions:\nA. FUNCTION B(P,X,N)\nB. FUNCTION B(P,N,X)\nC.             FUNCTION B(X,N,P)\nD. FUNCTION B(N,P,X)\n\nAnswer: B\n\nReference Solution:\nA straightforward answer is based on the notion of a function. FUNCTION B(P,N,X) INTEGER X Z = P \\textasteriskcentered\\textasteriskcentered X \\textasteriskcentered ((1.0-P) \\textasteriskcentered\\textasteriskcentered (N-X)) B = Z \\textasteriskcentered FACT(N) / (FACT(X) \\textasteriskcentered FACT(N-X)) RETURN END", "ref_id": 4599, "meta_info": {"subject": "computer science.csv", "src": "stemez-ComputerScience", "question": "The binomial distribution is given by b(x) = (^n_x)p^xq^n^-x where (^n_x) = n!/{x! (n-x)!} for integers n and x, and q = 1-p. Write a function that computes b for given n, x, and p. Feel free to use the factorial function developed in chapter 19.", "options": ["FUNCTION B(P,X,N)", "FUNCTION B(P,N,X)", "FUNCTION B(X,N,P)", "FUNCTION B(N,P,X)"], "answer": "B", "solution": "A straightforward answer is based on the notion of a function. FUNCTION B(P,N,X) INTEGER X Z = P \\textasteriskcentered\\textasteriskcentered X \\textasteriskcentered ((1.0-P) \\textasteriskcentered\\textasteriskcentered (N-X)) B = Z \\textasteriskcentered FACT(N) / (FACT(X) \\textasteriskcentered FACT(N-X)) RETURN END"}, "question": "task_1"}}]